/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/image_screen/ImageViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>

ImageViewBase::ImageViewBase() :
    buttonCallback(this, &ImageViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ImageViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    background.setPosition(0, 0, 320, 240);
    background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image.setXY(0, 0);
    image.setBitmap(touchgfx::Bitmap(BITMAP_IMAGE0_ID));

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setPosition(0, -50, 50, 50);
    flexButton1.setAction(flexButtonCallback);

    menuLeftButton.setXY(16, 85);
    menuLeftButton.setBitmaps(touchgfx::Bitmap(BITMAP_LEFTARROW_ID), touchgfx::Bitmap(BITMAP_LEFTARROWDARK_ID));
    menuLeftButton.setAction(buttonCallback);

    menuRightButton.setXY(288, 86);
    menuRightButton.setBitmaps(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID), touchgfx::Bitmap(BITMAP_RIGHTARROWDARK_ID));
    menuRightButton.setAction(buttonCallback);

    button1.setXY(18, 11);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_GOBACK_ID), touchgfx::Bitmap(BITMAP_GOBACK_ID));
    button1.setAction(buttonCallback);

    add(__background);
    add(background);
    add(image);
    add(flexButton1);
    add(menuLeftButton);
    add(menuRightButton);
    add(button1);
}

void ImageViewBase::setupScreen()
{

}

void ImageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &menuLeftButton)
    {
        //Interaction3
        //When menuLeftButton clicked call virtual function
        //Call leftButtonClicked
        leftButtonClicked();
    }
    else if (&src == &menuRightButton)
    {
        //Interaction2
        //When menuRightButton clicked call virtual function
        //Call rightButtonClicked
        rightButtonClicked();
    }
    else if (&src == &button1)
    {
        //Interaction4
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}

void ImageViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
