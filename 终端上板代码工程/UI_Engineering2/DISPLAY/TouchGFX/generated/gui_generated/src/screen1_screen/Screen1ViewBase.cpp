/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    background.setPosition(0, 0, 320, 240);
    background.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    logoTextContainer.setPosition(140, 68, 40, 119);

    logoText.setXY(0, 0);
    logoText.setBitmap(touchgfx::Bitmap(BITMAP_LOGOTEXT_ID));
    logoTextContainer.add(logoText);

    logoX.setXY(140, 68);
    logoX.setBitmap(touchgfx::Bitmap(BITMAP_LOGOX_ID));

    subtitle.setXY(30, 139);
    subtitle.setBitmap(touchgfx::Bitmap(BITMAP_SUBTITLE_ID));
    subtitle.setAlpha(0);

    seperatorLine.setPosition(-258, 185, 258, 2);
    seperatorLine.setColor(touchgfx::Color::getColorFromRGB(21, 142, 181));

    menuIcon0.setXY(123, 65);
    menuIcon0.setBitmap(touchgfx::Bitmap(BITMAP_NETWORKDEBUG_ID));
    menuIcon0.setAlpha(0);

    menuLeftButton.setXY(16, 85);
    menuLeftButton.setBitmaps(touchgfx::Bitmap(BITMAP_LEFTARROW_ID), touchgfx::Bitmap(BITMAP_LEFTARROWDARK_ID));
    menuLeftButton.setAction(buttonCallback);
    menuLeftButton.setAlpha(0);

    menuRightButton.setXY(288, 86);
    menuRightButton.setBitmaps(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID), touchgfx::Bitmap(BITMAP_RIGHTARROWDARK_ID));
    menuRightButton.setAction(buttonCallback);
    menuRightButton.setAlpha(0);

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setPosition(0, -71, 50, 50);
    flexButton1.setAction(flexButtonCallback);

    headline.setPosition(0, 12, 320, 32);
    headline.setColor(touchgfx::Color::getColorFromRGB(64, 190, 222));
    headline.setLinespacing(0);
    headline.setAlpha(0);
    headline.setTypedText(touchgfx::TypedText(T_NETCONFIG));

    digitalClock1.setPosition(111, 147, 100, 25);
    digitalClock1.setColor(touchgfx::Color::getColorFromRGB(36, 44, 199));
    digitalClock1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_USK8));
    digitalClock1.displayLeadingZeroForHourIndicator(true);
    digitalClock1.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock1.setTime24Hour(0, 0, 0);
    digitalClock1.setVisible(false);

    add(__background);
    add(background);
    add(logoTextContainer);
    add(logoX);
    add(subtitle);
    add(seperatorLine);
    add(menuIcon0);
    add(menuLeftButton);
    add(menuRightButton);
    add(flexButton1);
    add(headline);
    add(digitalClock1);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &menuLeftButton)
    {
        //Interaction1
        //When menuLeftButton clicked call virtual function
        //Call leftButtonClicked
        leftButtonClicked();
    }
    else if (&src == &menuRightButton)
    {
        //Interaction2
        //When menuRightButton clicked call virtual function
        //Call rightButtonClicked
        rightButtonClicked();
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //SwitchScreenToImageScreen
        //When flexButton1 clicked change screen to Image
        //Go to Image with no screen transition
        application().gotoImageScreenNoTransition();

        //SwitchScreenToListScreen
        //When flexButton1 clicked change screen to List
        //Go to List with no screen transition
        application().gotoListScreenNoTransition();

        //SwitchScreenToScreen2
        //When flexButton1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();

        //SwitchScreenToNetworkMenu
        //When flexButton1 clicked change screen to NetworkMenu
        //Go to NetworkMenu with no screen transition
        application().gotoNetworkMenuScreenNoTransition();

        //SwitchScreenToDebugWindow
        //When flexButton1 clicked change screen to DebugWindow
        //Go to DebugWindow with no screen transition
        application().gotoDebugWindowScreenNoTransition();
    }
}
