/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LISTVIEWBASE_HPP
#define LISTVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/list_screen/ListPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/languageSelectorElement.hpp>
#include <gui/containers/languageSelectorElementCenter.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>

class ListViewBase : public touchgfx::View<ListPresenter>
{
public:
    ListViewBase();
    virtual ~ListViewBase() {}
    virtual void setupScreen();

    virtual void languageSelectorWheelUpdateItem(languageSelectorElement& item, int16_t itemIndex)
    {
        // Override and implement this function in List
    }

    virtual void languageSelectorWheelUpdateCenterItem(languageSelectorElementCenter& item, int16_t itemIndex)
    {
        // Override and implement this function in List
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::ScrollWheelWithSelectionStyle languageSelectorWheel;
    touchgfx::DrawableListItems<languageSelectorElement, 4> languageSelectorWheelListItems;
    touchgfx::DrawableListItems<languageSelectorElementCenter, 2> languageSelectorWheelSelectedListItems;
    touchgfx::TextArea headline;
    touchgfx::Button button1;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ListViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<ListViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // LISTVIEWBASE_HPP
