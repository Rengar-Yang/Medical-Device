; Listing generated by Microsoft (R) Optimizing Compiler Version 19.30.30705.0 

	TITLE	D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\build\Debug\obj\Texts.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?currentLanguage@Texts@touchgfx@@0GA		; touchgfx::Texts::currentLanguage
PUBLIC	?texts_all_languages@@3QBGB			; texts_all_languages
EXTRN	?indicesGb@@3QBIB:BYTE				; indicesGb
EXTRN	?indicesKr@@3QBIB:BYTE				; indicesKr
EXTRN	?indicesCn@@3QBIB:BYTE				; indicesCn
EXTRN	?indicesJp@@3QBIB:BYTE				; indicesJp
EXTRN	?indicesDk@@3QBIB:BYTE				; indicesDk
EXTRN	?indicesFr@@3QBIB:BYTE				; indicesFr
EXTRN	?indicesTn@@3QBIB:BYTE				; indicesTn
_BSS	SEGMENT
?currentLanguage@Texts@touchgfx@@0GA DW 01H DUP (?)	; touchgfx::Texts::currentLanguage
_BSS	ENDS
msvcjmc	SEGMENT
__692521D7_concurrencysal@h DB 01H
__A324AF7F_sal@h DB 01H
__3FA7CF14_vadefs@h DB 01H
__4DFECF8D_vcruntime@h DB 01H
__73751FBD_stdarg@h DB 01H
__6569C2CA_corecrt@h DB 01H
__C3DF3361_assert@h DB 01H
__47AAA172_stdint@h DB 01H
__BA83647B_Config@hpp DB 01H
__AA120D12_Types@hpp DB 01H
__249BB391_Unicode@hpp DB 01H
__2B5BEDA9_Font@hpp DB 01H
__A92D1555_TextProvider@hpp DB 01H
__84151005_Texts@hpp DB 01H
__7903F453_TypedText@hpp DB 01H
__2CF17959_Bitmap@hpp DB 01H
__DBFE701C_Event@hpp DB 01H
__B32C0219_ClickEvent@hpp DB 01H
__64663CFC_DragEvent@hpp DB 01H
__82CEF128_GestureEvent@hpp DB 01H
__D4BF07FA_Drawable@hpp DB 01H
__957D1AC7_BlitOp@hpp DB 01H
__D0DFFAC6_winpackagefamily@h DB 01H
__D0D0F397_winapifamily@h DB 01H
__94A3FDDD_sdkddkver@h DB 01H
__3AC9D7D1_excpt@h DB 01H
__1C9F390F_specstrings_undef@h DB 01H
__36A21E95_specstrings_strict@h DB 01H
__452FE810_sdv_driverspecs@h DB 01H
__30F344B3_driverspecs@h DB 01H
__BD886E18_specstrings@h DB 01H
__5DB64B66_corecrt_wctype@h DB 01H
__B2D2BA86_ctype@h DB 01H
__BF9C347F_kernelspecs@h DB 01H
__79C7FC57_basetsd@h DB 01H
__CDDAF8CA_errno@h DB 01H
__45EC4379_vcruntime_string@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__D545DD43_guiddef@h DB 01H
__DF4F952E_pshpack4@h DB 01H
__7FCD0577_poppack@h DB 01H
__DBC2E99C_pshpack2@h DB 01H
__D6556C4A_pshpack8@h DB 01H
__D98457C5_pshpack1@h DB 01H
__614C4572_apiset@h DB 01H
__8500295D_ktmtypes@h DB 01H
__D5DDFBF3_winnt@h DB 01H
__156BD51A_minwindef@h DB 01H
__F9B9A8F7_windef@h DB 01H
__BD2C4590_apisetcconv@h DB 01H
__18251742_minwinbase@h DB 01H
__23611203_apiquery2@h DB 01H
__C914CD48_processenv@h DB 01H
__996311FD_fileapi@h DB 01H
__41AEF397_fileapifromapp@h DB 01H
__65579FF3_debugapi@h DB 01H
__476FCB5A_utilapiset@h DB 01H
__089D2E42_handleapi@h DB 01H
__B16F04F5_errhandlingapi@h DB 01H
__81CCB02F_fibersapi@h DB 01H
__A9B4C5F0_namedpipeapi@h DB 01H
__C209F2C8_profileapi@h DB 01H
__34C22DC8_heapapi@h DB 01H
__8A238485_ioapiset@h DB 01H
__4826BA69_synchapi@h DB 01H
__6A31599C_interlockedapi@h DB 01H
__439612F0_processthreadsapi@h DB 01H
__7BB37CFA_sysinfoapi@h DB 01H
__5733279A_memoryapi@h DB 01H
__6D078C0D_enclaveapi@h DB 01H
__3663CE50_threadpoollegacyapiset@h DB 01H
__E16717D9_threadpoolapiset@h DB 01H
__4A6035CC_jobapi@h DB 01H
__62EEB553_jobapi2@h DB 01H
__9F22E7EF_wow64apiset@h DB 01H
__E86B4A9A_libloaderapi@h DB 01H
__EB536E54_securitybaseapi@h DB 01H
__E915C287_namespaceapi@h DB 01H
__C66F44F2_systemtopologyapi@h DB 01H
__B6175B28_processtopologyapi@h DB 01H
__9E4AD838_securityappcontainer@h DB 01H
__F599FDAE_realtimeapiset@h DB 01H
__D4435474_winerror@h DB 01H
__F94F31E6_timezoneapi@h DB 01H
__B3ED30D4_winbase@h DB 01H
__E9F7D11F_wingdi@h DB 01H
__AC21C382_tvout@h DB 01H
__DB057BA3_winuser@h DB 01H
__A1BAD304_datetimeapi@h DB 01H
__30E2BD27_winnls@h DB 01H
__B7FF4B97_stringapiset@h DB 01H
__66C87297_wincontypes@h DB 01H
__1317218F_consoleapi@h DB 01H
__8D62D26D_consoleapi2@h DB 01H
__8CA0B85A_consoleapi3@h DB 01H
__CE39E65B_wincon@h DB 01H
__F6801ACC_verrsrc@h DB 01H
__1CB844D9_winver@h DB 01H
__D0CFA71C_reason@h DB 01H
__F3D58382_winreg@h DB 01H
__34C28572_wnnc@h DB 01H
__0617DE59_winnetwk@h DB 01H
__93AC9EF8_cderr@h DB 01H
__3AE29FFA_dde@h DB 01H
__48250249_ddeml@h DB 01H
__4605C6DD_dlgs@h DB 01H
__C826BBA2_lzexpand@h DB 01H
__B8DFB118_mmsyscom@h DB 01H
__EDC2A662_mciapi@h DB 01H
__87B17D5B_mmiscapi@h DB 01H
__0C4862FC_mmiscapi2@h DB 01H
__83F5D08C_playsoundapi@h DB 01H
__CA3F1D44_mmeapi@h DB 01H
__BD2270BE_timeapi@h DB 01H
__397CAA2F_joystickapi@h DB 01H
__05A21AEE_mmsystem@h DB 01H
__6E1DF0B6_nb30@h DB 01H
__75098885_rpcdcep@h DB 01H
__D8AC8DD5_rpcdce@h DB 01H
__2F1118EF_rpcnsi@h DB 01H
__0DE10DFC_rpcnterr@h DB 01H
__4497164E_rpcasync@h DB 01H
__06CA6763_rpc@h DB 01H
__C32EC2F2_shellapi@h DB 01H
__B289ECB8_winperf@h DB 01H
__07EA6B7C_inaddr@h DB 01H
__9ED0251E_winsock@h DB 01H
__FD938996_bcrypt@h DB 01H
__4E32BFB9_ncrypt@h DB 01H
__815AA9AD_dpapi@h DB 01H
__0B2E95FF_wincrypt@h DB 01H
__288F6C52_winefs@h DB 01H
__B3F2ECA2_rpcnsip@h DB 01H
__AFB43543_rpcsal@h DB 01H
__16A21838_rpcndr@h DB 01H
__5314805F_wtypesbase@h DB 01H
__6EEE3703_wtypes@h DB 01H
__A7113148_winioctl@h DB 01H
__C595A37C_winsmcrd@h DB 01H
__42C56FB7_winscard@h DB 01H
__C4703BCA_prsht@h DB 01H
__D4D77F19_winspool@h DB 01H
__6C20D4D3_corecrt_malloc@h DB 01H
__C9393812_stddef@h DB 01H
__D493B9BD_corecrt_search@h DB 01H
__1473E23E_corecrt_wstdlib@h DB 01H
__F9DC8F4D_limits@h DB 01H
__B49664B7_stdlib@h DB 01H
__B47185B4_unknwnbase@h DB 01H
__B64C33F8_objidlbase@h DB 01H
__EA871F04_cguid@h DB 01H
__C78732AB_combaseapi@h DB 01H
__744BF5DA_unknwn@h DB 01H
__66C491E7_objidl@h DB 01H
__A217658B_oaidl@h DB 01H
__8485F416_propidlbase@h DB 01H
__65805CE1_coml2api@h DB 01H
__C7AD586F_oleidl@h DB 01H
__CBE55221_servprov@h DB 01H
__5B1E268A_msxml@h DB 01H
__1B3D3678_urlmon@h DB 01H
__EC5BC72C_propidl@h DB 01H
__0DD0E8F8_objbase@h DB 01H
__6DA674A0_oleauto@h DB 01H
__F7931962_ole2@h DB 01H
__870E9EB1_commdlg@h DB 01H
__A118E6DC_stralign@h DB 01H
__8B10FA9F_winsvc@h DB 01H
__BEDBF511_mcx@h DB 01H
__D3BCC989_ime_cmodes@h DB 01H
__B1694579_imm@h DB 01H
__4D4D253D_windows@h DB 01H
__ABCE9A4E_Atomic@hpp DB 01H
__F94C5AC5_DMA@hpp DB 01H
__4E2CBAC2_FrameBufferAllocator@hpp DB 01H
__A4D56495_UIEventListener@hpp DB 01H
__1D5BF509_Gestures@hpp DB 01H
__96E53B9D_TextureMapTypes@hpp DB 01H
__CDC14C75_DebugPrinter@hpp DB 01H
__37BDFB05_LCD@hpp DB 01H
__EB05E2F7_MCUInstrumentation@hpp DB 01H
__35B173D9_ButtonController@hpp DB 01H
__1C60C219_TouchController@hpp DB 01H
__B1BE347B_HAL@hpp DB 01H
__E159C7D2_TypedTextDatabase@hpp DB 01H
__43DC1578_Texts@cpp DB 01H
msvcjmc	ENDS
CONST	SEGMENT
?texts_all_languages@@3QBGB DW 053H			; texts_all_languages
	DW	054H
	DW	04dH
	DW	033H
	DW	032H
	DW	04cH
	DW	034H
	DW	033H
	DW	031H
	DW	0aH
	DW	038H
	DW	030H
	DW	04dH
	DW	048H
	DW	07aH
	DW	02cH
	DW	020H
	DW	036H
	DW	034H
	DW	020H
	DW	06bH
	DW	042H
	DW	020H
	DW	052H
	DW	041H
	DW	04dH
	DW	0aH
	DW	045H
	DW	078H
	DW	074H
	DW	065H
	DW	072H
	DW	06eH
	DW	061H
	DW	06cH
	DW	020H
	DW	051H
	DW	053H
	DW	050H
	DW	049H
	DW	020H
	DW	066H
	DW	06cH
	DW	061H
	DW	073H
	DW	068H
	DW	0aH
	DW	051H
	DW	057H
	DW	047H
	DW	041H
	DW	020H
	DW	053H
	DW	050H
	DW	049H
	DW	020H
	DW	064H
	DW	069H
	DW	073H
	DW	070H
	DW	06cH
	DW	061H
	DW	079H
	DW	0aH
	DW	031H
	DW	036H
	DW	020H
	DW	062H
	DW	069H
	DW	074H
	DW	020H
	DW	063H
	DW	06fH
	DW	06cH
	DW	06fH
	DW	072H
	DW	0aH
	DW	045H
	DW	078H
	DW	074H
	DW	065H
	DW	072H
	DW	06eH
	DW	061H
	DW	06cH
	DW	020H
	DW	053H
	DW	050H
	DW	049H
	DW	020H
	DW	066H
	DW	06cH
	DW	061H
	DW	073H
	DW	068H
	DW	0aH
	DW	051H
	DW	057H
	DW	047H
	DW	041H
	DW	020H
	DW	053H
	DW	050H
	DW	049H
	DW	020H
	DW	064H
	DW	069H
	DW	073H
	DW	070H
	DW	06cH
	DW	061H
	DW	079H
	DW	0aH
	DW	031H
	DW	036H
	DW	020H
	DW	062H
	DW	069H
	DW	074H
	DW	020H
	DW	063H
	DW	06fH
	DW	06cH
	DW	06fH
	DW	072H
	DW	0aH
	DW	00H
	DW	053H
	DW	054H
	DW	04dH
	DW	033H
	DW	032H
	DW	04cH
	DW	034H
	DW	033H
	DW	031H
	DW	0aH
	DW	038H
	DW	030H
	DW	04dH
	DW	048H
	DW	07aH
	DW	02cH
	DW	020H
	DW	036H
	DW	034H
	DW	020H
	DW	06bH
	DW	042H
	DW	020H
	DW	052H
	DW	041H
	DW	04dH
	DW	0aH
	DW	045H
	DW	078H
	DW	074H
	DW	065H
	DW	072H
	DW	06eH
	DW	061H
	DW	06cH
	DW	020H
	DW	051H
	DW	053H
	DW	050H
	DW	049H
	DW	020H
	DW	066H
	DW	06cH
	DW	061H
	DW	073H
	DW	068H
	DW	0aH
	DW	051H
	DW	057H
	DW	047H
	DW	041H
	DW	020H
	DW	053H
	DW	050H
	DW	049H
	DW	020H
	DW	064H
	DW	069H
	DW	073H
	DW	070H
	DW	06cH
	DW	061H
	DW	079H
	DW	0aH
	DW	031H
	DW	036H
	DW	020H
	DW	062H
	DW	069H
	DW	074H
	DW	020H
	DW	063H
	DW	06fH
	DW	06cH
	DW	06fH
	DW	072H
	DW	0aH
	DW	00H
	DW	042H
	DW	072H
	DW	075H
	DW	067H
	DW	020H
	DW	04aH
	DW	06fH
	DW	079H
	DW	073H
	DW	074H
	DW	069H
	DW	063H
	DW	06bH
	DW	020H
	DW	074H
	DW	069H
	DW	06cH
	DW	020H
	DW	061H
	DW	074H
	DW	0aH
	DW	073H
	DW	06bH
	DW	069H
	DW	066H
	DW	074H
	DW	065H
	DW	020H
	DW	062H
	DW	069H
	DW	06cH
	DW	06cH
	DW	065H
	DW	064H
	DW	065H
	DW	072H
	DW	0aH
	DW	0aH
	DW	04bH
	DW	06cH
	DW	069H
	DW	06bH
	DW	020H
	DW	070H
	DW	0e5H
	DW	020H
	DW	06aH
	DW	06fH
	DW	079H
	DW	073H
	DW	074H
	DW	069H
	DW	063H
	DW	06bH
	DW	065H
	DW	074H
	DW	020H
	DW	0aH
	DW	066H
	DW	06fH
	DW	072H
	DW	020H
	DW	061H
	DW	074H
	DW	020H
	DW	067H
	DW	0e5H
	DW	020H
	DW	074H
	DW	069H
	DW	06cH
	DW	020H
	DW	06dH
	DW	065H
	DW	06eH
	DW	075H
	DW	00H
	DW	055H
	DW	073H
	DW	065H
	DW	020H
	DW	04aH
	DW	06fH
	DW	079H
	DW	073H
	DW	074H
	DW	069H
	DW	063H
	DW	06bH
	DW	020H
	DW	074H
	DW	06fH
	DW	0aH
	DW	04eH
	DW	061H
	DW	076H
	DW	069H
	DW	067H
	DW	061H
	DW	074H
	DW	065H
	DW	020H
	DW	049H
	DW	06dH
	DW	061H
	DW	067H
	DW	065H
	DW	073H
	DW	0aH
	DW	0aH
	DW	043H
	DW	06cH
	DW	069H
	DW	063H
	DW	06bH
	DW	020H
	DW	069H
	DW	074H
	DW	020H
	DW	074H
	DW	06fH
	DW	020H
	DW	067H
	DW	06fH
	DW	020H
	DW	062H
	DW	061H
	DW	063H
	DW	06bH
	DW	0aH
	DW	074H
	DW	06fH
	DW	020H
	DW	074H
	DW	068H
	DW	065H
	DW	020H
	DW	06dH
	DW	065H
	DW	06eH
	DW	075H
	DW	00H
	DW	042H
	DW	072H
	DW	075H
	DW	067H
	DW	020H
	DW	04aH
	DW	06fH
	DW	079H
	DW	073H
	DW	074H
	DW	069H
	DW	063H
	DW	06bH
	DW	020H
	DW	074H
	DW	069H
	DW	06cH
	DW	020H
	DW	061H
	DW	074H
	DW	020H
	DW	04eH
	DW	061H
	DW	076H
	DW	069H
	DW	067H
	DW	065H
	DW	072H
	DW	065H
	DW	00H
	DW	0627H
	DW	0633H
	DW	062aH
	DW	062eH
	DW	062fH
	DW	0627H
	DW	0645H
	DW	020H
	DW	0639H
	DW	0635H
	DW	0627H
	DW	020H
	DW	0627H
	DW	0644H
	DW	062aH
	DW	062dH
	DW	0643H
	DW	0645H
	DW	020H
	DW	0644H
	DW	0644H
	DW	062aH
	DW	0646H
	DW	0642H
	DW	0644H
	DW	00H
	DW	055H
	DW	073H
	DW	065H
	DW	020H
	DW	04aH
	DW	06fH
	DW	079H
	DW	073H
	DW	074H
	DW	069H
	DW	063H
	DW	06bH
	DW	020H
	DW	074H
	DW	06fH
	DW	020H
	DW	04eH
	DW	061H
	DW	076H
	DW	069H
	DW	067H
	DW	061H
	DW	074H
	DW	065H
	DW	00H
	DW	053H
	DW	065H
	DW	06cH
	DW	065H
	DW	063H
	DW	074H
	DW	069H
	DW	06fH
	DW	06eH
	DW	020H
	DW	064H
	DW	065H
	DW	020H
	DW	06cH
	DW	061H
	DW	020H
	DW	06cH
	DW	061H
	DW	06eH
	DW	067H
	DW	075H
	DW	065H
	DW	00H
	DW	055H
	DW	074H
	DW	069H
	DW	06cH
	DW	069H
	DW	073H
	DW	065H
	DW	072H
	DW	020H
	DW	06cH
	DW	065H
	DW	020H
	DW	06aH
	DW	06fH
	DW	079H
	DW	073H
	DW	074H
	DW	069H
	DW	063H
	DW	06bH
	DW	00H
	DW	030b8H
	DW	030e7H
	DW	030a4H
	DW	030b9H
	DW	030c6H
	DW	030a3H
	DW	030c3H
	DW	030afH
	DW	03092H
	DW	04f7fH
	DW	07528H
	DW	03057H
	DW	03066H
	DW	064cdH
	DW	04f5cH
	DW	03059H
	DW	0308bH
	DW	00H
	DW	0c870H
	DW	0c774H
	DW	0c2a4H
	DW	0d2f1H
	DW	0c744H
	DW	020H
	DW	0c0acH
	DW	0c6a9H
	DW	0d558H
	DW	0c5ecH
	DW	020H
	DW	0d0d0H
	DW	0c0c9H
	DW	0d558H
	DW	0c138H
	DW	0c694H
	DW	02eH
	DW	00H
	DW	053H
	DW	050H
	DW	04fH
	DW	032H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	020H
	DW	020H
	DW	020H
	DW	020H
	DW	020H
	DW	020H
	DW	00H
	DW	048H
	DW	065H
	DW	061H
	DW	06cH
	DW	074H
	DW	068H
	DW	020H
	DW	044H
	DW	069H
	DW	061H
	DW	067H
	DW	06eH
	DW	06fH
	DW	073H
	DW	065H
	DW	00H
	DW	053H
	DW	065H
	DW	06cH
	DW	065H
	DW	063H
	DW	074H
	DW	020H
	DW	04cH
	DW	061H
	DW	06eH
	DW	067H
	DW	075H
	DW	061H
	DW	067H
	DW	065H
	DW	00H
	DW	04f7fH
	DW	07528H
	DW	04aH
	DW	06fH
	DW	079H
	DW	073H
	DW	074H
	DW	069H
	DW	063H
	DW	06bH
	DW	06765H
	DW	063a7H
	DW	05236H
	DW	00H
	DW	048H
	DW	052H
	DW	0aH
	DW	020H
	DW	02H
	DW	020H
	DW	020H
	DW	020H
	DW	020H
	DW	020H
	DW	020H
	DW	00H
	DW	0625H
	DW	062eH
	DW	062aH
	DW	064aH
	DW	0627H
	DW	0631H
	DW	020H
	DW	0627H
	DW	0644H
	DW	0644H
	DW	063aH
	DW	0629H
	DW	00H
	DW	048H
	DW	052H
	DW	05fH
	DW	056H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	048H
	DW	055H
	DW	04dH
	DW	049H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	053H
	DW	050H
	DW	05fH
	DW	056H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	054H
	DW	045H
	DW	04dH
	DW	050H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	055H
	DW	049H
	DW	020H
	DW	044H
	DW	065H
	DW	06dH
	DW	06fH
	DW	020H
	DW	06fH
	DW	06eH
	DW	00H
	DW	056H
	DW	0e6H
	DW	06cH
	DW	067H
	DW	020H
	DW	053H
	DW	070H
	DW	072H
	DW	06fH
	DW	067H
	DW	00H
	DW	05fc3H
	DW	07387H
	DW	09a8cH
	DW	08bc1H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	08840H
	DW	06c27H
	DW	09a8cH
	DW	08bc1H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	046H
	DW	072H
	DW	061H
	DW	06eH
	DW	0e7H
	DW	061H
	DW	069H
	DW	073H
	DW	00H
	DW	04eH
	DW	065H
	DW	077H
	DW	020H
	DW	054H
	DW	065H
	DW	078H
	DW	074H
	DW	00H
	DW	055H
	DW	049H
	DW	06f14H
	DW	0793aH
	DW	08fd0H
	DW	0884cH
	DW	073afH
	DW	05883H
	DW	00H
	DW	05fc3H
	DW	07387H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	06e29H
	DW	05ea6H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	06e7fH
	DW	05ea6H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	08840H
	DW	06c27H
	DW	0aH
	DW	020H
	DW	020H
	DW	020H
	DW	02H
	DW	00H
	DW	044H
	DW	065H
	DW	075H
	DW	074H
	DW	073H
	DW	063H
	DW	068H
	DW	00H
	DW	045H
	DW	06eH
	DW	067H
	DW	06cH
	DW	069H
	DW	073H
	DW	068H
	DW	00H
	DW	055H
	DW	049H
	DW	030c7H
	DW	030e2H
	DW	0306eH
	DW	074b0H
	DW	05883H
	DW	00H
	DW	0627H
	DW	0644H
	DW	0639H
	DW	0631H
	DW	0628H
	DW	064aH
	DW	0629H
	DW	00H
	DW	044H
	DW	061H
	DW	06eH
	DW	073H
	DW	06bH
	DW	00H
	DW	055H
	DW	049H
	DW	020H
	DW	0b370H
	DW	0baa8H
	DW	00H
	DW	0c5b8H
	DW	0c5b4H
	DW	020H
	DW	0c120H
	DW	0d0ddH
	DW	00H
	DW	08a00H
	DW	08a9eH
	DW	09078H
	DW	0629eH
	DW	00H
	DW	09009H
	DW	062e9H
	DW	08bedH
	DW	08a00H
	DW	00H
	DW	065e5H
	DW	0672cH
	DW	08a9eH
	DW	00H
	DW	0d55cH
	DW	0ad6dH
	DW	0c5b4H
	DW	00H
	DW	04e2dH
	DW	06587H
	DW	00H
	DW	02dH
	DW	00H
	DW	030H
	DW	00H
	ORG $+2
?staticLanguageIndices@@3QBQBIB DD FLAT:?indicesGb@@3QBIB ; staticLanguageIndices
	DD	FLAT:?indicesKr@@3QBIB
	DD	FLAT:?indicesCn@@3QBIB
	DD	FLAT:?indicesJp@@3QBIB
	DD	FLAT:?indicesDk@@3QBIB
	DD	FLAT:?indicesFr@@3QBIB
	DD	FLAT:?indicesTn@@3QBIB
CONST	ENDS
PUBLIC	?getStringWidth@Font@touchgfx@@UBAGPBGZZ	; touchgfx::Font::getStringWidth
PUBLIC	?getStringWidth@Font@touchgfx@@UBAGEPBGZZ	; touchgfx::Font::getStringWidth
PUBLIC	?getNextLigature@TextProvider@touchgfx@@QAEGE@Z	; touchgfx::TextProvider::getNextLigature
PUBLIC	?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGXZ ; touchgfx::TextProvider::circularBuffer<10>::peekChar
PUBLIC	?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGG@Z ; touchgfx::TextProvider::circularBuffer<10>::peekChar
PUBLIC	?replaceAt0@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z ; touchgfx::TextProvider::circularBuffer<10>::replaceAt0
PUBLIC	?replaceAt1@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z ; touchgfx::TextProvider::circularBuffer<10>::replaceAt1
PUBLIC	?initializeInternal@TextProvider@touchgfx@@AAEXXZ ; touchgfx::TextProvider::initializeInternal
PUBLIC	?setLanguage@Texts@touchgfx@@SAXG@Z		; touchgfx::Texts::setLanguage
PUBLIC	?getText@Texts@touchgfx@@QBEPBGG@Z		; touchgfx::Texts::getText
PUBLIC	?setTranslation@Texts@touchgfx@@SAXGPBX@Z	; touchgfx::Texts::setTranslation
PUBLIC	?registerTypedTextDatabase@TypedText@touchgfx@@SAXPBUTypedTextData@12@PBQBVFont@2@G@Z ; touchgfx::TypedText::registerTypedTextDatabase
PUBLIC	?drawString@LCD@touchgfx@@QAAXVRect@2@ABV32@ABUStringVisuals@12@PBGZZ ; touchgfx::LCD::drawString
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1MO@OAMAJNNF@?$AAD?$AA?3?$AA?2?$AAf?$AA?$GA?$AA?2?$PP?U?$AA?$BK?$PP?$LO?$PP?$KB?$AA?2?$PP?$LJ?$AAH?$AA1?$AA_@ ; `string'
PUBLIC	??_C@_1BC@PANDKMKI@?$AAu?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?5?$AA1@ ; `string'
PUBLIC	??_C@_1BM@HFPAENLG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DM?$AA?5?$AAu?$AAs?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_1BC@EIGPMLMN@?$AAu?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?5?$AA0@ ; `string'
EXTRN	__imp___wassert:PROC
EXTRN	?getStringWidthRTL@Font@touchgfx@@IBEGEPBGPAD@Z:PROC ; touchgfx::Font::getStringWidthRTL
EXTRN	?getNextChar@TextProvider@touchgfx@@QAEGXZ:PROC	; touchgfx::TextProvider::getNextChar
EXTRN	?fillInputBuffer@TextProvider@touchgfx@@AAEXXZ:PROC ; touchgfx::TextProvider::fillInputBuffer
EXTRN	?substituteGlyphs@TextProvider@touchgfx@@AAEXXZ:PROC ; touchgfx::TextProvider::substituteGlyphs
EXTRN	?unicodeConverterInit@TextProvider@touchgfx@@AAEXXZ:PROC ; touchgfx::TextProvider::unicodeConverterInit
EXTRN	?unicodeConverter@TextProvider@touchgfx@@AAEGE@Z:PROC ; touchgfx::TextProvider::unicodeConverter
EXTRN	?drawStringRTL@LCD@touchgfx@@IAEXABVRect@2@0ABUStringVisuals@12@PBGPAD@Z:PROC ; touchgfx::LCD::drawStringRTL
EXTRN	?getFonts@TypedTextDatabase@@YAPAPBVFont@touchgfx@@XZ:PROC ; TypedTextDatabase::getFonts
EXTRN	?getInstanceSize@TypedTextDatabase@@YAGXZ:PROC	; TypedTextDatabase::getInstanceSize
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B:DWORD ; touchgfx::TypedText::typedTexts
EXTRN	?fonts@TypedText@touchgfx@@0PBQBVFont@2@B:DWORD	; touchgfx::TypedText::fonts
EXTRN	?numberOfTypedTexts@TypedText@touchgfx@@0GA:WORD ; touchgfx::TypedText::numberOfTypedTexts
EXTRN	?typedTextDatabaseArray@@3QBQBUTypedTextData@TypedText@touchgfx@@B:BYTE ; typedTextDatabaseArray
_BSS	SEGMENT
	ALIGN	4

?languagesArray@@3PAPBUTranslationHeader@@A DD 07H DUP (?) ; languagesArray
?currentLanguagePtr@@3PBGB DD 01H DUP (?)		; currentLanguagePtr
?currentLanguageIndices@@3PBIB DD 01H DUP (?)		; currentLanguageIndices
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1BC@EIGPMLMN@?$AAu?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BC@EIGPMLMN@?$AAu?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?5?$AA0@ DB 'u', 00H
	DB	's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@HFPAENLG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DM?$AA?5?$AAu?$AAs?$AAe?$AAd@
CONST	SEGMENT
??_C@_1BM@HFPAENLG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DM?$AA?5?$AAu?$AAs?$AAe?$AAd@ DB 'o'
	DB	00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'<', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@PANDKMKI@?$AAu?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?5?$AA1@
CONST	SEGMENT
??_C@_1BC@PANDKMKI@?$AAu?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?5?$AA1@ DB 'u', 00H
	DB	's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '>', 00H, ' ', 00H, '1'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@OAMAJNNF@?$AAD?$AA?3?$AA?2?$AAf?$AA?$GA?$AA?2?$PP?U?$AA?$BK?$PP?$LO?$PP?$KB?$AA?2?$PP?$LJ?$AAH?$AA1?$AA_@
CONST	SEGMENT
??_C@_1MO@OAMAJNNF@?$AAD?$AA?3?$AA?2?$AAf?$AA?$GA?$AA?2?$PP?U?$AA?$BK?$PP?$LO?$PP?$KB?$AA?2?$PP?$LJ?$AAH?$AA1?$AA_@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'f[`N\', 00H, 0d5H, 'k', 01aH, 'N', 0beH
	DB	08bH, 0a1H, 08bH, '\', 00H, 0b9H, 'eHh1', 00H, '_', 00H, 'G', 00H
	DB	'F', 00H, 'X', 00H, '+', 00H, 095H, '^', 07fH, 'g\', 00H, 098H
	DB	'[', 0b9H, 'e', 08bH, 'O', 0bH, 'z\', 00H, 'D', 00H, 'I', 00H, 'S'
	DB	00H, 'P', 00H, 'L', 00H, 'A', 00H, 'Y', 00H, '\', 00H, 'M', 00H
	DB	'i', 00H, 'd', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 'w', 00H, 'a'
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, '\', 00H, 'S', 00H, 'T', 00H
	DB	'\', 00H, 't', 00H, 'o', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'g'
	DB	00H, 'f', 00H, 'x', 00H, '\', 00H, 'f', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'w', 00H, 'o', 00H, 'r', 00H, 'k', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 't', 00H, 'o', 00H, 'u', 00H, 'c', 00H, 'h'
	DB	00H, 'g', 00H, 'f', 00H, 'x', 00H, '\', 00H, 'T', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'v', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'h', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H				; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?drawString@LCD@touchgfx@@QAAXVRect@2@ABV32@ABUStringVisuals@12@PBGZZ
_TEXT	SEGMENT
_pArg$ = -8						; size = 4
_this$ = 8						; size = 4
_widgetArea$ = 12					; size = 8
_invalidatedArea$ = 20					; size = 4
_stringVisuals$ = 24					; size = 4
_format$ = 28						; size = 4
?drawString@LCD@touchgfx@@QAAXVRect@2@ABV32@ABUStringVisuals@12@PBGZZ PROC ; touchgfx::LCD::drawString, COMDAT
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\generated\texts\src\Texts.cpp
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-24]
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __43DC1578_Texts@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 55
	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _pArg$[ebp], eax
; Line 56
	mov	eax, DWORD PTR _pArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stringVisuals$[ebp]
	push	edx
	mov	eax, DWORD PTR _invalidatedArea$[ebp]
	push	eax
	lea	ecx, DWORD PTR _widgetArea$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?drawStringRTL@LCD@touchgfx@@IAEXABVRect@2@0ABUStringVisuals@12@PBGPAD@Z ; touchgfx::LCD::drawStringRTL
; Line 57
	mov	DWORD PTR _pArg$[ebp], 0
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?drawString@LCD@touchgfx@@QAAXVRect@2@ABV32@ABUStringVisuals@12@PBGZZ ENDP ; touchgfx::LCD::drawString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?registerTypedTextDatabase@TypedText@touchgfx@@SAXPBUTypedTextData@12@PBQBVFont@2@G@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
_f$ = 12						; size = 4
_n$ = 16						; size = 2
?registerTypedTextDatabase@TypedText@touchgfx@@SAXPBUTypedTextData@12@PBQBVFont@2@G@Z PROC ; touchgfx::TypedText::registerTypedTextDatabase, COMDAT
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __7903F453_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 155
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B, eax ; touchgfx::TypedText::typedTexts
; Line 156
	mov	eax, DWORD PTR _f$[ebp]
	mov	DWORD PTR ?fonts@TypedText@touchgfx@@0PBQBVFont@2@B, eax ; touchgfx::TypedText::fonts
; Line 157
	mov	ax, WORD PTR _n$[ebp]
	mov	WORD PTR ?numberOfTypedTexts@TypedText@touchgfx@@0GA, ax ; touchgfx::TypedText::numberOfTypedTexts
; Line 158
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?registerTypedTextDatabase@TypedText@touchgfx@@SAXPBUTypedTextData@12@PBQBVFont@2@G@Z ENDP ; touchgfx::TypedText::registerTypedTextDatabase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTranslation@Texts@touchgfx@@SAXGPBX@Z
_TEXT	SEGMENT
_id$ = 8						; size = 2
_translation$ = 12					; size = 4
?setTranslation@Texts@touchgfx@@SAXGPBX@Z PROC		; touchgfx::Texts::setTranslation, COMDAT
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\generated\texts\src\Texts.cpp
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __43DC1578_Texts@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 183
	movzx	eax, WORD PTR _id$[ebp]
	mov	ecx, DWORD PTR _translation$[ebp]
	mov	DWORD PTR ?languagesArray@@3PAPBUTranslationHeader@@A[eax*4], ecx
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setTranslation@Texts@touchgfx@@SAXGPBX@Z ENDP		; touchgfx::Texts::setTranslation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getText@Texts@touchgfx@@QBEPBGG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 2
?getText@Texts@touchgfx@@QBEPBGG@Z PROC			; touchgfx::Texts::getText, COMDAT
; _this$ = ecx
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\generated\texts\src\Texts.cpp
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __43DC1578_Texts@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	movzx	eax, WORD PTR _id$[ebp]
	mov	ecx, DWORD PTR ?currentLanguageIndices@@3PBIB
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?currentLanguagePtr@@3PBGB
	lea	eax, DWORD PTR [eax+edx*2]
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getText@Texts@touchgfx@@QBEPBGG@Z ENDP			; touchgfx::Texts::getText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLanguage@Texts@touchgfx@@SAXG@Z
_TEXT	SEGMENT
_translation$1 = -20					; size = 4
_currentLanguageTypedText$ = -8				; size = 4
_id$ = 8						; size = 2
?setLanguage@Texts@touchgfx@@SAXG@Z PROC		; touchgfx::Texts::setLanguage, COMDAT
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\generated\texts\src\Texts.cpp
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-24]
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __43DC1578_Texts@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 153
	mov	DWORD PTR _currentLanguageTypedText$[ebp], 0
; Line 154
	movzx	eax, WORD PTR _id$[ebp]
	cmp	eax, 7
	jge	SHORT $LN2@setLanguag
; Line 156
	movzx	eax, WORD PTR _id$[ebp]
	cmp	DWORD PTR ?languagesArray@@3PAPBUTranslationHeader@@A[eax*4], 0
	je	SHORT $LN3@setLanguag
; Line 159
	movzx	eax, WORD PTR _id$[ebp]
	mov	ecx, DWORD PTR ?languagesArray@@3PAPBUTranslationHeader@@A[eax*4]
	mov	DWORD PTR _translation$1[ebp], ecx
; Line 160
	mov	eax, DWORD PTR _translation$1[ebp]
	mov	ecx, DWORD PTR _translation$1[ebp]
	add	ecx, DWORD PTR [eax]
	mov	DWORD PTR ?currentLanguagePtr@@3PBGB, ecx
; Line 161
	mov	eax, DWORD PTR _translation$1[ebp]
	mov	ecx, DWORD PTR _translation$1[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR ?currentLanguageIndices@@3PBIB, ecx
; Line 162
	mov	eax, DWORD PTR _translation$1[ebp]
	mov	ecx, DWORD PTR _translation$1[ebp]
	add	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _currentLanguageTypedText$[ebp], ecx
; Line 163
	jmp	SHORT $LN2@setLanguag
$LN3@setLanguag:
; Line 167
	mov	DWORD PTR ?currentLanguagePtr@@3PBGB, OFFSET ?texts_all_languages@@3QBGB ; texts_all_languages
; Line 168
	movzx	eax, WORD PTR _id$[ebp]
	mov	ecx, DWORD PTR ?staticLanguageIndices@@3QBQBIB[eax*4]
	mov	DWORD PTR ?currentLanguageIndices@@3PBIB, ecx
; Line 169
	movzx	eax, WORD PTR _id$[ebp]
	mov	ecx, DWORD PTR ?typedTextDatabaseArray@@3QBQBUTypedTextData@TypedText@touchgfx@@B[eax*4]
	mov	DWORD PTR _currentLanguageTypedText$[ebp], ecx
$LN2@setLanguag:
; Line 173
	cmp	DWORD PTR _currentLanguageTypedText$[ebp], 0
	je	SHORT $LN1@setLanguag
; Line 175
	mov	ax, WORD PTR _id$[ebp]
	mov	WORD PTR ?currentLanguage@Texts@touchgfx@@0GA, ax ; touchgfx::Texts::currentLanguage
; Line 176
	call	?getInstanceSize@TypedTextDatabase@@YAGXZ ; TypedTextDatabase::getInstanceSize
	movzx	eax, ax
	push	eax
	call	?getFonts@TypedTextDatabase@@YAPAPBVFont@touchgfx@@XZ ; TypedTextDatabase::getFonts
	push	eax
	mov	ecx, DWORD PTR _currentLanguageTypedText$[ebp]
	push	ecx
	call	?registerTypedTextDatabase@TypedText@touchgfx@@SAXPBUTypedTextData@12@PBQBVFont@2@G@Z ; touchgfx::TypedText::registerTypedTextDatabase
	add	esp, 12					; 0000000cH
$LN1@setLanguag:
; Line 179
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setLanguage@Texts@touchgfx@@SAXG@Z ENDP		; touchgfx::Texts::setLanguage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializeInternal@TextProvider@touchgfx@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?initializeInternal@TextProvider@touchgfx@@AAEXXZ PROC	; touchgfx::TextProvider::initializeInternal, COMDAT
; _this$ = ecx
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\generated\texts\src\Texts.cpp
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __43DC1578_Texts@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fillInputBuffer@TextProvider@touchgfx@@AAEXXZ ; touchgfx::TextProvider::fillInputBuffer
; Line 49
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unicodeConverterInit@TextProvider@touchgfx@@AAEXXZ ; touchgfx::TextProvider::unicodeConverterInit
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initializeInternal@TextProvider@touchgfx@@AAEXXZ ENDP	; touchgfx::TextProvider::initializeInternal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceAt1@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z
_TEXT	SEGMENT
tv79 = -220						; size = 4
_index$ = -20						; size = 2
_this$ = -8						; size = 4
_newChar$ = 8						; size = 2
?replaceAt1@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z PROC ; touchgfx::TextProvider::circularBuffer<10>::replaceAt1, COMDAT
; _this$ = ecx
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\Middlewares\ST\touchgfx\framework\include\touchgfx\TextProvider.hpp
; Line 268
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-28]
	mov	ecx, 7
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A92D1555_TextProvider@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+22]
	cmp	ecx, 1
	jg	SHORT $LN3@replaceAt1
	mov	esi, esp
	push	269					; 0000010dH
	push	OFFSET ??_C@_1MO@OAMAJNNF@?$AAD?$AA?3?$AA?2?$AAf?$AA?$GA?$AA?2?$PP?U?$AA?$BK?$PP?$LO?$PP?$KB?$AA?2?$PP?$LJ?$AAH?$AA1?$AA_@
	push	OFFSET ??_C@_1BC@PANDKMKI@?$AAu?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?5?$AA1@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@replaceAt1:
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	add	ecx, 1
	mov	WORD PTR _index$[ebp], cx
; Line 271
	movzx	eax, WORD PTR _index$[ebp]
	cmp	eax, 10					; 0000000aH
	jae	SHORT $LN4@replaceAt1
	movzx	ecx, WORD PTR _index$[ebp]
	mov	DWORD PTR tv79[ebp], ecx
	jmp	SHORT $LN5@replaceAt1
$LN4@replaceAt1:
	mov	DWORD PTR tv79[ebp], 0
$LN5@replaceAt1:
	mov	edx, DWORD PTR tv79[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _newChar$[ebp]
	mov	WORD PTR [eax+edx*2], cx
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?replaceAt1@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z ENDP ; touchgfx::TextProvider::circularBuffer<10>::replaceAt1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceAt0@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newChar$ = 8						; size = 2
?replaceAt0@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z PROC ; touchgfx::TextProvider::circularBuffer<10>::replaceAt0, COMDAT
; _this$ = ecx
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\Middlewares\ST\touchgfx\framework\include\touchgfx\TextProvider.hpp
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A92D1555_TextProvider@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 265
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _newChar$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
; Line 266
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?replaceAt0@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z ENDP ; touchgfx::TextProvider::circularBuffer<10>::replaceAt0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGG@Z
_TEXT	SEGMENT
tv83 = -220						; size = 4
_index$ = -20						; size = 2
_this$ = -8						; size = 4
_offset$ = 8						; size = 2
?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGG@Z PROC ; touchgfx::TextProvider::circularBuffer<10>::peekChar, COMDAT
; _this$ = ecx
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\Middlewares\ST\touchgfx\framework\include\touchgfx\TextProvider.hpp
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-28]
	mov	ecx, 7
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A92D1555_TextProvider@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 197
	movzx	eax, WORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+22]
	cmp	eax, edx
	jl	SHORT $LN3@peekChar
	mov	esi, esp
	push	197					; 000000c5H
	push	OFFSET ??_C@_1MO@OAMAJNNF@?$AAD?$AA?3?$AA?2?$AAf?$AA?$GA?$AA?2?$PP?U?$AA?$BK?$PP?$LO?$PP?$KB?$AA?2?$PP?$LJ?$AAH?$AA1?$AA_@
	push	OFFSET ??_C@_1BM@HFPAENLG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DM?$AA?5?$AAu?$AAs?$AAe?$AAd@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@peekChar:
; Line 198
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	movzx	edx, WORD PTR _offset$[ebp]
	add	ecx, edx
	mov	WORD PTR _index$[ebp], cx
; Line 199
	movzx	eax, WORD PTR _index$[ebp]
	cmp	eax, 10					; 0000000aH
	jae	SHORT $LN4@peekChar
	movzx	ecx, WORD PTR _index$[ebp]
	mov	DWORD PTR tv83[ebp], ecx
	jmp	SHORT $LN5@peekChar
$LN4@peekChar:
	movzx	edx, WORD PTR _index$[ebp]
	sub	edx, 10					; 0000000aH
	mov	DWORD PTR tv83[ebp], edx
$LN5@peekChar:
	mov	eax, DWORD PTR tv83[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [ecx+eax*2]
; Line 200
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGG@Z ENDP ; touchgfx::TextProvider::circularBuffer<10>::peekChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGXZ PROC ; touchgfx::TextProvider::circularBuffer<10>::peekChar, COMDAT
; _this$ = ecx
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\Middlewares\ST\touchgfx\framework\include\touchgfx\TextProvider.hpp
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A92D1555_TextProvider@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+22]
	test	ecx, ecx
	jg	SHORT $LN3@peekChar
	mov	esi, esp
	push	192					; 000000c0H
	push	OFFSET ??_C@_1MO@OAMAJNNF@?$AAD?$AA?3?$AA?2?$AAf?$AA?$GA?$AA?2?$PP?U?$AA?$BK?$PP?$LO?$PP?$KB?$AA?2?$PP?$LJ?$AAH?$AA1?$AA_@
	push	OFFSET ??_C@_1BC@EIGPMLMN@?$AAu?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@peekChar:
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+ecx*2]
; Line 194
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGXZ ENDP ; touchgfx::TextProvider::circularBuffer<10>::peekChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNextLigature@TextProvider@touchgfx@@QAEGE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_direction$ = 8						; size = 1
?getNextLigature@TextProvider@touchgfx@@QAEGE@Z PROC	; touchgfx::TextProvider::getNextLigature, COMDAT
; _this$ = ecx
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\generated\texts\src\Texts.cpp
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __43DC1578_Texts@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 33
	movzx	eax, BYTE PTR _direction$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unicodeConverter@TextProvider@touchgfx@@AAEGE@Z ; touchgfx::TextProvider::unicodeConverter
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 34					; 00000022H
	call	?replaceAt0@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z ; touchgfx::TextProvider::circularBuffer<10>::replaceAt0
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN2@getNextLig
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 34					; 00000022H
	call	?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGXZ ; touchgfx::TextProvider::circularBuffer<10>::peekChar
	movzx	eax, ax
	test	eax, eax
	je	SHORT $LN2@getNextLig
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	call	?substituteGlyphs@TextProvider@touchgfx@@AAEXXZ ; touchgfx::TextProvider::substituteGlyphs
; Line 37
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 34					; 00000022H
	call	?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGG@Z ; touchgfx::TextProvider::circularBuffer<10>::peekChar
	movzx	eax, ax
	cmp	eax, 2367				; 0000093fH
	jne	SHORT $LN2@getNextLig
; Line 39
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 34					; 00000022H
	call	?peekChar@?$circularBuffer@$09@TextProvider@touchgfx@@QAEGXZ ; touchgfx::TextProvider::circularBuffer<10>::peekChar
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 34					; 00000022H
	call	?replaceAt1@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z ; touchgfx::TextProvider::circularBuffer<10>::replaceAt1
; Line 40
	push	2367					; 0000093fH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 34					; 00000022H
	call	?replaceAt0@?$circularBuffer@$09@TextProvider@touchgfx@@QAEXG@Z ; touchgfx::TextProvider::circularBuffer<10>::replaceAt0
$LN2@getNextLig:
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getNextChar@TextProvider@touchgfx@@QAEGXZ ; touchgfx::TextProvider::getNextChar
; Line 44
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getNextLigature@TextProvider@touchgfx@@QAEGE@Z ENDP	; touchgfx::TextProvider::getNextLigature
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
_TEXT	SEGMENT
_width$ = -20						; size = 2
_pArg$ = -8						; size = 4
_this$ = 8						; size = 4
_textDirection$ = 12					; size = 1
_text$ = 16						; size = 4
?getStringWidth@Font@touchgfx@@UBAGEPBGZZ PROC		; touchgfx::Font::getStringWidth, COMDAT
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\generated\texts\src\Texts.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __43DC1578_Texts@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 25
	lea	eax, DWORD PTR _text$[ebp+4]
	mov	DWORD PTR _pArg$[ebp], eax
; Line 26
	mov	eax, DWORD PTR _pArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _textDirection$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getStringWidthRTL@Font@touchgfx@@IBEGEPBGPAD@Z ; touchgfx::Font::getStringWidthRTL
	mov	WORD PTR _width$[ebp], ax
; Line 27
	mov	DWORD PTR _pArg$[ebp], 0
; Line 28
	mov	ax, WORD PTR _width$[ebp]
; Line 29
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getStringWidth@Font@touchgfx@@UBAGEPBGZZ ENDP		; touchgfx::Font::getStringWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStringWidth@Font@touchgfx@@UBAGPBGZZ
_TEXT	SEGMENT
_width$ = -20						; size = 2
_pArg$ = -8						; size = 4
_this$ = 8						; size = 4
_text$ = 12						; size = 4
?getStringWidth@Font@touchgfx@@UBAGPBGZZ PROC		; touchgfx::Font::getStringWidth, COMDAT
; File D:\学习\毕业设计\方案1_GFX+底板\官方例程\DISPLAY\TouchGFX\generated\texts\src\Texts.cpp
; Line 14
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __43DC1578_Texts@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 16
	lea	eax, DWORD PTR _text$[ebp+4]
	mov	DWORD PTR _pArg$[ebp], eax
; Line 17
	mov	eax, DWORD PTR _pArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getStringWidthRTL@Font@touchgfx@@IBEGEPBGPAD@Z ; touchgfx::Font::getStringWidthRTL
	mov	WORD PTR _width$[ebp], ax
; Line 18
	mov	DWORD PTR _pArg$[ebp], 0
; Line 19
	mov	ax, WORD PTR _width$[ebp]
; Line 20
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getStringWidth@Font@touchgfx@@UBAGPBGZZ ENDP		; touchgfx::Font::getStringWidth
_TEXT	ENDS
END
