/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/list_screen/ListViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ListViewBase::ListViewBase() :
    buttonCallback(this, &ListViewBase::buttonCallbackHandler),
    updateItemCallback(this, &ListViewBase::updateItemCallbackHandler)
{

    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_LISTBACKGROUND_ID));

    languageSelectorWheel.setPosition(60, 86, 200, 118);
    languageSelectorWheel.setHorizontal(false);
    languageSelectorWheel.setCircular(true);
    languageSelectorWheel.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    languageSelectorWheel.setSwipeAcceleration(10);
    languageSelectorWheel.setDragAcceleration(10);
    languageSelectorWheel.setNumberOfItems(7);
    languageSelectorWheel.setSelectedItemOffset(40);
    languageSelectorWheel.setSelectedItemExtraSize(0, 0);
    languageSelectorWheel.setSelectedItemMargin(0, 0);
    languageSelectorWheel.setDrawableSize(40, 0);
    languageSelectorWheel.setDrawables(languageSelectorWheelListItems, updateItemCallback,
                              languageSelectorWheelSelectedListItems, updateItemCallback);
    languageSelectorWheel.animateToItem(0, 0);

    headline.setPosition(50, 14, 220, 29);
    headline.setColor(touchgfx::Color::getColorFromRGB(16, 141, 171));
    headline.setLinespacing(0);
    headline.setTypedText(touchgfx::TypedText(T_LANGUAGEHEADLINE));

    button1.setXY(18, 11);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_GOBACK_ID), touchgfx::Bitmap(BITMAP_GOBACK_ID));
    button1.setAction(buttonCallback);

    add(__background);
    add(image1);
    add(languageSelectorWheel);
    add(headline);
    add(button1);
}

void ListViewBase::setupScreen()
{
    languageSelectorWheel.initialize();
    for (int i = 0; i < languageSelectorWheelListItems.getNumberOfDrawables(); i++)
    {
        languageSelectorWheelListItems[i].initialize();
    }
    for (int i = 0; i < languageSelectorWheelSelectedListItems.getNumberOfDrawables(); i++)
    {
        languageSelectorWheelSelectedListItems[i].initialize();
    }
}

void ListViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction1
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}

void ListViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &languageSelectorWheelListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        languageSelectorElement* cc = (languageSelectorElement*)d;
        languageSelectorWheelUpdateItem(*cc, itemIndex);
    }
    else if (items == &languageSelectorWheelSelectedListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        languageSelectorElementCenter* cc = (languageSelectorElementCenter*)d;
        languageSelectorWheelUpdateCenterItem(*cc, itemIndex);
    }
}
