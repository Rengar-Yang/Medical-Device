<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [DISPLAY\DISPLAY.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image DISPLAY\DISPLAY.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Sun Mar 26 21:15:52 2023
<BR><P>
<H3>Maximum Stack Usage =       1208 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[24]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">BusFault_Handler</a><BR>
 <LI><a href="#[a]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">HardFault_Handler</a><BR>
 <LI><a href="#[b]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">MemManage_Handler</a><BR>
 <LI><a href="#[9]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">NMI_Handler</a><BR>
 <LI><a href="#[289]">UART_EndRxTransfer</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[289]">UART_EndRxTransfer</a><BR>
 <LI><a href="#[d]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">UsageFault_Handler</a><BR>
 <LI><a href="#[3db]">touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3db]">touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[393]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[393]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[3da]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3da]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a><BR>
 <LI><a href="#[3dd]">touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3dd]">touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[c]">BusFault_Handler</a> from stm32l4xx_it.o(i.BusFault_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[26]">CAN1_RX0_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[27]">CAN1_RX1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[28]">CAN1_SCE_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[25]">CAN1_TX_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[43]">COMP_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[51]">CRS_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel2_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[1f]">DMA1_Channel3_IRQHandler</a> from stm32l4xx_it.o(i.DMA1_Channel3_IRQHandler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[20]">DMA1_Channel4_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[21]">DMA1_Channel5_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[22]">DMA1_Channel6_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[23]">DMA1_Channel7_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel2_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[40]">DMA2_Channel3_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[41]">DMA2_Channel4_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[42]">DMA2_Channel5_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[46]">DMA2_Channel6_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[47]">DMA2_Channel7_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[f]">DebugMon_Handler</a> from stm32l4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[18]">EXTI0_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[38]">EXTI15_10_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[19]">EXTI1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[1a]">EXTI2_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[1b]">EXTI3_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[1c]">EXTI4_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[29]">EXTI9_5_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[16]">FLASH_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[50]">FPU_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[a]">HardFault_Handler</a> from stm32l4xx_it.o(i.HardFault_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[30]">I2C1_ER_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[2f]">I2C1_EV_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[32]">I2C2_ER_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[31]">I2C2_EV_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[4b]">I2C3_ER_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[4a]">I2C3_EV_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[44]">LPTIM1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[45]">LPTIM2_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[48]">LPUART1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[b]">MemManage_Handler</a> from stm32l4xx_it.o(i.MemManage_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[9]">NMI_Handler</a> from stm32l4xx_it.o(i.NMI_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[13]">PVD_PVM_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[10]">PendSV_Handler</a> from stm32l4xx_it.o(i.PendSV_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[49]">QUADSPI_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[17]">RCC_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[4f]">RNG_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[39]">RTC_Alarm_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[15]">RTC_WKUP_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[8]">Reset_Handler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[4c]">SAI1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[3a]">SDMMC1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[33]">SPI1_IRQHandler</a> from stm32l4xx_it.o(i.SPI1_IRQHandler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[34]">SPI2_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[3b]">SPI3_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[55]">SPI_DMAAbortOnError</a> from stm32l4xx_hal_spi.o(i.SPI_DMAAbortOnError) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_IRQHandler)
 <LI><a href="#[58]">SPI_DMAError</a> from stm32l4xx_hal_spi.o(i.SPI_DMAError) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[56]">SPI_DMAHalfTransmitCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[57]">SPI_DMATransmitCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMATransmitCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[e]">SVC_Handler</a> from stm32l4xx_it.o(i.SVC_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[4d]">SWPMI1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[11]">SysTick_Handler</a> from stm32l4xx_it.o(i.SysTick_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[53]">SystemInit</a> from system_stm32l4xx.o(i.SystemInit) referenced from startup_stm32l431xx.o(.text)
 <LI><a href="#[14]">TAMP_STAMP_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[2a]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[2d]">TIM1_CC_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[2c]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[2b]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[2e]">TIM2_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[3c]">TIM6_DAC_IRQHandler</a> from stm32l4xx_it.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[3d]">TIM7_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[4e]">TSC_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[59]">UART_DMAAbortOnError</a> from stm32l4xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[5b]">UART_RxISR_16BIT</a> from stm32l4xx_hal_uart.o(i.UART_RxISR_16BIT) referenced from stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT)
 <LI><a href="#[5a]">UART_RxISR_8BIT</a> from stm32l4xx_hal_uart.o(i.UART_RxISR_8BIT) referenced from stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT)
 <LI><a href="#[35]">USART1_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[36]">USART2_IRQHandler</a> from stm32l4xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[37]">USART3_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[d]">UsageFault_Handler</a> from stm32l4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[12]">WWDG_IRQHandler</a> from startup_stm32l431xx.o(.text) referenced from startup_stm32l431xx.o(RESET)
 <LI><a href="#[98]">NetworkList::initialize()</a> from networklist.o(i._ZN11NetworkList10initializeEv) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[60]">NetworkList::NetworkList()</a> from networklist.o(i._ZN11NetworkListC1Ev) referenced from networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseC1Ev)
 <LI><a href="#[62]">NetworkList::~NetworkList()</a> from networklist.o(i._ZN11NetworkListD1Ev) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[62]">NetworkList::~NetworkList()</a> from networklist.o(i._ZN11NetworkListD1Ev) referenced from networkmenuview.o(i._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EED1Ev)
 <LI><a href="#[9b]">Screen1View::setupScreen()</a> from screen1view.o(i._ZN11Screen1View11setupScreenEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[a2]">Screen1View::handleKeyEvent(unsigned char)</a> from screen1view.o(i._ZN11Screen1View14handleKeyEventEh) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[9d]">Screen1View::tearDownScreen()</a> from screen1view.o(i._ZN11Screen1View14tearDownScreenEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[a1]">Screen1View::handleTickEvent()</a> from screen1view.o(i._ZN11Screen1View15handleTickEventEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[70]">Screen1View::imgClickHandler(const touchgfx::Image&, const touchgfx::ClickEvent&)</a> from screen1view.o(i._ZN11Screen1View15imgClickHandlerERKN8touchgfx5ImageERKNS0_10ClickEventE) referenced from screen1view.o(.constdata)
 <LI><a href="#[a3]">Screen1View::leftButtonClicked()</a> from screen1view.o(i._ZN11Screen1View17leftButtonClickedEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[a4]">Screen1View::rightButtonClicked()</a> from screen1view.o(i._ZN11Screen1View18rightButtonClickedEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[99]">Screen1View::~Screen1View()</a> from screen1view.o(i._ZN11Screen1ViewD1Ev) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[a6]">Screen2View::setupScreen()</a> from screen2view.o(i._ZN11Screen2View11setupScreenEv) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[a7]">Screen2View::tearDownScreen()</a> from screen2view.o(i._ZN11Screen2View14tearDownScreenEv) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[a8]">Screen2View::handleTickEvent()</a> from screen2view.o(i._ZN11Screen2View15handleTickEventEv) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[aa]">Screen2View::ShowData()</a> from screen2view.o(i._ZN11Screen2View8ShowDataEv) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[a5]">Screen2View::~Screen2View()</a> from screen2view.o(i._ZN11Screen2ViewD1Ev) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[ac]">TouchGFXHAL::initialize()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[be]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ad]">TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bf]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c7]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bd]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c0]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b3]">TouchGFXHAL::blockCopy(void*, const void*, unsigned)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL9blockCopyEPvPKvj) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[6c]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[6c]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[6d]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[6d]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(i.touchgfx_init)
 <LI><a href="#[cc]">ListViewBase::setupScreen()</a> from listviewbase.o(i._ZN12ListViewBase11setupScreenEv) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[7a]">ListViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from listviewbase.o(i._ZN12ListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from listviewbase.o(.constdata)
 <LI><a href="#[7b]">ListViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface*, short, short)</a> from listviewbase.o(i._ZN12ListViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss) referenced from listviewbase.o(.constdata)
 <LI><a href="#[cf]">ListViewBase::languageSelectorWheelUpdateItem(languageSelectorElement&, short)</a> from listviewbase.o(i._ZN12ListViewBase31languageSelectorWheelUpdateItemER23languageSelectorElements) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[d0]">ListViewBase::languageSelectorWheelUpdateCenterItem(languageSelectorElementCenter&, short)</a> from listviewbase.o(i._ZN12ListViewBase37languageSelectorWheelUpdateCenterItemER29languageSelectorElementCenters) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[cb]">ListViewBase::~ListViewBase()</a> from listviewbase.o(i._ZN12ListViewBaseD1Ev) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[d1]">Notification::initialize()</a> from notification.o(i._ZN12Notification10initializeEv) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[d2]">Notification::OKButtonClicked()</a> from notification.o(i._ZN12Notification15OKButtonClickedEv) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[d4]">ImageViewBase::setupScreen()</a> from imageviewbase.o(i._ZN13ImageViewBase11setupScreenEv) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[d6]">ImageViewBase::leftButtonClicked()</a> from imageviewbase.o(i._ZN13ImageViewBase17leftButtonClickedEv) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[d5]">ImageViewBase::rightButtonClicked()</a> from imageviewbase.o(i._ZN13ImageViewBase18rightButtonClickedEv) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[78]">ImageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from imageviewbase.o(i._ZN13ImageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from imageviewbase.o(.constdata)
 <LI><a href="#[79]">ImageViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</a> from imageviewbase.o(i._ZN13ImageViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE) referenced from imageviewbase.o(.constdata)
 <LI><a href="#[d3]">ImageViewBase::~ImageViewBase()</a> from imageviewbase.o(i._ZN13ImageViewBaseD1Ev) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[d8]">ListPresenter::deactivate()</a> from listpresenter.o(i._ZN13ListPresenter10deactivateEv) referenced from listpresenter.o(.constdata__ZTV13ListPresenter)
 <LI><a href="#[d7]">ListPresenter::activate()</a> from listpresenter.o(i._ZN13ListPresenter8activateEv) referenced from listpresenter.o(.constdata__ZTV13ListPresenter)
 <LI><a href="#[d9]">ListPresenter::~ListPresenter()</a> from listpresenter.o(i._ZN13ListPresenterD1Ev) referenced from listpresenter.o(.constdata__ZTV13ListPresenter)
 <LI><a href="#[db]">ImagePresenter::deactivate()</a> from imagepresenter.o(i._ZN14ImagePresenter10deactivateEv) referenced from imagepresenter.o(.constdata__ZTV14ImagePresenter)
 <LI><a href="#[da]">ImagePresenter::activate()</a> from imagepresenter.o(i._ZN14ImagePresenter8activateEv) referenced from imagepresenter.o(.constdata__ZTV14ImagePresenter)
 <LI><a href="#[dc]">ImagePresenter::~ImagePresenter()</a> from imagepresenter.o(i._ZN14ImagePresenterD1Ev) referenced from imagepresenter.o(.constdata__ZTV14ImagePresenter)
 <LI><a href="#[de]">DebugWindowView::setupScreen()</a> from debugwindowview.o(i._ZN15DebugWindowView11setupScreenEv) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[e2]">DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)</a> from debugwindowview.o(i._ZN15DebugWindowView14TextAreaAddStrEPhj) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[e1]">DebugWindowView::handleKeyEvent(unsigned char)</a> from debugwindowview.o(i._ZN15DebugWindowView14handleKeyEventEh) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[df]">DebugWindowView::tearDownScreen()</a> from debugwindowview.o(i._ZN15DebugWindowView14tearDownScreenEv) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[e0]">DebugWindowView::handleTickEvent()</a> from debugwindowview.o(i._ZN15DebugWindowView15handleTickEventEv) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[dd]">DebugWindowView::~DebugWindowView()</a> from debugwindowview.o(i._ZN15DebugWindowViewD1Ev) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[e3]">NetworkListBase::initialize()</a> from networklistbase.o(i._ZN15NetworkListBase10initializeEv) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[e5]">NetworkMenuView::setupScreen()</a> from networkmenuview.o(i._ZN15NetworkMenuView11setupScreenEv) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[e8]">NetworkMenuView::handleKeyEvent(unsigned char)</a> from networkmenuview.o(i._ZN15NetworkMenuView14handleKeyEventEh) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[e6]">NetworkMenuView::tearDownScreen()</a> from networkmenuview.o(i._ZN15NetworkMenuView14tearDownScreenEv) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[e7]">NetworkMenuView::handleTickEvent()</a> from networkmenuview.o(i._ZN15NetworkMenuView15handleTickEventEv) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[e9]">NetworkMenuView::FunctionListUpdateItem(NetworkList&, short)</a> from networkmenuview.o(i._ZN15NetworkMenuView22FunctionListUpdateItemER11NetworkLists) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[6f]">NetworkMenuView::scrollListClickHandler(short)</a> from networkmenuview.o(i._ZN15NetworkMenuView22scrollListClickHandlerEs) referenced from networkmenuview.o(.constdata)
 <LI><a href="#[e4]">NetworkMenuView::~NetworkMenuView()</a> from networkmenuview.o(i._ZN15NetworkMenuViewD1Ev) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[eb]">Screen1ViewBase::setupScreen()</a> from screen1viewbase.o(i._ZN15Screen1ViewBase11setupScreenEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[ec]">Screen1ViewBase::leftButtonClicked()</a> from screen1viewbase.o(i._ZN15Screen1ViewBase17leftButtonClickedEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[ed]">Screen1ViewBase::rightButtonClicked()</a> from screen1viewbase.o(i._ZN15Screen1ViewBase18rightButtonClickedEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[7f]">Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from screen1viewbase.o(i._ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from screen1viewbase.o(.constdata)
 <LI><a href="#[80]">Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</a> from screen1viewbase.o(i._ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE) referenced from screen1viewbase.o(.constdata)
 <LI><a href="#[ea]">Screen1ViewBase::~Screen1ViewBase()</a> from screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[ef]">Screen2ViewBase::setupScreen()</a> from screen2viewbase.o(i._ZN15Screen2ViewBase11setupScreenEv) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[81]">Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from screen2viewbase.o(i._ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from screen2viewbase.o(.constdata)
 <LI><a href="#[ee]">Screen2ViewBase::~Screen2ViewBase()</a> from screen2viewbase.o(i._ZN15Screen2ViewBaseD1Ev) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[f0]">NotificationBase::initialize()</a> from notificationbase.o(i._ZN16NotificationBase10initializeEv) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[f1]">NotificationBase::OKButtonClicked()</a> from notificationbase.o(i._ZN16NotificationBase15OKButtonClickedEv) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[7e]">NotificationBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from notificationbase.o(i._ZN16NotificationBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from notificationbase.o(.constdata)
 <LI><a href="#[f3]">Screen1Presenter::deactivate()</a> from screen1presenter.o(i._ZN16Screen1Presenter10deactivateEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f7]">Screen1Presenter::GetHour()</a> from screen1presenter.o(i._ZN16Screen1Presenter7GetHourEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f2]">Screen1Presenter::activate()</a> from screen1presenter.o(i._ZN16Screen1Presenter8activateEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f5]">Screen1Presenter::GetButton()</a> from screen1presenter.o(i._ZN16Screen1Presenter9GetButtonEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f8]">Screen1Presenter::GetMinute()</a> from screen1presenter.o(i._ZN16Screen1Presenter9GetMinuteEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f9]">Screen1Presenter::GetSecond()</a> from screen1presenter.o(i._ZN16Screen1Presenter9GetSecondEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f6]">Screen1Presenter::IfStarted()</a> from screen1presenter.o(i._ZN16Screen1Presenter9IfStartedEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f4]">Screen1Presenter::~Screen1Presenter()</a> from screen1presenter.o(i._ZN16Screen1PresenterD1Ev) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[fb]">Screen2Presenter::deactivate()</a> from screen2presenter.o(i._ZN16Screen2Presenter10deactivateEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[fd]">Screen2Presenter::GetHumidity()</a> from screen2presenter.o(i._ZN16Screen2Presenter11GetHumidityEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[ff]">Screen2Presenter::GetHeartRate()</a> from screen2presenter.o(i._ZN16Screen2Presenter12GetHeartRateEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[102]">Screen2Presenter::GetSPO2Valid()</a> from screen2presenter.o(i._ZN16Screen2Presenter12GetSPO2ValidEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[103]">Screen2Presenter::GetHeartSignal()</a> from screen2presenter.o(i._ZN16Screen2Presenter14GetHeartSignalEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[fe]">Screen2Presenter::GetTemperature()</a> from screen2presenter.o(i._ZN16Screen2Presenter14GetTemperatureEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[104]">Screen2Presenter::HealthDiagnose()</a> from screen2presenter.o(i._ZN16Screen2Presenter14HealthDiagnoseEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[101]">Screen2Presenter::GetHeartRateValid()</a> from screen2presenter.o(i._ZN16Screen2Presenter17GetHeartRateValidEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[105]">Screen2Presenter::CancleHealthDiagnose()</a> from screen2presenter.o(i._ZN16Screen2Presenter20CancleHealthDiagnoseEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[100]">Screen2Presenter::GetSPO2()</a> from screen2presenter.o(i._ZN16Screen2Presenter7GetSPO2Ev) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[fa]">Screen2Presenter::activate()</a> from screen2presenter.o(i._ZN16Screen2Presenter8activateEv) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[fc]">Screen2Presenter::~Screen2Presenter()</a> from screen2presenter.o(i._ZN16Screen2PresenterD1Ev) referenced from screen2presenter.o(.constdata__ZTV16Screen2Presenter)
 <LI><a href="#[107]">DebugWindowViewBase::setupScreen()</a> from debugwindowviewbase.o(i._ZN19DebugWindowViewBase11setupScreenEv) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[71]">DebugWindowViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from debugwindowviewbase.o(i._ZN19DebugWindowViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from debugwindowviewbase.o(.constdata)
 <LI><a href="#[106]">DebugWindowViewBase::~DebugWindowViewBase()</a> from debugwindowviewbase.o(i._ZN19DebugWindowViewBaseD1Ev) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[10c]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[112]">NetworkMenuViewBase::setupScreen()</a> from networkmenuviewbase.o(i._ZN19NetworkMenuViewBase11setupScreenEv) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[7c]">NetworkMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from networkmenuviewbase.o(i._ZN19NetworkMenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from networkmenuviewbase.o(.constdata)
 <LI><a href="#[113]">NetworkMenuViewBase::FunctionListUpdateItem(NetworkList&, short)</a> from networkmenuviewbase.o(i._ZN19NetworkMenuViewBase22FunctionListUpdateItemER11NetworkLists) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[7d]">NetworkMenuViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface*, short, short)</a> from networkmenuviewbase.o(i._ZN19NetworkMenuViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss) referenced from networkmenuviewbase.o(.constdata)
 <LI><a href="#[111]">NetworkMenuViewBase::~NetworkMenuViewBase()</a> from networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseD1Ev) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[115]">DebugWindowPresenter::deactivate()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter10deactivateEv) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[11a]">DebugWindowPresenter::GetHumidity()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter11GetHumidityEv) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[11c]">DebugWindowPresenter::GetHeartRate()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter12GetHeartRateEv) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[119]">DebugWindowPresenter::CancelNetDebug()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter14CancelNetDebugEv) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[11b]">DebugWindowPresenter::GetTemperature()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter14GetTemperatureEv) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[11d]">DebugWindowPresenter::GetSPO2()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter7GetSPO2Ev) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[118]">DebugWindowPresenter::NetDebug()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter8NetDebugEv) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[114]">DebugWindowPresenter::activate()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter8activateEv) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[117]">DebugWindowPresenter::GetButton()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenter9GetButtonEv) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[116]">DebugWindowPresenter::~DebugWindowPresenter()</a> from debugwindowpresenter.o(i._ZN20DebugWindowPresenterD1Ev) referenced from debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
 <LI><a href="#[11f]">NetworkMenuPresenter::deactivate()</a> from networkmenupresenter.o(i._ZN20NetworkMenuPresenter10deactivateEv) referenced from networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
 <LI><a href="#[124]">NetworkMenuPresenter::ConnectWIFI()</a> from networkmenupresenter.o(i._ZN20NetworkMenuPresenter11ConnectWIFIEv) referenced from networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
 <LI><a href="#[123]">NetworkMenuPresenter::CancelNetTime()</a> from networkmenupresenter.o(i._ZN20NetworkMenuPresenter13CancelNetTimeEv) referenced from networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
 <LI><a href="#[125]">NetworkMenuPresenter::CancelConnectWIFI()</a> from networkmenupresenter.o(i._ZN20NetworkMenuPresenter17CancelConnectWIFIEv) referenced from networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
 <LI><a href="#[122]">NetworkMenuPresenter::NetTime()</a> from networkmenupresenter.o(i._ZN20NetworkMenuPresenter7NetTimeEv) referenced from networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
 <LI><a href="#[11e]">NetworkMenuPresenter::activate()</a> from networkmenupresenter.o(i._ZN20NetworkMenuPresenter8activateEv) referenced from networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
 <LI><a href="#[121]">NetworkMenuPresenter::GetButton()</a> from networkmenupresenter.o(i._ZN20NetworkMenuPresenter9GetButtonEv) referenced from networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
 <LI><a href="#[120]">NetworkMenuPresenter::~NetworkMenuPresenter()</a> from networkmenupresenter.o(i._ZN20NetworkMenuPresenterD1Ev) referenced from networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
 <LI><a href="#[127]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[126]">STM32TouchController::init()</a> from stm32touchcontroller.o(i._ZN20STM32TouchController4initEv) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[68]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[68]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[c5]">TouchGFXGeneratedHAL::beginFrame()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10beginFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c6]">TouchGFXGeneratedHAL::endFrame()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL8endFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[6b]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
 <LI><a href="#[6b]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[75]">FrontendApplicationBase::gotoListScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase30gotoListScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[74]">FrontendApplicationBase::gotoImageScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase31gotoImageScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[72]">FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[73]">FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[77]">FrontendApplicationBase::gotoDebugWindowScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoDebugWindowScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[76]">FrontendApplicationBase::gotoNetworkMenuScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoNetworkMenuScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[129]">FrontendApplicationBase::~FrontendApplicationBase()</a> from touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[12a]">languageSelectorElement::initialize()</a> from languageselectorelement.o(i._ZN23languageSelectorElement10initializeEv) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[5d]">languageSelectorElement::languageSelectorElement()</a> from languageselectorelement.o(i._ZN23languageSelectorElementC1Ev) referenced from listviewbase.o(i._ZN12ListViewBaseC1Ev)
 <LI><a href="#[63]">languageSelectorElement::~languageSelectorElement()</a> from languageselectorelement.o(i._ZN23languageSelectorElementD1Ev) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[63]">languageSelectorElement::~languageSelectorElement()</a> from languageselectorelement.o(i._ZN23languageSelectorElementD1Ev) referenced from listview.o(i._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EED1Ev)
 <LI><a href="#[12b]">languageSelectorElementBase::initialize()</a> from languageselectorelementbase.o(i._ZN27languageSelectorElementBase10initializeEv) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[12c]">languageSelectorElementCenter::initialize()</a> from languageselectorelementcenter.o(i._ZN29languageSelectorElementCenter10initializeEv) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[5e]">languageSelectorElementCenter::languageSelectorElementCenter()</a> from languageselectorelementcenter.o(i._ZN29languageSelectorElementCenterC1Ev) referenced from listviewbase.o(i._ZN12ListViewBaseC1Ev)
 <LI><a href="#[64]">languageSelectorElementCenter::~languageSelectorElementCenter()</a> from languageselectorelementcenter.o(i._ZN29languageSelectorElementCenterD1Ev) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[64]">languageSelectorElementCenter::~languageSelectorElementCenter()</a> from languageselectorelementcenter.o(i._ZN29languageSelectorElementCenterD1Ev) referenced from listview.o(i._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EED1Ev)
 <LI><a href="#[12d]">languageSelectorElementCenterBase::initialize()</a> from languageselectorelementcenterbase.o(i._ZN33languageSelectorElementCenterBase10initializeEv) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[12f]">ListView::setupScreen()</a> from listview.o(i._ZN8ListView11setupScreenEv) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[131]">ListView::handleKeyEvent(unsigned char)</a> from listview.o(i._ZN8ListView14handleKeyEventEh) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[130]">ListView::tearDownScreen()</a> from listview.o(i._ZN8ListView14tearDownScreenEv) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[6e]">ListView::scrollWheelSelectedItemHandler()</a> from listview.o(i._ZN8ListView30scrollWheelSelectedItemHandlerEv) referenced from listview.o(.constdata)
 <LI><a href="#[132]">ListView::languageSelectorWheelUpdateItem(languageSelectorElement&, short)</a> from listview.o(i._ZN8ListView31languageSelectorWheelUpdateItemER23languageSelectorElements) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[133]">ListView::languageSelectorWheelUpdateCenterItem(languageSelectorElementCenter&, short)</a> from listview.o(i._ZN8ListView37languageSelectorWheelUpdateCenterItemER29languageSelectorElementCenters) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[12e]">ListView::~ListView()</a> from listview.o(i._ZN8ListViewD1Ev) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[134]">STM32DMA::getBlitCaps()</a> from stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[13b]">STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[13c]">STM32DMA::setupDataFill(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[136]">STM32DMA::flush()</a> from stm32dma.o(i._ZN8STM32DMA5flushEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[69]">STM32DMA::~STM32DMA()</a> from touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[69]">STM32DMA::~STM32DMA()</a> from touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[14d]">touchgfx::ScrollBase::setCircular(bool)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase11setCircularEb) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[14d]">touchgfx::ScrollBase::setCircular(bool)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase11setCircularEb) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[14d]">touchgfx::ScrollBase::setCircular(bool)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase11setCircularEb) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[151]">touchgfx::ScrollBase::animateToItem(short, short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase13animateToItemEss) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[151]">touchgfx::ScrollBase::animateToItem(short, short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase13animateToItemEss) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[151]">touchgfx::ScrollBase::animateToItem(short, short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase13animateToItemEss) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[151]">touchgfx::ScrollBase::animateToItem(short, short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase13animateToItemEss) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[14b]">touchgfx::ScrollBase::setHorizontal(bool)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase13setHorizontalEb) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[14b]">touchgfx::ScrollBase::setHorizontal(bool)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase13setHorizontalEb) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[14b]">touchgfx::ScrollBase::setHorizontal(bool)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase13setHorizontalEb) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[149]">touchgfx::ScrollBase::handleDragEvent(const touchgfx::DragEvent&)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[149]">touchgfx::ScrollBase::handleDragEvent(const touchgfx::DragEvent&)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[14a]">touchgfx::ScrollBase::handleTickEvent()</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase15handleTickEventEv) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[14a]">touchgfx::ScrollBase::handleTickEvent()</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase15handleTickEventEv) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[14a]">touchgfx::ScrollBase::handleTickEvent()</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase15handleTickEventEv) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[14a]">touchgfx::ScrollBase::handleTickEvent()</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase15handleTickEventEv) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[14f]">touchgfx::ScrollBase::setNumberOfItems(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase16setNumberOfItemsEs) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[14f]">touchgfx::ScrollBase::setNumberOfItems(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase16setNumberOfItemsEs) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[14f]">touchgfx::ScrollBase::setNumberOfItems(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase16setNumberOfItemsEs) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[156]">touchgfx::ScrollBase::animateToPosition(int, short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase17animateToPositionEis) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[156]">touchgfx::ScrollBase::animateToPosition(int, short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase17animateToPositionEis) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[148]">touchgfx::ScrollBase::handleGestureEvent(const touchgfx::GestureEvent&)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[148]">touchgfx::ScrollBase::handleGestureEvent(const touchgfx::GestureEvent&)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[146]">touchgfx::ScrollBase::setWidth(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase8setWidthEs) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[146]">touchgfx::ScrollBase::setWidth(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase8setWidthEs) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[146]">touchgfx::ScrollBase::setWidth(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase8setWidthEs) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[147]">touchgfx::ScrollBase::setHeight(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase9setHeightEs) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[147]">touchgfx::ScrollBase::setHeight(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase9setHeightEs) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[147]">touchgfx::ScrollBase::setHeight(short)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase9setHeightEs) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[152]">touchgfx::ScrollBase::setOffset(int)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase9setOffsetEi) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[152]">touchgfx::ScrollBase::setOffset(int)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase9setOffsetEi) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[152]">touchgfx::ScrollBase::setOffset(int)</a> from scrollbase.o(i._ZN8touchgfx10ScrollBase9setOffsetEi) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[15b]">touchgfx::ScrollList::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)</a> from scrolllist.o(i._ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[157]">touchgfx::ScrollList::handleClickEvent(const touchgfx::ClickEvent&)</a> from scrolllist.o(i._ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[158]">touchgfx::ScrollList::getPositionForItem(short)</a> from scrolllist.o(i._ZN8touchgfx10ScrollList18getPositionForItemEs) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[17c]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[17d]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[17b]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[17a]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[10b]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10b]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10b]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10b]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[109]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[109]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[109]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[109]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[128]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[128]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[128]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[108]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[108]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[108]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[108]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10a]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10a]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10a]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10a]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[110]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[110]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[110]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[110]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[15c]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10f]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10f]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10f]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10f]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10e]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10e]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10e]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10e]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[162]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(i._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[162]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(i._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[169]">touchgfx::DigitalClock::updateClock()</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock11updateClockEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[16a]">touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[16c]">touchgfx::DigitalClock::setAlpha(unsigned char)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock8setAlphaEh) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[16b]">touchgfx::DigitalClock::setColor(touchgfx::colortype)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock8setColorENS_9colortypeE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[166]">touchgfx::DigitalClock::setWidth(short)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock8setWidthEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[167]">touchgfx::DigitalClock::setHeight(short)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock9setHeightEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[171]">touchgfx::DrawableList::setCircular(bool)</a> from drawablelist.o(i._ZN8touchgfx12DrawableList11setCircularEb) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[173]">touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)</a> from drawablelist.o(i._ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[16f]">touchgfx::DrawableList::setHorizontal(bool)</a> from drawablelist.o(i._ZN8touchgfx12DrawableList13setHorizontalEb) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[16d]">touchgfx::DrawableList::setWidth(short)</a> from drawablelist.o(i._ZN8touchgfx12DrawableList8setWidthEs) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[16e]">touchgfx::DrawableList::setHeight(short)</a> from drawablelist.o(i._ZN8touchgfx12DrawableList9setHeightEs) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[176]">touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</a> from imageviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[179]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[178]">touchgfx::NoTransition::~NoTransition()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[168]">touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</a> from abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[168]">touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</a> from abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[180]">touchgfx::ClickListener&lang;touchgfx::Image&rang;::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen1viewbase.o(t._ZN8touchgfx13ClickListenerINS_5ImageEE16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[135]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[137]">touchgfx::DMA_Interface::initialize()</a> from dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[13d]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[13e]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[13a]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[138]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[139]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_nanumgothic_14_4bpp.o(i._Z27getFont_NanumGothic_14_4bppv)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_nanumgothic_20_4bpp.o(i._Z27getFont_NanumGothic_20_4bppv)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_nanumgothic_30_4bpp.o(i._Z27getFont_NanumGothic_30_4bppv)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_chinese_msyh_10_4bpp.o(i._Z28getFont_chinese_msyh_10_4bppv)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_chinese_msyh_14_4bpp.o(i._Z28getFont_chinese_msyh_14_4bppv)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_chinese_msyh_20_4bpp.o(i._Z28getFont_chinese_msyh_20_4bppv)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_amiri_regular_18_2bpp.o(i._Z29getFont_Amiri_Regular_18_2bppv)
 <LI><a href="#[5c]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_amiri_regular_22_4bpp.o(i._Z29getFont_Amiri_Regular_22_4bppv)
 <LI><a href="#[193]">touchgfx::PainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</a> from painterrgb565.o(i._ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[191]">touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)</a> from painterrgb565.o(i._ZN8touchgfx13PainterRGB5656renderEPhiiijPKh) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[198]">touchgfx::AbstractButton::executeAction()</a> from button.o(i._ZN8touchgfx14AbstractButton13executeActionEv) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[198]">touchgfx::AbstractButton::executeAction()</a> from button.o(i._ZN8touchgfx14AbstractButton13executeActionEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[197]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[197]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[10d]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10d]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10d]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[5f]">touchgfx::EasingEquations::backEaseOut(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations11backEaseOutEtsst) referenced from listviewbase.o(i._ZN12ListViewBaseC1Ev)
 <LI><a href="#[5f]">touchgfx::EasingEquations::backEaseOut(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations11backEaseOutEtsst) referenced from networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseC1Ev)
 <LI><a href="#[5f]">touchgfx::EasingEquations::backEaseOut(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations11backEaseOutEtsst) referenced from scrollbase.o(i._ZN8touchgfx10ScrollBaseC2Ev)
 <LI><a href="#[19a]">touchgfx::RenderingBuffer::~RenderingBuffer()</a> from renderingbuffer.o(i._ZN8touchgfx15RenderingBufferD1Ev) referenced from renderingbuffer.o(.constdata__ZTVN8touchgfx15RenderingBufferE)
 <LI><a href="#[19d]">touchgfx::ScrollWheelBase::handleDragEvent(const touchgfx::DragEvent&)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase15handleDragEventERKNS_9DragEventE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[19d]">touchgfx::ScrollWheelBase::handleDragEvent(const touchgfx::DragEvent&)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase15handleDragEventERKNS_9DragEventE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[19b]">touchgfx::ScrollWheelBase::handleClickEvent(const touchgfx::ClickEvent&)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase16handleClickEventERKNS_10ClickEventE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[19b]">touchgfx::ScrollWheelBase::handleClickEvent(const touchgfx::ClickEvent&)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase16handleClickEventERKNS_10ClickEventE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1a0]">touchgfx::ScrollWheelBase::animateToPosition(int, short)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase17animateToPositionEis) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[1a0]">touchgfx::ScrollWheelBase::animateToPosition(int, short)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase17animateToPositionEis) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[19e]">touchgfx::ScrollWheelBase::getPositionForItem(short)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase18getPositionForItemEs) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[19e]">touchgfx::ScrollWheelBase::getPositionForItem(short)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase18getPositionForItemEs) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[19c]">touchgfx::ScrollWheelBase::handleGestureEvent(const touchgfx::GestureEvent&)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase18handleGestureEventERKNS_12GestureEventE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[19c]">touchgfx::ScrollWheelBase::handleGestureEvent(const touchgfx::GestureEvent&)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase18handleGestureEventERKNS_12GestureEventE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1a1]">touchgfx::ScrollWheelBase::setSelectedItemOffset(short)</a> from scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase21setSelectedItemOffsetEs) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[1a3]">touchgfx::GraphElementLine::invalidateGraphPointAt(short)</a> from graphelements.o(i._ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1a7]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a7]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1a7]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a7]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1a6]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a6]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1a6]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a6]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1a4]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a4]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1a4]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a4]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1a5]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a5]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1a5]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a5]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1a9]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1ab]">touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::getDrawable(short)</a> from networkmenuview.o(t._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EE11getDrawableEs) referenced from networkmenuview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI11NetworkListLi2EEE)
 <LI><a href="#[1ac]">touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::getNumberOfDrawables()</a> from networkmenuview.o(t._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EE20getNumberOfDrawablesEv) referenced from networkmenuview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI11NetworkListLi2EEE)
 <LI><a href="#[1aa]">touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::~DrawableListItems()</a> from networkmenuview.o(i._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EED1Ev) referenced from networkmenuview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI11NetworkListLi2EEE)
 <LI><a href="#[1ae]">touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::getDrawable(short)</a> from listview.o(t._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EE11getDrawableEs) referenced from listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EEE)
 <LI><a href="#[1af]">touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::getNumberOfDrawables()</a> from listview.o(t._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EE20getNumberOfDrawablesEv) referenced from listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EEE)
 <LI><a href="#[1ad]">touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems()</a> from listview.o(i._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EED1Ev) referenced from listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EEE)
 <LI><a href="#[1b1]">touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::getDrawable(short)</a> from listview.o(t._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EE11getDrawableEs) referenced from listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EEE)
 <LI><a href="#[1b2]">touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::getNumberOfDrawables()</a> from listview.o(t._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EE20getNumberOfDrawablesEv) referenced from listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EEE)
 <LI><a href="#[1b0]">touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::~DrawableListItems()</a> from listview.o(i._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EED1Ev) referenced from listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EEE)
 <LI><a href="#[1ba]">touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1bb]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1b9]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1b8]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1e8]">touchgfx::ClickButtonTrigger::handleClickEvent(const touchgfx::ClickEvent&)</a> from imageview.o(i._ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1bc]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::allocateBlock(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char**)</a> from touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE13allocateBlockEttttPPh) referenced from touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
 <LI><a href="#[1c1]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::hasEmptyBlock()</a> from touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE13hasEmptyBlockEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
 <LI><a href="#[1bf]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::getBlockForTransfer(touchgfx::Rect&)</a> from touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE19getBlockForTransferERNS_4RectE) referenced from touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
 <LI><a href="#[1c0]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::peekBlockForTransfer()</a> from touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE20peekBlockForTransferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
 <LI><a href="#[1c2]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::freeBlockAfterTransfer()</a> from touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE22freeBlockAfterTransferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
 <LI><a href="#[1be]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::hasBlockReadyForTransfer()</a> from touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE24hasBlockReadyForTransferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
 <LI><a href="#[1bd]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::markBlockReadyForTransfer()</a> from touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE25markBlockReadyForTransferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
 <LI><a href="#[67]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::~ManyBlockAllocator()</a> from touchgfxgeneratedhal.o(i._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EED1Ev) referenced from touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
 <LI><a href="#[67]">touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::~ManyBlockAllocator()</a> from touchgfxgeneratedhal.o(i._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EED1Ev) referenced from touchgfxgeneratedhal.o(i.__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90)
 <LI><a href="#[1c3]">touchgfx::ScrollableContainer::getLastChild(short, short, touchgfx::Drawable**)</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer12getLastChildEssPPNS_8DrawableE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1cb]">touchgfx::ScrollableContainer::isScrollableXY(bool&, bool&)</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer14isScrollableXYERbS1_) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1c6]">touchgfx::ScrollableContainer::handleDragEvent(const touchgfx::DragEvent&)</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1c7]">touchgfx::ScrollableContainer::handleTickEvent()</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer15handleTickEventEv) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1c4]">touchgfx::ScrollableContainer::handleClickEvent(const touchgfx::ClickEvent&)</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1c5]">touchgfx::ScrollableContainer::handleGestureEvent(const touchgfx::GestureEvent&)</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1ca]">touchgfx::ScrollableContainer::moveChildrenRelative(short, short)</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1c8]">touchgfx::ScrollableContainer::add(touchgfx::Drawable&)</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1cd]">touchgfx::ScrollableContainer::doScroll(short, short)</a> from scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer8doScrollEss) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1b5]">touchgfx::GraphElementGridBase::invalidateGraphPointAt(short)</a> from graphelements.o(i._ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[1b5]">touchgfx::GraphElementGridBase::invalidateGraphPointAt(short)</a> from graphelements.o(i._ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[1b5]">touchgfx::GraphElementGridBase::invalidateGraphPointAt(short)</a> from graphelements.o(i._ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[192]">touchgfx::AbstractPainterRGB565::renderInit()</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56510renderInitEv) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[192]">touchgfx::AbstractPainterRGB565::renderInit()</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56510renderInitEv) referenced from abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[1cf]">touchgfx::AbstractPainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56510renderNextERhS1_S1_S1_) referenced from abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[194]">touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[194]">touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh) referenced from abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[1ce]">touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)</a> from abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh) referenced from abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[1d0]">touchgfx::GraphWrapAndOverwrite&lang;(short)50&rang;::~GraphWrapAndOverwrite()</a> from screen2viewbase.o(i._ZN8touchgfx21GraphWrapAndOverwriteILs50EED1Ev) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1e0]">touchgfx::AbstractDataGraphWithY::beforeAddValue()</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY14beforeAddValueEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d2]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d2]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d2]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1d5]">touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d5]">touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d5]">touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1d1]">touchgfx::AbstractDataGraphWithY::setScale(int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY8setScaleEi) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d1]">touchgfx::AbstractDataGraphWithY::setScale(int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY8setScaleEi) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d1]">touchgfx::AbstractDataGraphWithY::setScale(int)</a> from abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY8setScaleEi) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1e9]">touchgfx::AbstractButtonContainer::executeAction()</a> from imageview.o(i._ZN8touchgfx23AbstractButtonContainer13executeActionEv) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1e4]">touchgfx::TextAreaWithOneWildcard::getTextHeight()</a> from textareawithwildcard.o(i._ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e1]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</a> from textareawithwildcard.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1ea]">touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::handlePressedUpdated()</a> from imageview.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1e7]">touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()</a> from imageview.o(i._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1b6]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from graphelements.o(i._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[1b6]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from graphelements.o(i._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[1b6]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from graphelements.o(i._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[1dd]">touchgfx::DataGraphWrapAndOverwrite::beforeAddValue()</a> from graphwrapandoverwrite.o(i._ZN8touchgfx25DataGraphWrapAndOverwrite14beforeAddValueEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1dd]">touchgfx::DataGraphWrapAndOverwrite::beforeAddValue()</a> from graphwrapandoverwrite.o(i._ZN8touchgfx25DataGraphWrapAndOverwrite14beforeAddValueEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1de]">touchgfx::DataGraphWrapAndOverwrite::addValue(int)</a> from graphwrapandoverwrite.o(i._ZN8touchgfx25DataGraphWrapAndOverwrite8addValueEi) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1de]">touchgfx::DataGraphWrapAndOverwrite::addValue(int)</a> from graphwrapandoverwrite.o(i._ZN8touchgfx25DataGraphWrapAndOverwrite8addValueEi) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1ee]">touchgfx::ScrollWheelWithSelectionStyle::setCircular(bool)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle11setCircularEb) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1f5]">touchgfx::ScrollWheelWithSelectionStyle::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&, touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEES2_S6_) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1ed]">touchgfx::ScrollWheelWithSelectionStyle::setHorizontal(bool)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle13setHorizontalEb) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1f4]">touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle15setDrawableSizeEss) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1ef]">touchgfx::ScrollWheelWithSelectionStyle::setNumberOfItems(short)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle16setNumberOfItemsEs) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1f3]">touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemMargin(short, short)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle21setSelectedItemMarginEss) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1f1]">touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemOffset(short)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle21setSelectedItemOffsetEs) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1f2]">touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemExtraSize(short, short)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle24setSelectedItemExtraSizeEss) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1eb]">touchgfx::ScrollWheelWithSelectionStyle::setWidth(short)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle8setWidthEs) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1ec]">touchgfx::ScrollWheelWithSelectionStyle::setHeight(short)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle9setHeightEs) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1f0]">touchgfx::ScrollWheelWithSelectionStyle::setOffset(int)</a> from scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle9setOffsetEi) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1fa]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1f7]">touchgfx::HAL::initialize()</a> from hal.o(i._ZN8touchgfx3HAL10initializeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[b4]">touchgfx::HAL::getBlitCaps()</a> from hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b4]">touchgfx::HAL::getBlitCaps()</a> from hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[b9]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b9]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[b0]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b0]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[b8]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b8]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1f8]">touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ae]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ae]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c3]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c3]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[b1]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b1]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[bc]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bc]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ab]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ab]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c1]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c1]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ca]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ca]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c4]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c4]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c8]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c8]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c9]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c9]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[b5]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b5]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[b7]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b7]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[b6]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[b6]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[bb]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bb]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ba]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ba]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1fb]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[af]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[af]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1f9]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c2]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c2]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[61]">touchgfx::Rect::Rect()</a> from application.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb)
 <LI><a href="#[61]">touchgfx::Rect::Rect()</a> from application.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(i._ZN8touchgfx11ApplicationC1Ev)
 <LI><a href="#[61]">touchgfx::Rect::Rect()</a> from application.o(i._ZN8touchgfx4RectC1Ev) referenced from touchgfxgeneratedhal.o(i.__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90)
 <LI><a href="#[177]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[177]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[177]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[199]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[199]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[200]">touchgfx::Canvas::~Canvas()</a> from canvas.o(i._ZN8touchgfx6CanvasD1Ev) referenced from canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
 <LI><a href="#[202]">touchgfx::Screen::setupScreen()</a> from screen.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[a9]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[a9]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[a9]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[a9]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[a9]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[a9]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[a9]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[a9]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[cd]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[cd]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[cd]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[cd]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[cd]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[cd]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[cd]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[9c]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[9f]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ce]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[ce]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[ce]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[ce]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[ce]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[ce]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[ce]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[ce]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[9e]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[a0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen2view.o(.constdata__ZTV11Screen2View)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from listviewbase.o(.constdata__ZTV12ListViewBase)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from imageviewbase.o(.constdata__ZTV13ImageViewBase)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from debugwindowview.o(.constdata__ZTV15DebugWindowView)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from networkmenuview.o(.constdata__ZTV15NetworkMenuView)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from listview.o(.constdata__ZTV8ListView)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[9a]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[201]">touchgfx::Screen::~Screen()</a> from screen.o(i._ZN8touchgfx6ScreenD1Ev) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[160]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[203]">touchgfx::Outline::~Outline()</a> from outline.o(i._ZN8touchgfx7OutlineD1Ev) referenced from outline.o(.constdata__ZTVN8touchgfx7OutlineE)
 <LI><a href="#[204]">touchgfx::Callback&lang;Screen1View, const touchgfx::Image&, const touchgfx::ClickEvent&, void&rang;::execute(const touchgfx::Image&, const touchgfx::ClickEvent&)</a> from screen1view.o(t._ZN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7executeES4_S7_) referenced from screen1view.o(.constdata__ZTVN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvEE)
 <LI><a href="#[206]">touchgfx::Callback&lang;ListViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::execute(touchgfx::DrawableListItemsInterface*, short, short)</a> from listviewbase.o(t._ZN8touchgfx8CallbackI12ListViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss) referenced from listviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12ListViewBasePNS_26DrawableListItemsInterfaceEssEE)
 <LI><a href="#[208]">touchgfx::Callback&lang;ListViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from listviewbase.o(t._ZN8touchgfx8CallbackI12ListViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from listviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12ListViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[20a]">touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from imageviewbase.o(t._ZN8touchgfx8CallbackI13ImageViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13ImageViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[20c]">touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</a> from imageviewbase.o(t._ZN8touchgfx8CallbackI13ImageViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13ImageViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[20e]">touchgfx::Callback&lang;NetworkMenuView, short, void, void&rang;::execute(short)</a> from networkmenuview.o(t._ZN8touchgfx8CallbackI15NetworkMenuViewsvvE7executeEs) referenced from networkmenuview.o(.constdata__ZTVN8touchgfx8CallbackI15NetworkMenuViewsvvEE)
 <LI><a href="#[210]">touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from screen1viewbase.o(t._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[212]">touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</a> from screen1viewbase.o(t._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[214]">touchgfx::Callback&lang;Screen2ViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from screen2viewbase.o(t._ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[216]">touchgfx::Callback&lang;NotificationBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from notificationbase.o(t._ZN8touchgfx8CallbackI16NotificationBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from notificationbase.o(.constdata__ZTVN8touchgfx8CallbackI16NotificationBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[218]">touchgfx::Callback&lang;DebugWindowViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from debugwindowviewbase.o(t._ZN8touchgfx8CallbackI19DebugWindowViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19DebugWindowViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[21a]">touchgfx::Callback&lang;NetworkMenuViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::execute(touchgfx::DrawableListItemsInterface*, short, short)</a> from networkmenuviewbase.o(t._ZN8touchgfx8CallbackI19NetworkMenuViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss) referenced from networkmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19NetworkMenuViewBasePNS_26DrawableListItemsInterfaceEssEE)
 <LI><a href="#[21c]">touchgfx::Callback&lang;NetworkMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from networkmenuviewbase.o(t._ZN8touchgfx8CallbackI19NetworkMenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from networkmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19NetworkMenuViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[21e]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[220]">touchgfx::Callback&lang;ListView, void, void, void&rang;::execute()</a> from listview.o(t._ZN8touchgfx8CallbackI8ListViewvvvE7executeEv) referenced from listview.o(.constdata__ZTVN8touchgfx8CallbackI8ListViewvvvEE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[91]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[161]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[8f]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[90]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[8d]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[8e]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[89]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[8a]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[92]">touchgfx::Drawable::moveTo(short, short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[8b]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[8c]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[225]">touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[222]">touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[223]">touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[224]">touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[228]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[6a]">touchgfx::LCD16bpp::~LCD16bpp()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[6a]">touchgfx::LCD16bpp::~LCD16bpp()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[22b]">touchgfx::TextArea::getTextHeight()</a> from textarea.o(i._ZN8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[229]">touchgfx::TextArea::~TextArea()</a> from textarea.o(i._ZN8touchgfx8TextAreaD1Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[86]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[93]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[97]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[94]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[95]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[96]">touchgfx::Container::removeAll()</a> from container.o(i._ZN8touchgfx9Container9removeAllEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[22d]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;DebugWindowView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI15DebugWindowViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI15DebugWindowViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[22e]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;DebugWindowView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI15DebugWindowViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI15DebugWindowViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[22f]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;DebugWindowPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20DebugWindowPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20DebugWindowPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[230]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;DebugWindowPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20DebugWindowPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20DebugWindowPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[231]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[232]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[140]">ImageView::setupScreen()</a> from imageview.o(i._ZN9ImageView11setupScreenEv) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[143]">ImageView::handleKeyEvent(unsigned char)</a> from imageview.o(i._ZN9ImageView14handleKeyEventEh) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[141]">ImageView::tearDownScreen()</a> from imageview.o(i._ZN9ImageView14tearDownScreenEv) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[142]">ImageView::handleTickEvent()</a> from imageview.o(i._ZN9ImageView15handleTickEventEv) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[145]">ImageView::leftButtonClicked()</a> from imageview.o(i._ZN9ImageView17leftButtonClickedEv) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[144]">ImageView::rightButtonClicked()</a> from imageview.o(i._ZN9ImageView18rightButtonClickedEv) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[13f]">ImageView::~ImageView()</a> from imageview.o(i._ZN9ImageViewD1Ev) referenced from imageview.o(.constdata__ZTV9ImageView)
 <LI><a href="#[b2]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[14e]">touchgfx::ScrollBase::getCircular() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase11getCircularEv) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[14e]">touchgfx::ScrollBase::getCircular() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase11getCircularEv) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[14e]">touchgfx::ScrollBase::getCircular() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase11getCircularEv) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[14e]">touchgfx::ScrollBase::getCircular() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase11getCircularEv) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[14c]">touchgfx::ScrollBase::getHorizontal() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase13getHorizontalEv) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[14c]">touchgfx::ScrollBase::getHorizontal() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase13getHorizontalEv) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[14c]">touchgfx::ScrollBase::getHorizontal() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase13getHorizontalEv) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[14c]">touchgfx::ScrollBase::getHorizontal() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase13getHorizontalEv) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[150]">touchgfx::ScrollBase::getNumberOfItems() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase16getNumberOfItemsEv) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[150]">touchgfx::ScrollBase::getNumberOfItems() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase16getNumberOfItemsEv) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[150]">touchgfx::ScrollBase::getNumberOfItems() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase16getNumberOfItemsEv) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[150]">touchgfx::ScrollBase::getNumberOfItems() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase16getNumberOfItemsEv) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[155]">touchgfx::ScrollBase::getNearestAlignedOffset(int) const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEi) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[155]">touchgfx::ScrollBase::getNearestAlignedOffset(int) const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEi) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[155]">touchgfx::ScrollBase::getNearestAlignedOffset(int) const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEi) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[153]">touchgfx::ScrollBase::getOffset() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase9getOffsetEv) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[153]">touchgfx::ScrollBase::getOffset() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase9getOffsetEv) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[153]">touchgfx::ScrollBase::getOffset() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase9getOffsetEv) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[153]">touchgfx::ScrollBase::getOffset() const</a> from scrollbase.o(i._ZNK8touchgfx10ScrollBase9getOffsetEv) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[159]">touchgfx::ScrollList::keepOffsetInsideLimits(int, short) const</a> from scrolllist.o(i._ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEis) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[15a]">touchgfx::ScrollList::getNearestAlignedOffset(int) const</a> from scrolllist.o(i._ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEi) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[163]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[163]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[163]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[163]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[163]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[15f]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[15f]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[15f]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[15f]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[15f]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[15e]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[15e]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[15e]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[15e]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[15e]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[165]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[165]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[165]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[165]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[165]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[15d]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[15d]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[15d]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[164]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[164]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[164]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[164]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[164]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[172]">touchgfx::DrawableList::getCircular() const</a> from drawablelist.o(i._ZNK8touchgfx12DrawableList11getCircularEv) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[170]">touchgfx::DrawableList::getHorizontal() const</a> from drawablelist.o(i._ZNK8touchgfx12DrawableList13getHorizontalEv) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[17e]">touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const</a> from boxwithborder.o(i._ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[18c]">touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18e]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[190]">touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18f]">touchgfx::GeneratedFont::getContextualFormsTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[195]">touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const</a> from buttonwithlabel.o(i._ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[19f]">touchgfx::ScrollWheelBase::keepOffsetInsideLimits(int, short) const</a> from scrollwheelbase.o(i._ZNK8touchgfx15ScrollWheelBase22keepOffsetInsideLimitsEis) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[19f]">touchgfx::ScrollWheelBase::keepOffsetInsideLimits(int, short) const</a> from scrollwheelbase.o(i._ZNK8touchgfx15ScrollWheelBase22keepOffsetInsideLimitsEis) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[1a2]">touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const</a> from graphelements.o(i._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1a8]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a8]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1a8]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a8]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1b3]">touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const</a> from graphelements.o(i._ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[1b7]">touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const</a> from graphelements.o(i._ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[1c9]">touchgfx::ScrollableContainer::getContainedArea() const</a> from scrollablecontainer.o(i._ZNK8touchgfx19ScrollableContainer16getContainedAreaEv) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1cc]">touchgfx::ScrollableContainer::getChildrenContainedArea() const</a> from scrollablecontainer.o(i._ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[1da]">touchgfx::AbstractDataGraphWithY::indexToScreenXQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1da]">touchgfx::AbstractDataGraphWithY::indexToScreenXQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1da]">touchgfx::AbstractDataGraphWithY::indexToScreenXQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1db]">touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1db]">touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1db]">touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1d8]">touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d8]">touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d8]">touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1d9]">touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d9]">touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d9]">touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1d4]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMax() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d4]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMax() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d4]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMax() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1d3]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMin() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d3]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMin() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d3]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMin() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1d7]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxScaled() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d7]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxScaled() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d7]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxScaled() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1d6]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinScaled() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1d6]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinScaled() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d6]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinScaled() const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1dc]">touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1dc]">touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1dc]">touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1df]">touchgfx::AbstractDataGraphWithY::realIndex(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY9realIndexEs) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[1df]">touchgfx::AbstractDataGraphWithY::realIndex(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY9realIndexEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1df]">touchgfx::AbstractDataGraphWithY::realIndex(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY9realIndexEs) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[1e5]">touchgfx::TextAreaWithOneWildcard::getTextWidth() const</a> from textareawithwildcard.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e2]">touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1b4]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from graphelements.o(i._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[1b4]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from graphelements.o(i._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[1b4]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from graphelements.o(i._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[17f]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[17f]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1f6]">touchgfx::Box::draw(const touchgfx::Rect&) const</a> from box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1fc]">touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from texts.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[1fd]">touchgfx::Font::getGSUBTable() const</a> from constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[1fd]">touchgfx::Font::getGSUBTable() const</a> from constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[188]">touchgfx::Font::getFontHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font13getFontHeightEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[188]">touchgfx::Font::getFontHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font13getFontHeightEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[188]">touchgfx::Font::getFontHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font13getFontHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[185]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[185]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[185]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18a]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18a]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[18a]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18b]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18b]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[18b]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[184]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[184]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[184]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[183]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[183]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[183]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[186]">touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[186]">touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[186]">touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[187]">touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[187]">touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[187]">touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18d]">touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18d]">touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[18d]">touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[189]">touchgfx::Font::getMinimumTextHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[189]">touchgfx::Font::getMinimumTextHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[189]">touchgfx::Font::getMinimumTextHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1fe]">touchgfx::Font::getContextualFormsTable() const</a> from constfont.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[1fe]">touchgfx::Font::getContextualFormsTable() const</a> from constfont.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[182]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[182]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[182]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[175]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[175]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[175]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[174]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[174]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[174]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[196]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[196]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1ff]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[205]">touchgfx::Callback&lang;Screen1View, const touchgfx::Image&, const touchgfx::ClickEvent&, void&rang;::isValid() const</a> from screen1view.o(t._ZNK8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7isValidEv) referenced from screen1view.o(.constdata__ZTVN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvEE)
 <LI><a href="#[207]">touchgfx::Callback&lang;ListViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::isValid() const</a> from listviewbase.o(t._ZNK8touchgfx8CallbackI12ListViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv) referenced from listviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12ListViewBasePNS_26DrawableListItemsInterfaceEssEE)
 <LI><a href="#[209]">touchgfx::Callback&lang;ListViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from listviewbase.o(t._ZNK8touchgfx8CallbackI12ListViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from listviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12ListViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[20b]">touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from imageviewbase.o(t._ZNK8touchgfx8CallbackI13ImageViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13ImageViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[20d]">touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</a> from imageviewbase.o(t._ZNK8touchgfx8CallbackI13ImageViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13ImageViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[20f]">touchgfx::Callback&lang;NetworkMenuView, short, void, void&rang;::isValid() const</a> from networkmenuview.o(t._ZNK8touchgfx8CallbackI15NetworkMenuViewsvvE7isValidEv) referenced from networkmenuview.o(.constdata__ZTVN8touchgfx8CallbackI15NetworkMenuViewsvvEE)
 <LI><a href="#[211]">touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from screen1viewbase.o(t._ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[213]">touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</a> from screen1viewbase.o(t._ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[215]">touchgfx::Callback&lang;Screen2ViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from screen2viewbase.o(t._ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[217]">touchgfx::Callback&lang;NotificationBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from notificationbase.o(t._ZNK8touchgfx8CallbackI16NotificationBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from notificationbase.o(.constdata__ZTVN8touchgfx8CallbackI16NotificationBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[219]">touchgfx::Callback&lang;DebugWindowViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from debugwindowviewbase.o(t._ZNK8touchgfx8CallbackI19DebugWindowViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19DebugWindowViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[21b]">touchgfx::Callback&lang;NetworkMenuViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::isValid() const</a> from networkmenuviewbase.o(t._ZNK8touchgfx8CallbackI19NetworkMenuViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv) referenced from networkmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19NetworkMenuViewBasePNS_26DrawableListItemsInterfaceEssEE)
 <LI><a href="#[21d]">touchgfx::Callback&lang;NetworkMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from networkmenuviewbase.o(t._ZNK8touchgfx8CallbackI19NetworkMenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from networkmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19NetworkMenuViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[21f]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[221]">touchgfx::Callback&lang;ListView, void, void, void&rang;::isValid() const</a> from listview.o(t._ZNK8touchgfx8CallbackI8ListViewvvvE7isValidEv) referenced from listview.o(.constdata__ZTVN8touchgfx8CallbackI8ListViewvvvEE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[85]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[87]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[84]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[88]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[226]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[227]">touchgfx::LCD16bpp::framebufferStride() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferStrideEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1e3]">touchgfx::TextArea::getSolidRect() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e3]">touchgfx::TextArea::getSolidRect() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[22c]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1e6]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e6]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[22a]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[181]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[181]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[83]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from networklist.o(.constdata__ZTV11NetworkList)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from notification.o(.constdata__ZTV12Notification)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from networklistbase.o(.constdata__ZTV15NetworkListBase)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from notificationbase.o(.constdata__ZTV16NotificationBase)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
 <LI><a href="#[82]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 19 times from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 6 times from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 3 times from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[154]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[54]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l431xx.o(.text)
 <LI><a href="#[236]">__sti___15_Application_cpp</a> from application.o(i.__sti___15_Application_cpp) referenced from application.o(.init_array)
 <LI><a href="#[235]">__sti___21_typedtextdatabase_cpp_05ec7672</a> from typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp_05ec7672) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[234]">__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90</a> from touchgfxgeneratedhal.o(i.__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90) referenced from touchgfxgeneratedhal.o(.init_array)
 <LI><a href="#[233]">__sti___25_TouchGFXConfiguration_cpp_f5abfd34</a> from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[237]">__sti___7_LCD_cpp</a> from lcd.o(i.__sti___7_LCD_cpp) referenced from lcd.o(.init_array)
 <LI><a href="#[66]">_sputc</a> from printf5.o(i._sputc) referenced from printf5.o(i.__0sprintf$5)
 <LI><a href="#[65]">fputc</a> from main.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[52]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[54]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(.text)
</UL>
<P><STRONG><a name="[427]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[239]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[248]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[428]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[23b]"></a>_main_cpp_init$empty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8a.o(.ARM.Collect$$$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _main_cpp_init$empty &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[429]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[42a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[42b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[23c]"></a>__rt_final_cpp$nonempty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __rt_final_cpp$nonempty &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[42c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[8]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l431xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[395]"></a>__aeabi_vec_dtor</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, aeabi_vec_dtor_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems()
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::~DrawableListItems()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::~DrawableListItems()
</UL>

<P><STRONG><a name="[23e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[305]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[3bd]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[42d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[42e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[42f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[25c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::setupScreen()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::ScrollableContainer()
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[430]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[304]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[238]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cpp_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_cpp_init$empty
</UL>

<P><STRONG><a name="[244]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_30_4bpp()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_20_4bpp()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_14_4bpp()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_20_4bpp()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_14_4bpp()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_10_4bpp()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Amiri_Regular_22_4bpp()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Amiri_Regular_18_2bpp()
</UL>

<P><STRONG><a name="[240]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[431]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[432]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_dtor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[40e]"></a>__rt_SIGPVFN</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_signal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[23d]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_final_cpp$nonempty
</UL>

<P><STRONG><a name="[23a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[433]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[434]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_final.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[36a]"></a>CRC_Lock</STRONG> (Thumb, 152 bytes, Stack size 4 bytes, stm32_crc_lock.o(i.CRC_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CRC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[1f]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA1_Channel3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[24a]"></a>DisplayDriver_TransferCompleteCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i.DisplayDriver_TransferCompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = DisplayDriver_TransferCompleteCallback &rArr; touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ()
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
</UL>

<P><STRONG><a name="[25e]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>

<P><STRONG><a name="[24e]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, stm32l4xx_hal_crc_ex.o(i.HAL_CRCEx_Polynomial_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[24c]"></a>HAL_CRC_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32l4xx_hal_crc.o(i.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24d]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[28b]"></a>HAL_DMA_Abort</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[270]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[249]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[274]"></a>HAL_DMA_Init</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[24f]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
</UL>

<P><STRONG><a name="[251]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32l4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_Init
</UL>

<P><STRONG><a name="[25f]"></a>HAL_GPIO_Init</STRONG> (Thumb, 434 bytes, Stack size 56 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>

<P><STRONG><a name="[416]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toggle_led
</UL>

<P><STRONG><a name="[29c]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_Init
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_DrawImage
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteSmallData
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteData
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteCommand
</UL>

<P><STRONG><a name="[252]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[29e]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[29f]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[253]"></a>HAL_I2C_Init</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[255]"></a>HAL_I2C_Master_Receive</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Master_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_I2C_Master_Receive &rArr; I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns2009_read
</UL>

<P><STRONG><a name="[25a]"></a>HAL_I2C_Master_Transmit</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Master_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_I2C_Master_Transmit &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns2009_read
</UL>

<P><STRONG><a name="[254]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 114 bytes, Stack size 128 bytes, stm32l4xx_hal_msp.o(i.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[2be]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[260]"></a>HAL_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[262]"></a>HAL_InitTick</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32l4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[263]"></a>HAL_MspInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[275]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[265]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[261]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2c0]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2b3]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[267]"></a>HAL_QSPI_Init</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, stm32l4xx_hal_qspi.o(i.HAL_QSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[268]"></a>HAL_QSPI_MspInit</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, stm32l4xx_hal_msp.o(i.HAL_QSPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_QSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
</UL>

<P><STRONG><a name="[25d]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 682 bytes, Stack size 40 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>

<P><STRONG><a name="[26b]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2c1]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[2c2]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[26c]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[26d]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1382 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[271]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAAbortOnError
</UL>

<P><STRONG><a name="[26f]"></a>HAL_SPI_IRQHandler</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SPI_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[272]"></a>HAL_SPI_Init</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[273]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, stm32l4xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[276]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteSmallData
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteData
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteCommand
</UL>

<P><STRONG><a name="[278]"></a>HAL_SPI_Transmit_DMA</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_SPI_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_DrawImage
</UL>

<P><STRONG><a name="[279]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.HAL_SPI_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HAL_SPI_TxCpltCallback &rArr; DisplayDriver_TransferCompleteCallback &rArr; touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDriver_TransferCompleteCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[2b4]"></a>HAL_SPI_TxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitCplt
</UL>

<P><STRONG><a name="[264]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[283]"></a>HAL_TIMEx_Break2Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_Break2Callback))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[282]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[285]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[413]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27a]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27b]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[415]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27e]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[27d]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 388 bytes, Stack size 16 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_Break2Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[27f]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[280]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[281]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32l4xx_it.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfxTickHandler
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toggle_led
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[284]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[28c]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UARTEx_RxEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
</UL>

<P><STRONG><a name="[28d]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[28a]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[288]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 652 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[28f]"></a>HAL_UART_Init</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[290]"></a>HAL_UART_MspInit</STRONG> (Thumb, 218 bytes, Stack size 144 bytes, stm32l4xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[294]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[296]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
</UL>

<P><STRONG><a name="[297]"></a>HAL_UART_Transmit</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[28e]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[a]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2a1]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_touchgfx.o(i.MX_TouchGFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::Application::Application() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a3]"></a>MX_TouchGFX_Process</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_touchgfx.o(i.MX_TouchGFX_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MX_TouchGFX_Process &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2a7]"></a>NORFLASH_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, norflash.o(i.NORFLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NORFLASH_Init &rArr; NORFLASH_Qspi_Enable &rArr; NORFLASH_Write_SR &rArr; QSPI_Send_CMD &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Transmit
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Send_CMD
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Init
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Write_Enable
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_ReadID
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Qspi_Enable
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a9]"></a>NORFLASH_Qspi_Enable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, norflash.o(i.NORFLASH_Qspi_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = NORFLASH_Qspi_Enable &rArr; NORFLASH_Write_SR &rArr; QSPI_Send_CMD &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Send_CMD
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Write_SR
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Write_Enable
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Init
</UL>

<P><STRONG><a name="[2aa]"></a>NORFLASH_ReadID</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, norflash.o(i.NORFLASH_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = NORFLASH_ReadID &rArr; QSPI_Send_CMD &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Send_CMD
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Init
</UL>

<P><STRONG><a name="[2af]"></a>NORFLASH_ReadSR</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, norflash.o(i.NORFLASH_ReadSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = NORFLASH_ReadSR &rArr; QSPI_Send_CMD &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Send_CMD
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Qspi_Enable
</UL>

<P><STRONG><a name="[2ac]"></a>NORFLASH_Write_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, norflash.o(i.NORFLASH_Write_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = NORFLASH_Write_Enable &rArr; QSPI_Send_CMD &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Send_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Qspi_Enable
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Init
</UL>

<P><STRONG><a name="[2b0]"></a>NORFLASH_Write_SR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, norflash.o(i.NORFLASH_Write_SR))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NORFLASH_Write_SR &rArr; QSPI_Send_CMD &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Transmit
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Send_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Qspi_Enable
</UL>

<P><STRONG><a name="[10]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2a8]"></a>QSPI_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, qspi.o(i.QSPI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Init
</UL>

<P><STRONG><a name="[2b1]"></a>QSPI_Receive</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, qspi.o(i.QSPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = QSPI_Receive &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Wait_Flag
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_ReadSR
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_ReadID
</UL>

<P><STRONG><a name="[2ad]"></a>QSPI_Send_CMD</STRONG> (Thumb, 112 bytes, Stack size 28 bytes, qspi.o(i.QSPI_Send_CMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = QSPI_Send_CMD &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Wait_Flag
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Write_SR
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Write_Enable
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_ReadSR
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_ReadID
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Qspi_Enable
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Init
</UL>

<P><STRONG><a name="[2ae]"></a>QSPI_Transmit</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, qspi.o(i.QSPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = QSPI_Transmit &rArr; QSPI_Wait_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Wait_Flag
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Write_SR
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Init
</UL>

<P><STRONG><a name="[2b2]"></a>QSPI_Wait_Flag</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, qspi.o(i.QSPI_Wait_Flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QSPI_Wait_Flag
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Transmit
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Send_CMD
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Receive
</UL>

<P><STRONG><a name="[33]"></a>SPI1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI1_IRQHandler &rArr; HAL_SPI_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2b7]"></a>ST7789_DrawImage</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, st7789.o(i.ST7789_DrawImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_SetAddressWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfxDisplayDriverTransmitBlock
</UL>

<P><STRONG><a name="[2b9]"></a>ST7789_Init</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, st7789.o(i.ST7789_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ST7789_Init &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_SetRotation
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteSmallData
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteData
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2bd]"></a>ST7789_SetRotation</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, st7789.o(i.ST7789_SetRotation))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ST7789_SetRotation &rArr; ST7789_WriteSmallData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteSmallData
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_Init
</UL>

<P><STRONG><a name="[e]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2bf]"></a>SystemClock_Config</STRONG> (Thumb, 110 bytes, Stack size 96 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_stm32l4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[27c]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32l4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[292]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[293]"></a>UART_CheckIdleState</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[291]"></a>UART_SetConfig</STRONG> (Thumb, 478 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[295]"></a>UART_Start_Receive_IT</STRONG> (Thumb, 176 bytes, Stack size 12 bytes, stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>

<P><STRONG><a name="[298]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, stm32l4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[36]"></a>USART2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l431xx.o(RESET)
</UL>
<P><STRONG><a name="[2c3]"></a>getFont_NanumGothic_14_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, table_nanumgothic_14_4bpp.o(i._Z27getFont_NanumGothic_14_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_NanumGothic_14_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2c6]"></a>getFont_NanumGothic_20_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, table_nanumgothic_20_4bpp.o(i._Z27getFont_NanumGothic_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_NanumGothic_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2c7]"></a>getFont_NanumGothic_30_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, table_nanumgothic_30_4bpp.o(i._Z27getFont_NanumGothic_30_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_NanumGothic_30_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2c8]"></a>getFont_chinese_msyh_10_4bpp()</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, table_chinese_msyh_10_4bpp.o(i._Z28getFont_chinese_msyh_10_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_chinese_msyh_10_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2c9]"></a>getFont_chinese_msyh_14_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, table_chinese_msyh_14_4bpp.o(i._Z28getFont_chinese_msyh_14_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_chinese_msyh_14_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2ca]"></a>getFont_chinese_msyh_20_4bpp()</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, table_chinese_msyh_20_4bpp.o(i._Z28getFont_chinese_msyh_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_chinese_msyh_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2cb]"></a>getFont_Amiri_Regular_18_2bpp()</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, table_amiri_regular_18_2bpp.o(i._Z29getFont_Amiri_Regular_18_2bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = getFont_Amiri_Regular_18_2bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2cc]"></a>getFont_Amiri_Regular_22_4bpp()</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, table_amiri_regular_22_4bpp.o(i._Z29getFont_Amiri_Regular_22_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_Amiri_Regular_22_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[98]"></a>NetworkList::initialize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, networklist.o(i._ZN11NetworkList10initializeEv))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networklist.o(.constdata__ZTV11NetworkList)
</UL>
<P><STRONG><a name="[2cd]"></a>NetworkList::setupElement(unsigned short, TEXTS)</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, networklist.o(i._ZN11NetworkList12setupElementEt5TEXTS))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NetworkList::setupElement(unsigned short, TEXTS) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::FunctionListUpdateItem(NetworkList&, short)
</UL>

<P><STRONG><a name="[60]"></a>NetworkList::NetworkList()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, networklist.o(i._ZN11NetworkListC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NetworkList::NetworkList() &rArr; NetworkListBase::NetworkListBase() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseC1Ev)
</UL>
<P><STRONG><a name="[435]"></a>NetworkList::NetworkList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, networklist.o(i._ZN11NetworkListC1Ev), UNUSED)

<P><STRONG><a name="[62]"></a>NetworkList::~NetworkList()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, networklist.o(i._ZN11NetworkListD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> networkmenuview.o(i._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EED1Ev)
</UL>
<P><STRONG><a name="[436]"></a>NetworkList::~NetworkList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, networklist.o(i._ZN11NetworkListD1Ev), UNUSED)

<P><STRONG><a name="[9b]"></a>Screen1View::setupScreen()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1View11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen1View::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[a2]"></a>Screen1View::handleKeyEvent(unsigned char)</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1View14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Screen1View::handleKeyEvent(unsigned char) &rArr; FrontendApplicationBase::gotoNetworkMenuScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoNetworkMenuScreenNoTransition()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen2ScreenNoTransition()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoImageScreenNoTransition()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoListScreenNoTransition()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::menuSelectRight()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::menuSelectLeft()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[2d3]"></a>Screen1View::menuSelectLeft()</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View14menuSelectLeftEv))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::leftButtonClicked()
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[9d]"></a>Screen1View::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[a1]"></a>Screen1View::handleTickEvent()</STRONG> (Thumb, 1252 bytes, Stack size 48 bytes, screen1view.o(i._ZN11Screen1View15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Screen1View::handleTickEvent() &rArr; Screen1View::setSelectedMenuItem() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseInOut(unsigned short, short, short, unsigned short)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setAlpha(unsigned char)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setSelectedMenuItem()
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[70]"></a>Screen1View::imgClickHandler(const touchgfx::Image&, const touchgfx::ClickEvent&)</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1View15imgClickHandlerERKN8touchgfx5ImageERKNS0_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Screen1View::imgClickHandler(const touchgfx::Image&, const touchgfx::ClickEvent&) &rArr; FrontendApplicationBase::gotoDebugWindowScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoDebugWindowScreenNoTransition()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoNetworkMenuScreenNoTransition()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen2ScreenNoTransition()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoListScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata)
</UL>
<P><STRONG><a name="[2d2]"></a>Screen1View::menuSelectRight()</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View15menuSelectRightEv))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::rightButtonClicked()
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[a3]"></a>Screen1View::leftButtonClicked()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View17leftButtonClickedEv))
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::menuSelectLeft()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[a4]"></a>Screen1View::rightButtonClicked()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View18rightButtonClickedEv))
<BR><BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::menuSelectRight()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[2d8]"></a>Screen1View::setSelectedMenuItem()</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, screen1view.o(i._ZN11Screen1View19setSelectedMenuItemEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Screen1View::setSelectedMenuItem() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
</UL>

<P><STRONG><a name="[2da]"></a>Screen1View::Screen1View()</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[437]"></a>Screen1View::Screen1View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewC1Ev), UNUSED)

<P><STRONG><a name="[99]"></a>Screen1View::~Screen1View()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen1View::~Screen1View()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[438]"></a>Screen1View::~Screen1View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewD1Ev), UNUSED)

<P><STRONG><a name="[a6]"></a>Screen2View::setupScreen()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screen2view.o(i._ZN11Screen2View11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen2View::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2view.o(.constdata__ZTV11Screen2View)
</UL>
<P><STRONG><a name="[a7]"></a>Screen2View::tearDownScreen()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screen2view.o(i._ZN11Screen2View14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen2view.o(.constdata__ZTV11Screen2View)
</UL>
<P><STRONG><a name="[a8]"></a>Screen2View::handleTickEvent()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, screen2view.o(i._ZN11Screen2View15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Screen2View::handleTickEvent() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::addDataPoint(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2view.o(.constdata__ZTV11Screen2View)
</UL>
<P><STRONG><a name="[aa]"></a>Screen2View::ShowData()</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, screen2view.o(i._ZN11Screen2View8ShowDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = Screen2View::ShowData() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2view.o(.constdata__ZTV11Screen2View)
</UL>
<P><STRONG><a name="[2df]"></a>Screen2View::Screen2View()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, screen2view.o(i._ZN11Screen2ViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = Screen2View::Screen2View() &rArr; Screen2ViewBase::Screen2ViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[439]"></a>Screen2View::Screen2View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen2view.o(i._ZN11Screen2ViewC1Ev), UNUSED)

<P><STRONG><a name="[a5]"></a>Screen2View::~Screen2View()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen2view.o(i._ZN11Screen2ViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen2View::~Screen2View() &rArr; Screen2ViewBase::~Screen2ViewBase()
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::~Screen2ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2view.o(.constdata__ZTV11Screen2View)
</UL>
<P><STRONG><a name="[43a]"></a>Screen2View::~Screen2View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen2view.o(i._ZN11Screen2ViewD1Ev), UNUSED)

<P><STRONG><a name="[ac]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[be]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ad]"></a>TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&) &rArr; TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&) &rArr; touchgfx::PartialFrameBufferManager::tryTransmitBlock() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[bf]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c7]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt))
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[bd]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c0]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv))
<BR><BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b3]"></a>TouchGFXHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL9blockCopyEPvPKvj))
<BR><BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[6c]"></a>TouchGFXHAL::~TouchGFXHAL()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
</UL>
<P><STRONG><a name="[43b]"></a>TouchGFXHAL::~TouchGFXHAL__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev), UNUSED)

<P><STRONG><a name="[2e9]"></a>FrontendHeap::FrontendHeap()</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::Application::Application() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[43c]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev), UNUSED)

<P><STRONG><a name="[6d]"></a>FrontendHeap::~FrontendHeap()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FrontendHeap::~FrontendHeap()
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.touchgfx_init)
<LI> touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[43d]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev), UNUSED)

<P><STRONG><a name="[cc]"></a>ListViewBase::setupScreen()</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, listviewbase.o(i._ZN12ListViewBase11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ListViewBase::setupScreen() &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata__ZTV12ListViewBase)
</UL>
<P><STRONG><a name="[7a]"></a>ListViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, listviewbase.o(i._ZN12ListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ListViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>ListViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface*, short, short)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, listviewbase.o(i._ZN12ListViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ListViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface*, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>ListViewBase::languageSelectorWheelUpdateItem(languageSelectorElement&, short)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, listviewbase.o(i._ZN12ListViewBase31languageSelectorWheelUpdateItemER23languageSelectorElements))
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata__ZTV12ListViewBase)
</UL>
<P><STRONG><a name="[d0]"></a>ListViewBase::languageSelectorWheelUpdateCenterItem(languageSelectorElementCenter&, short)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, listviewbase.o(i._ZN12ListViewBase37languageSelectorWheelUpdateCenterItemER29languageSelectorElementCenters))
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata__ZTV12ListViewBase)
</UL>
<P><STRONG><a name="[2ef]"></a>ListViewBase::ListViewBase()</STRONG> (Thumb, 628 bytes, Stack size 88 bytes, listviewbase.o(i._ZN12ListViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ListViewBase::ListViewBase() &rArr; touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::animateToItem(short, short)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::ScrollWheelWithSelectionStyle()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemExtraSize(short, short)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemOffset(short)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemMargin(short, short)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setNumberOfItems(short)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setHorizontal(bool)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&, touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setCircular(bool)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setSwipeAcceleration(unsigned short)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setDragAcceleration(unsigned short)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setEasingEquation(short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::ListView()
</UL>

<P><STRONG><a name="[43e]"></a>ListViewBase::ListViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, listviewbase.o(i._ZN12ListViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[cb]"></a>ListViewBase::~ListViewBase()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, listviewbase.o(i._ZN12ListViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ListViewBase::~ListViewBase() &rArr; touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::~DrawableListItems()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;ListPresenter&rang;::~View()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata__ZTV12ListViewBase)
</UL>
<P><STRONG><a name="[43f]"></a>ListViewBase::~ListViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, listviewbase.o(i._ZN12ListViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[d1]"></a>Notification::initialize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, notification.o(i._ZN12Notification10initializeEv))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notification.o(.constdata__ZTV12Notification)
</UL>
<P><STRONG><a name="[d2]"></a>Notification::OKButtonClicked()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, notification.o(i._ZN12Notification15OKButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> notification.o(.constdata__ZTV12Notification)
</UL>
<P><STRONG><a name="[2fc]"></a>Notification::Notification()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, notification.o(i._ZN12NotificationC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Notification::Notification() &rArr; NotificationBase::NotificationBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
</UL>

<P><STRONG><a name="[440]"></a>Notification::Notification__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, notification.o(i._ZN12NotificationC1Ev), UNUSED)

<P><STRONG><a name="[d4]"></a>ImageViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, imageviewbase.o(i._ZN13ImageViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
</UL>
<P><STRONG><a name="[d6]"></a>ImageViewBase::leftButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, imageviewbase.o(i._ZN13ImageViewBase17leftButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
</UL>
<P><STRONG><a name="[d5]"></a>ImageViewBase::rightButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, imageviewbase.o(i._ZN13ImageViewBase18rightButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
</UL>
<P><STRONG><a name="[78]"></a>ImageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, imageviewbase.o(i._ZN13ImageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ImageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>ImageViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, imageviewbase.o(i._ZN13ImageViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ImageViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[2fe]"></a>ImageViewBase::ImageViewBase()</STRONG> (Thumb, 580 bytes, Stack size 56 bytes, imageviewbase.o(i._ZN13ImageViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ImageViewBase::ImageViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::ImageView()
</UL>

<P><STRONG><a name="[441]"></a>ImageViewBase::ImageViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, imageviewbase.o(i._ZN13ImageViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[d3]"></a>ImageViewBase::~ImageViewBase()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, imageviewbase.o(i._ZN13ImageViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ImageViewBase::~ImageViewBase()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;ImagePresenter&rang;::~View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
</UL>
<P><STRONG><a name="[442]"></a>ImageViewBase::~ImageViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, imageviewbase.o(i._ZN13ImageViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[d8]"></a>ListPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, listpresenter.o(i._ZN13ListPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> listpresenter.o(.constdata__ZTV13ListPresenter)
</UL>
<P><STRONG><a name="[d7]"></a>ListPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, listpresenter.o(i._ZN13ListPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> listpresenter.o(.constdata__ZTV13ListPresenter)
</UL>
<P><STRONG><a name="[423]"></a>ListPresenter::ListPresenter(ListView&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, listpresenter.o(i._ZN13ListPresenterC1ER8ListView))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[443]"></a>ListPresenter::ListPresenter__sub_object(ListView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, listpresenter.o(i._ZN13ListPresenterC1ER8ListView), UNUSED)

<P><STRONG><a name="[d9]"></a>ListPresenter::~ListPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, listpresenter.o(i._ZN13ListPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> listpresenter.o(.constdata__ZTV13ListPresenter)
</UL>
<P><STRONG><a name="[444]"></a>ListPresenter::~ListPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, listpresenter.o(i._ZN13ListPresenterD1Ev), UNUSED)

<P><STRONG><a name="[419]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[418]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[db]"></a>ImagePresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, imagepresenter.o(i._ZN14ImagePresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> imagepresenter.o(.constdata__ZTV14ImagePresenter)
</UL>
<P><STRONG><a name="[da]"></a>ImagePresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, imagepresenter.o(i._ZN14ImagePresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> imagepresenter.o(.constdata__ZTV14ImagePresenter)
</UL>
<P><STRONG><a name="[424]"></a>ImagePresenter::ImagePresenter(ImageView&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, imagepresenter.o(i._ZN14ImagePresenterC1ER9ImageView))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[445]"></a>ImagePresenter::ImagePresenter__sub_object(ImageView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, imagepresenter.o(i._ZN14ImagePresenterC1ER9ImageView), UNUSED)

<P><STRONG><a name="[dc]"></a>ImagePresenter::~ImagePresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, imagepresenter.o(i._ZN14ImagePresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> imagepresenter.o(.constdata__ZTV14ImagePresenter)
</UL>
<P><STRONG><a name="[446]"></a>ImagePresenter::~ImagePresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, imagepresenter.o(i._ZN14ImagePresenterD1Ev), UNUSED)

<P><STRONG><a name="[de]"></a>DebugWindowView::setupScreen()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, debugwindowview.o(i._ZN15DebugWindowView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DebugWindowView::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::setupScreen()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
</UL>
<P><STRONG><a name="[e2]"></a>DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, debugwindowview.o(i._ZN15DebugWindowView14TextAreaAddStrEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = DebugWindowView::TextAreaAddStr(unsigned char*, unsigned) &rArr; touchgfx::ScrollableContainer::doScroll(short, short) &rArr; touchgfx::ScrollableContainer::invalidateScrollbars() &rArr; touchgfx::ScrollableContainer::getYScrollbar() const
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::fromUTF8(const unsigned char*, unsigned short*, unsigned short)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::doScroll(short, short)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
</UL>
<P><STRONG><a name="[e1]"></a>DebugWindowView::handleKeyEvent(unsigned char)</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, debugwindowview.o(i._ZN15DebugWindowView14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DebugWindowView::handleKeyEvent(unsigned char) &rArr; touchgfx::ScrollableContainer::doScroll(short, short) &rArr; touchgfx::ScrollableContainer::invalidateScrollbars() &rArr; touchgfx::ScrollableContainer::getYScrollbar() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::doScroll(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
</UL>
<P><STRONG><a name="[df]"></a>DebugWindowView::tearDownScreen()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, debugwindowview.o(i._ZN15DebugWindowView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
</UL>
<P><STRONG><a name="[e0]"></a>DebugWindowView::handleTickEvent()</STRONG> (Thumb, 120 bytes, Stack size 160 bytes, debugwindowview.o(i._ZN15DebugWindowView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = DebugWindowView::handleTickEvent() &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
</UL>
<P><STRONG><a name="[308]"></a>DebugWindowView::DebugWindowView()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, debugwindowview.o(i._ZN15DebugWindowViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DebugWindowView::DebugWindowView() &rArr; DebugWindowViewBase::DebugWindowViewBase() &rArr; touchgfx::ScrollableContainer::ScrollableContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[447]"></a>DebugWindowView::DebugWindowView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, debugwindowview.o(i._ZN15DebugWindowViewC1Ev), UNUSED)

<P><STRONG><a name="[dd]"></a>DebugWindowView::~DebugWindowView()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, debugwindowview.o(i._ZN15DebugWindowViewD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
</UL>
<P><STRONG><a name="[448]"></a>DebugWindowView::~DebugWindowView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, debugwindowview.o(i._ZN15DebugWindowViewD1Ev), UNUSED)

<P><STRONG><a name="[e3]"></a>NetworkListBase::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, networklistbase.o(i._ZN15NetworkListBase10initializeEv))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkList::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
</UL>
<P><STRONG><a name="[2cf]"></a>NetworkListBase::NetworkListBase()</STRONG> (Thumb, 368 bytes, Stack size 48 bytes, networklistbase.o(i._ZN15NetworkListBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = NetworkListBase::NetworkListBase() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkList::NetworkList()
</UL>

<P><STRONG><a name="[449]"></a>NetworkListBase::NetworkListBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, networklistbase.o(i._ZN15NetworkListBaseC1Ev), UNUSED)

<P><STRONG><a name="[e5]"></a>NetworkMenuView::setupScreen()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, networkmenuview.o(i._ZN15NetworkMenuView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = NetworkMenuView::setupScreen() &rArr; NetworkMenuViewBase::setupScreen() &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::setupScreen()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::animateToItem(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
</UL>
<P><STRONG><a name="[e8]"></a>NetworkMenuView::handleKeyEvent(unsigned char)</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, networkmenuview.o(i._ZN15NetworkMenuView14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NetworkMenuView::handleKeyEvent(unsigned char) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::isAnimating() const
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::animateToItem(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
</UL>
<P><STRONG><a name="[e6]"></a>NetworkMenuView::tearDownScreen()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, networkmenuview.o(i._ZN15NetworkMenuView14tearDownScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NetworkMenuView::tearDownScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
</UL>
<P><STRONG><a name="[e7]"></a>NetworkMenuView::handleTickEvent()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, networkmenuview.o(i._ZN15NetworkMenuView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NetworkMenuView::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
</UL>
<P><STRONG><a name="[e9]"></a>NetworkMenuView::FunctionListUpdateItem(NetworkList&, short)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, networkmenuview.o(i._ZN15NetworkMenuView22FunctionListUpdateItemER11NetworkLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NetworkMenuView::FunctionListUpdateItem(NetworkList&, short) &rArr; NetworkList::setupElement(unsigned short, TEXTS) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkList::setupElement(unsigned short, TEXTS)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
</UL>
<P><STRONG><a name="[6f]"></a>NetworkMenuView::scrollListClickHandler(short)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, networkmenuview.o(i._ZN15NetworkMenuView22scrollListClickHandlerEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NetworkMenuView::scrollListClickHandler(short) &rArr; FrontendApplicationBase::gotoDebugWindowScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoDebugWindowScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata)
</UL>
<P><STRONG><a name="[30c]"></a>NetworkMenuView::NetworkMenuView()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, networkmenuview.o(i._ZN15NetworkMenuViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = NetworkMenuView::NetworkMenuView() &rArr; NetworkMenuViewBase::NetworkMenuViewBase() &rArr; Notification::Notification() &rArr; NotificationBase::NotificationBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setItemSelectedCallback(touchgfx::GenericCallback&lang;short, void, void&rang;&)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[44a]"></a>NetworkMenuView::NetworkMenuView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, networkmenuview.o(i._ZN15NetworkMenuViewC1Ev), UNUSED)

<P><STRONG><a name="[e4]"></a>NetworkMenuView::~NetworkMenuView()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, networkmenuview.o(i._ZN15NetworkMenuViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NetworkMenuView::~NetworkMenuView() &rArr; NetworkMenuViewBase::~NetworkMenuViewBase() &rArr; touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::~DrawableListItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::~NetworkMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
</UL>
<P><STRONG><a name="[44b]"></a>NetworkMenuView::~NetworkMenuView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, networkmenuview.o(i._ZN15NetworkMenuViewD1Ev), UNUSED)

<P><STRONG><a name="[eb]"></a>Screen1ViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN15Screen1ViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[ec]"></a>Screen1ViewBase::leftButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN15Screen1ViewBase17leftButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[ed]"></a>Screen1ViewBase::rightButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN15Screen1ViewBase18rightButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[7f]"></a>Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&) &rArr; FrontendApplicationBase::gotoDebugWindowScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoDebugWindowScreenNoTransition()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoNetworkMenuScreenNoTransition()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen2ScreenNoTransition()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoImageScreenNoTransition()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoListScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata)
</UL>
<P><STRONG><a name="[2db]"></a>Screen1ViewBase::Screen1ViewBase()</STRONG> (Thumb, 940 bytes, Stack size 128 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::displayLeadingZeroForHourIndicator(bool)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
</UL>

<P><STRONG><a name="[44c]"></a>Screen1ViewBase::Screen1ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 128 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[ea]"></a>Screen1ViewBase::~Screen1ViewBase()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[44d]"></a>Screen1ViewBase::~Screen1ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[ef]"></a>Screen2ViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen2viewbase.o(i._ZN15Screen2ViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
</UL>
<P><STRONG><a name="[81]"></a>Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screen2viewbase.o(i._ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2viewbase.o(.constdata)
</UL>
<P><STRONG><a name="[2e0]"></a>Screen2ViewBase::Screen2ViewBase()</STRONG> (Thumb, 1356 bytes, Stack size 112 bytes, screen2viewbase.o(i._ZN15Screen2ViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = Screen2ViewBase::Screen2ViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::setLineWidth(unsigned char)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::setInterval(int)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::setScale(int)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::GraphElementLine()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::setLineWidth(unsigned char)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565()
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphWrapAndOverwrite::DataGraphWrapAndOverwrite(short, int*)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setScale(int)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::GraphElementGridBase()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::Screen2View()
</UL>

<P><STRONG><a name="[44e]"></a>Screen2ViewBase::Screen2ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 112 bytes, screen2viewbase.o(i._ZN15Screen2ViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[ee]"></a>Screen2ViewBase::~Screen2ViewBase()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, screen2viewbase.o(i._ZN15Screen2ViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen2ViewBase::~Screen2ViewBase()
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen2Presenter&rang;::~View()
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndOverwrite&lang;(short)50&rang;::~GraphWrapAndOverwrite()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::~Screen2View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
</UL>
<P><STRONG><a name="[44f]"></a>Screen2ViewBase::~Screen2ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen2viewbase.o(i._ZN15Screen2ViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[f0]"></a>NotificationBase::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, notificationbase.o(i._ZN16NotificationBase10initializeEv))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Notification::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notificationbase.o(.constdata__ZTV16NotificationBase)
</UL>
<P><STRONG><a name="[f1]"></a>NotificationBase::OKButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, notificationbase.o(i._ZN16NotificationBase15OKButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> notificationbase.o(.constdata__ZTV16NotificationBase)
</UL>
<P><STRONG><a name="[7e]"></a>NotificationBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, notificationbase.o(i._ZN16NotificationBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR>[Address Reference Count : 1]<UL><LI> notificationbase.o(.constdata)
</UL>
<P><STRONG><a name="[2fd]"></a>NotificationBase::NotificationBase()</STRONG> (Thumb, 446 bytes, Stack size 88 bytes, notificationbase.o(i._ZN16NotificationBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = NotificationBase::NotificationBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Notification::Notification()
</UL>

<P><STRONG><a name="[450]"></a>NotificationBase::NotificationBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, notificationbase.o(i._ZN16NotificationBaseC1Ev), UNUSED)

<P><STRONG><a name="[f3]"></a>Screen1Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[f7]"></a>Screen1Presenter::GetHour()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter7GetHourEv))
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetHour()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[f2]"></a>Screen1Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[f5]"></a>Screen1Presenter::GetButton()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screen1presenter.o(i._ZN16Screen1Presenter9GetButtonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen1Presenter::GetButton()
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetButton()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[f8]"></a>Screen1Presenter::GetMinute()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter9GetMinuteEv))
<BR><BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetMinute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[f9]"></a>Screen1Presenter::GetSecond()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter9GetSecondEv))
<BR><BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetSecond()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[f6]"></a>Screen1Presenter::IfStarted()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter9IfStartedEv))
<BR><BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::IfStarted()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[41f]"></a>Screen1Presenter::Screen1Presenter(Screen1View&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterC1ER11Screen1View))
<BR><BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[451]"></a>Screen1Presenter::Screen1Presenter__sub_object(Screen1View&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterC1ER11Screen1View), UNUSED)

<P><STRONG><a name="[f4]"></a>Screen1Presenter::~Screen1Presenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[452]"></a>Screen1Presenter::~Screen1Presenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterD1Ev), UNUSED)

<P><STRONG><a name="[fb]"></a>Screen2Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[fd]"></a>Screen2Presenter::GetHumidity()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter11GetHumidityEv))
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetHumidity()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[ff]"></a>Screen2Presenter::GetHeartRate()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, screen2presenter.o(i._ZN16Screen2Presenter12GetHeartRateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen2Presenter::GetHeartRate()
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetHeartRate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[102]"></a>Screen2Presenter::GetSPO2Valid()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter12GetSPO2ValidEv))
<BR><BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetSPO2Valid()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[103]"></a>Screen2Presenter::GetHeartSignal()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter14GetHeartSignalEv))
<BR><BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetHeartSignal()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[fe]"></a>Screen2Presenter::GetTemperature()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter14GetTemperatureEv))
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetTemperature()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[104]"></a>Screen2Presenter::HealthDiagnose()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter14HealthDiagnoseEv))
<BR><BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::HealthDiagnose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[101]"></a>Screen2Presenter::GetHeartRateValid()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter17GetHeartRateValidEv))
<BR><BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetHeartRateValid()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[105]"></a>Screen2Presenter::CancleHealthDiagnose()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter20CancleHealthDiagnoseEv))
<BR><BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::CancelHealthDiagnose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[100]"></a>Screen2Presenter::GetSPO2()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, screen2presenter.o(i._ZN16Screen2Presenter7GetSPO2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen2Presenter::GetSPO2()
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetSPO2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[fa]"></a>Screen2Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[420]"></a>Screen2Presenter::Screen2Presenter(Screen2View&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2PresenterC1ER11Screen2View))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[453]"></a>Screen2Presenter::Screen2Presenter__sub_object(Screen2View&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2PresenterC1ER11Screen2View), UNUSED)

<P><STRONG><a name="[fc]"></a>Screen2Presenter::~Screen2Presenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen2presenter.o(.constdata__ZTV16Screen2Presenter)
</UL>
<P><STRONG><a name="[454]"></a>Screen2Presenter::~Screen2Presenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen2presenter.o(i._ZN16Screen2PresenterD1Ev), UNUSED)

<P><STRONG><a name="[3c5]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[3c4]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[107]"></a>DebugWindowViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debugwindowviewbase.o(i._ZN19DebugWindowViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
</UL>
<P><STRONG><a name="[71]"></a>DebugWindowViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, debugwindowviewbase.o(i._ZN19DebugWindowViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DebugWindowViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[309]"></a>DebugWindowViewBase::DebugWindowViewBase()</STRONG> (Thumb, 436 bytes, Stack size 56 bytes, debugwindowviewbase.o(i._ZN19DebugWindowViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DebugWindowViewBase::DebugWindowViewBase() &rArr; touchgfx::ScrollableContainer::ScrollableContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::ScrollableContainer()
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::add(touchgfx::Drawable&)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::setScrollbarsColor(touchgfx::colortype)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::DebugWindowView()
</UL>

<P><STRONG><a name="[455]"></a>DebugWindowViewBase::DebugWindowViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, debugwindowviewbase.o(i._ZN19DebugWindowViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[106]"></a>DebugWindowViewBase::~DebugWindowViewBase()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, debugwindowviewbase.o(i._ZN19DebugWindowViewBaseD1Ev))
<BR><BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;DebugWindowPresenter&rang;::~View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
</UL>
<P><STRONG><a name="[456]"></a>DebugWindowViewBase::~DebugWindowViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, debugwindowviewbase.o(i._ZN19DebugWindowViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[10c]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[2eb]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::Application::Application() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[457]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[112]"></a>NetworkMenuViewBase::setupScreen()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, networkmenuviewbase.o(i._ZN19NetworkMenuViewBase11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NetworkMenuViewBase::setupScreen() &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Notification::initialize()
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
</UL>
<P><STRONG><a name="[7c]"></a>NetworkMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, networkmenuviewbase.o(i._ZN19NetworkMenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NetworkMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>NetworkMenuViewBase::FunctionListUpdateItem(NetworkList&, short)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, networkmenuviewbase.o(i._ZN19NetworkMenuViewBase22FunctionListUpdateItemER11NetworkLists))
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
</UL>
<P><STRONG><a name="[7d]"></a>NetworkMenuViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface*, short, short)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, networkmenuviewbase.o(i._ZN19NetworkMenuViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NetworkMenuViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface*, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[30d]"></a>NetworkMenuViewBase::NetworkMenuViewBase()</STRONG> (Thumb, 602 bytes, Stack size 88 bytes, networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = NetworkMenuViewBase::NetworkMenuViewBase() &rArr; Notification::Notification() &rArr; NotificationBase::NotificationBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Notification::Notification()
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::ScrollList()
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::setSnapping(bool)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::setPadding(short, short)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setNumberOfItems(short)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setDrawableSize(short, short)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setHorizontal(bool)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setCircular(bool)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setSwipeAcceleration(unsigned short)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setDragAcceleration(unsigned short)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setEasingEquation(short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::NetworkMenuView()
</UL>

<P><STRONG><a name="[458]"></a>NetworkMenuViewBase::NetworkMenuViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[111]"></a>NetworkMenuViewBase::~NetworkMenuViewBase()</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NetworkMenuViewBase::~NetworkMenuViewBase() &rArr; touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::~DrawableListItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::~DrawableListItems()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;NetworkMenuPresenter&rang;::~View()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::~NetworkMenuView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
</UL>
<P><STRONG><a name="[459]"></a>NetworkMenuViewBase::~NetworkMenuViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[115]"></a>DebugWindowPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[11a]"></a>DebugWindowPresenter::GetHumidity()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter11GetHumidityEv))
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetHumidity()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[11c]"></a>DebugWindowPresenter::GetHeartRate()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter12GetHeartRateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DebugWindowPresenter::GetHeartRate()
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetHeartRate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[119]"></a>DebugWindowPresenter::CancelNetDebug()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter14CancelNetDebugEv))
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::CancelNetDebug()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[11b]"></a>DebugWindowPresenter::GetTemperature()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter14GetTemperatureEv))
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetTemperature()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[11d]"></a>DebugWindowPresenter::GetSPO2()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter7GetSPO2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DebugWindowPresenter::GetSPO2()
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetSPO2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[118]"></a>DebugWindowPresenter::NetDebug()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter8NetDebugEv))
<BR><BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::NetDebug()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[114]"></a>DebugWindowPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[117]"></a>DebugWindowPresenter::GetButton()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenter9GetButtonEv))
<BR><BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetButton()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[421]"></a>DebugWindowPresenter::DebugWindowPresenter(DebugWindowView&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenterC1ER15DebugWindowView))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[45a]"></a>DebugWindowPresenter::DebugWindowPresenter__sub_object(DebugWindowView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenterC1ER15DebugWindowView), UNUSED)

<P><STRONG><a name="[116]"></a>DebugWindowPresenter::~DebugWindowPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> debugwindowpresenter.o(.constdata__ZTV20DebugWindowPresenter)
</UL>
<P><STRONG><a name="[45b]"></a>DebugWindowPresenter::~DebugWindowPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, debugwindowpresenter.o(i._ZN20DebugWindowPresenterD1Ev), UNUSED)

<P><STRONG><a name="[11f]"></a>NetworkMenuPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
</UL>
<P><STRONG><a name="[124]"></a>NetworkMenuPresenter::ConnectWIFI()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenter11ConnectWIFIEv))
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::ConnectWIFI()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
</UL>
<P><STRONG><a name="[123]"></a>NetworkMenuPresenter::CancelNetTime()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenter13CancelNetTimeEv))
<BR><BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::CancelNetTime()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
</UL>
<P><STRONG><a name="[125]"></a>NetworkMenuPresenter::CancelConnectWIFI()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenter17CancelConnectWIFIEv))
<BR><BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::CancelConnectWIFI()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
</UL>
<P><STRONG><a name="[122]"></a>NetworkMenuPresenter::NetTime()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenter7NetTimeEv))
<BR><BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::NetTime()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
</UL>
<P><STRONG><a name="[11e]"></a>NetworkMenuPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
</UL>
<P><STRONG><a name="[121]"></a>NetworkMenuPresenter::GetButton()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenter9GetButtonEv))
<BR><BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::GetButton()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
</UL>
<P><STRONG><a name="[422]"></a>NetworkMenuPresenter::NetworkMenuPresenter(NetworkMenuView&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenterC1ER15NetworkMenuView))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[45c]"></a>NetworkMenuPresenter::NetworkMenuPresenter__sub_object(NetworkMenuView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenterC1ER15NetworkMenuView), UNUSED)

<P><STRONG><a name="[120]"></a>NetworkMenuPresenter::~NetworkMenuPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> networkmenupresenter.o(.constdata__ZTV20NetworkMenuPresenter)
</UL>
<P><STRONG><a name="[45d]"></a>NetworkMenuPresenter::~NetworkMenuPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, networkmenupresenter.o(i._ZN20NetworkMenuPresenterD1Ev), UNUSED)

<P><STRONG><a name="[127]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = STM32TouchController::sampleTouch(int&, int&) &rArr; bsp_ns2009_getPos &rArr; ns2009_read &rArr; HAL_I2C_Master_Receive &rArr; I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_ns2009_getPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[126]"></a>STM32TouchController::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController4initEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[68]"></a>STM32TouchController::~STM32TouchController()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[45e]"></a>STM32TouchController::~STM32TouchController__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev), UNUSED)

<P><STRONG><a name="[c5]"></a>TouchGFXGeneratedHAL::beginFrame()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10beginFrameEv))
<BR><BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[2e1]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[2e2]"></a>TouchGFXGeneratedHAL::enableInterrupts()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16enableInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>

<P><STRONG><a name="[2e3]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&) &rArr; touchgfx::PartialFrameBufferManager::tryTransmitBlock() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlock()
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[2e4]"></a>TouchGFXGeneratedHAL::disableInterrupts()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17disableInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>

<P><STRONG><a name="[2e5]"></a>TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>

<P><STRONG><a name="[2e6]"></a>TouchGFXGeneratedHAL::configureInterrupts()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL19configureInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>

<P><STRONG><a name="[2e7]"></a>TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>

<P><STRONG><a name="[c6]"></a>TouchGFXGeneratedHAL::endFrame()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::PartialFrameBufferManager::transmitRemainingBlocks() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::endFrame()
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::transmitRemainingBlocks()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalRenderingDone()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[2e8]"></a>TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj))
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::blockCopy(void*, const void*, unsigned)
</UL>

<P><STRONG><a name="[6b]"></a>ApplicationFontProvider::~ApplicationFontProvider()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[45f]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev), UNUSED)

<P><STRONG><a name="[2d5]"></a>FrontendApplicationBase::gotoListScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase26gotoListScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoListScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::imgClickHandler(const touchgfx::Image&, const touchgfx::ClickEvent&)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleKeyEvent(unsigned char)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>

<P><STRONG><a name="[2d4]"></a>FrontendApplicationBase::gotoImageScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase27gotoImageScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoImageScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleKeyEvent(unsigned char)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>

<P><STRONG><a name="[2ed]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::handleKeyEvent(unsigned char)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::handleKeyEvent(unsigned char)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::handleKeyEvent(unsigned char)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::handleKeyEvent(unsigned char)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[2d6]"></a>FrontendApplicationBase::gotoScreen2ScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoScreen2ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::imgClickHandler(const touchgfx::Image&, const touchgfx::ClickEvent&)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleKeyEvent(unsigned char)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>

<P><STRONG><a name="[75]"></a>FrontendApplicationBase::gotoListScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase30gotoListScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = FrontendApplicationBase::gotoListScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; ListView::ListView() &rArr; ListViewBase::ListViewBase() &rArr; touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>FrontendApplicationBase::gotoImageScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase31gotoImageScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FrontendApplicationBase::gotoImageScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; ImageView::ImageView() &rArr; ImageViewBase::ImageViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[2d9]"></a>FrontendApplicationBase::gotoDebugWindowScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoDebugWindowScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoDebugWindowScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::scrollListClickHandler(short)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::imgClickHandler(const touchgfx::Image&, const touchgfx::ClickEvent&)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>

<P><STRONG><a name="[2d1]"></a>FrontendApplicationBase::gotoNetworkMenuScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoNetworkMenuScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoNetworkMenuScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::imgClickHandler(const touchgfx::Image&, const touchgfx::ClickEvent&)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleKeyEvent(unsigned char)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>

<P><STRONG><a name="[72]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen2View::Screen2View() &rArr; Screen2ViewBase::Screen2ViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>FrontendApplicationBase::gotoDebugWindowScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoDebugWindowScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FrontendApplicationBase::gotoDebugWindowScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; DebugWindowView::DebugWindowView() &rArr; DebugWindowViewBase::DebugWindowViewBase() &rArr; touchgfx::ScrollableContainer::ScrollableContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>FrontendApplicationBase::gotoNetworkMenuScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoNetworkMenuScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = FrontendApplicationBase::gotoNetworkMenuScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; NetworkMenuView::NetworkMenuView() &rArr; NetworkMenuViewBase::NetworkMenuViewBase() &rArr; Notification::Notification() &rArr; NotificationBase::NotificationBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[339]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::Application::Application() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[460]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[129]"></a>FrontendApplicationBase::~FrontendApplicationBase()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[461]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev), UNUSED)

<P><STRONG><a name="[12a]"></a>languageSelectorElement::initialize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, languageselectorelement.o(i._ZN23languageSelectorElement10initializeEv))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
</UL>
<P><STRONG><a name="[353]"></a>languageSelectorElement::setupElement(unsigned short, TEXTS)</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, languageselectorelement.o(i._ZN23languageSelectorElement12setupElementEt5TEXTS))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = languageSelectorElement::setupElement(unsigned short, TEXTS) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::languageSelectorWheelUpdateItem(languageSelectorElement&, short)
</UL>

<P><STRONG><a name="[5d]"></a>languageSelectorElement::languageSelectorElement()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, languageselectorelement.o(i._ZN23languageSelectorElementC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = languageSelectorElement::languageSelectorElement() &rArr; languageSelectorElementBase::languageSelectorElementBase() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(i._ZN12ListViewBaseC1Ev)
</UL>
<P><STRONG><a name="[462]"></a>languageSelectorElement::languageSelectorElement__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, languageselectorelement.o(i._ZN23languageSelectorElementC1Ev), UNUSED)

<P><STRONG><a name="[63]"></a>languageSelectorElement::~languageSelectorElement()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, languageselectorelement.o(i._ZN23languageSelectorElementD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> listview.o(i._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EED1Ev)
</UL>
<P><STRONG><a name="[463]"></a>languageSelectorElement::~languageSelectorElement__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, languageselectorelement.o(i._ZN23languageSelectorElementD1Ev), UNUSED)

<P><STRONG><a name="[12b]"></a>languageSelectorElementBase::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, languageselectorelementbase.o(i._ZN27languageSelectorElementBase10initializeEv))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElement::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
</UL>
<P><STRONG><a name="[354]"></a>languageSelectorElementBase::languageSelectorElementBase()</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, languageselectorelementbase.o(i._ZN27languageSelectorElementBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = languageSelectorElementBase::languageSelectorElementBase() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElement::languageSelectorElement()
</UL>

<P><STRONG><a name="[464]"></a>languageSelectorElementBase::languageSelectorElementBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, languageselectorelementbase.o(i._ZN27languageSelectorElementBaseC1Ev), UNUSED)

<P><STRONG><a name="[12c]"></a>languageSelectorElementCenter::initialize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, languageselectorelementcenter.o(i._ZN29languageSelectorElementCenter10initializeEv))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
</UL>
<P><STRONG><a name="[355]"></a>languageSelectorElementCenter::setupElement(unsigned short, TEXTS)</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, languageselectorelementcenter.o(i._ZN29languageSelectorElementCenter12setupElementEt5TEXTS))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = languageSelectorElementCenter::setupElement(unsigned short, TEXTS) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::languageSelectorWheelUpdateCenterItem(languageSelectorElementCenter&, short)
</UL>

<P><STRONG><a name="[5e]"></a>languageSelectorElementCenter::languageSelectorElementCenter()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, languageselectorelementcenter.o(i._ZN29languageSelectorElementCenterC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = languageSelectorElementCenter::languageSelectorElementCenter() &rArr; languageSelectorElementCenterBase::languageSelectorElementCenterBase() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(i._ZN12ListViewBaseC1Ev)
</UL>
<P><STRONG><a name="[465]"></a>languageSelectorElementCenter::languageSelectorElementCenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, languageselectorelementcenter.o(i._ZN29languageSelectorElementCenterC1Ev), UNUSED)

<P><STRONG><a name="[64]"></a>languageSelectorElementCenter::~languageSelectorElementCenter()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, languageselectorelementcenter.o(i._ZN29languageSelectorElementCenterD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> listview.o(i._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EED1Ev)
</UL>
<P><STRONG><a name="[466]"></a>languageSelectorElementCenter::~languageSelectorElementCenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, languageselectorelementcenter.o(i._ZN29languageSelectorElementCenterD1Ev), UNUSED)

<P><STRONG><a name="[12d]"></a>languageSelectorElementCenterBase::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, languageselectorelementcenterbase.o(i._ZN33languageSelectorElementCenterBase10initializeEv))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenter::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
</UL>
<P><STRONG><a name="[356]"></a>languageSelectorElementCenterBase::languageSelectorElementCenterBase()</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, languageselectorelementcenterbase.o(i._ZN33languageSelectorElementCenterBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = languageSelectorElementCenterBase::languageSelectorElementCenterBase() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenter::languageSelectorElementCenter()
</UL>

<P><STRONG><a name="[467]"></a>languageSelectorElementCenterBase::languageSelectorElementCenterBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, languageselectorelementcenterbase.o(i._ZN33languageSelectorElementCenterBaseC1Ev), UNUSED)

<P><STRONG><a name="[341]"></a>Model::ConnectWIFI()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model11ConnectWIFIEv))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuPresenter::ConnectWIFI()
</UL>

<P><STRONG><a name="[32c]"></a>Model::GetHumidity()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model11GetHumidityEv))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowPresenter::GetHumidity()
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::GetHumidity()
</UL>

<P><STRONG><a name="[32d]"></a>Model::GetHeartRate()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model12GetHeartRateEv))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowPresenter::GetHeartRate()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::GetHeartRate()
</UL>

<P><STRONG><a name="[32e]"></a>Model::GetSPO2Valid()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model12GetSPO2ValidEv))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::GetSPO2Valid()
</UL>

<P><STRONG><a name="[342]"></a>Model::CancelNetTime()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model13CancelNetTimeEv))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuPresenter::CancelNetTime()
</UL>

<P><STRONG><a name="[33f]"></a>Model::CancelNetDebug()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model14CancelNetDebugEv))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowPresenter::CancelNetDebug()
</UL>

<P><STRONG><a name="[32f]"></a>Model::GetHeartSignal()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model14GetHeartSignalEv))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::GetHeartSignal()
</UL>

<P><STRONG><a name="[330]"></a>Model::GetTemperature()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model14GetTemperatureEv))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowPresenter::GetTemperature()
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::GetTemperature()
</UL>

<P><STRONG><a name="[331]"></a>Model::HealthDiagnose()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model14HealthDiagnoseEv))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::HealthDiagnose()
</UL>

<P><STRONG><a name="[343]"></a>Model::CancelConnectWIFI()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model17CancelConnectWIFIEv))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuPresenter::CancelConnectWIFI()
</UL>

<P><STRONG><a name="[332]"></a>Model::GetHeartRateValid()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model17GetHeartRateValidEv))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::GetHeartRateValid()
</UL>

<P><STRONG><a name="[333]"></a>Model::CancelHealthDiagnose()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model20CancelHealthDiagnoseEv))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::CancleHealthDiagnose()
</UL>

<P><STRONG><a name="[338]"></a>Model::tick()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model.o(i._ZN5Model4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[327]"></a>Model::GetHour()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model7GetHourEv))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::GetHour()
</UL>

<P><STRONG><a name="[334]"></a>Model::GetSPO2()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, model.o(i._ZN5Model7GetSPO2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowPresenter::GetSPO2()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::GetSPO2()
</UL>

<P><STRONG><a name="[344]"></a>Model::NetTime()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model7NetTimeEv))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuPresenter::NetTime()
</UL>

<P><STRONG><a name="[340]"></a>Model::NetDebug()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model8NetDebugEv))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowPresenter::NetDebug()
</UL>

<P><STRONG><a name="[328]"></a>Model::GetButton()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model9GetButtonEv))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowPresenter::GetButton()
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuPresenter::GetButton()
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::GetButton()
</UL>

<P><STRONG><a name="[329]"></a>Model::GetMinute()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model9GetMinuteEv))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::GetMinute()
</UL>

<P><STRONG><a name="[32a]"></a>Model::GetSecond()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model9GetSecondEv))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::GetSecond()
</UL>

<P><STRONG><a name="[32b]"></a>Model::IfStarted()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model9IfStartedEv))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::IfStarted()
</UL>

<P><STRONG><a name="[2ec]"></a>Model::Model()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[468]"></a>Model::Model__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev), UNUSED)

<P><STRONG><a name="[12f]"></a>ListView::setupScreen()</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, listview.o(i._ZN8ListView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ListView::setupScreen() &rArr; ListViewBase::setupScreen() &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setAnimationEndedCallback(touchgfx::GenericCallback&lang;void, void, void&rang;&)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::animateToItem(short, short)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTV8ListView)
</UL>
<P><STRONG><a name="[131]"></a>ListView::handleKeyEvent(unsigned char)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, listview.o(i._ZN8ListView14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ListView::handleKeyEvent(unsigned char) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::getSelectedItem() const
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::isAnimating() const
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::animateToItem(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTV8ListView)
</UL>
<P><STRONG><a name="[130]"></a>ListView::tearDownScreen()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listview.o(i._ZN8ListView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTV8ListView)
</UL>
<P><STRONG><a name="[6e]"></a>ListView::scrollWheelSelectedItemHandler()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, listview.o(i._ZN8ListView30scrollWheelSelectedItemHandlerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ListView::scrollWheelSelectedItemHandler() &rArr; touchgfx::ScrollWheelBase::getSelectedItem() const &rArr; touchgfx::ScrollBase::getNormalizedOffset(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::getSelectedItem() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>ListView::languageSelectorWheelUpdateItem(languageSelectorElement&, short)</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, listview.o(i._ZN8ListView31languageSelectorWheelUpdateItemER23languageSelectorElements))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ListView::languageSelectorWheelUpdateItem(languageSelectorElement&, short) &rArr; languageSelectorElement::setupElement(unsigned short, TEXTS) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElement::setupElement(unsigned short, TEXTS)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTV8ListView)
</UL>
<P><STRONG><a name="[133]"></a>ListView::languageSelectorWheelUpdateCenterItem(languageSelectorElementCenter&, short)</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, listview.o(i._ZN8ListView37languageSelectorWheelUpdateCenterItemER29languageSelectorElementCenters))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ListView::languageSelectorWheelUpdateCenterItem(languageSelectorElementCenter&, short) &rArr; languageSelectorElementCenter::setupElement(unsigned short, TEXTS) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenter::setupElement(unsigned short, TEXTS)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTV8ListView)
</UL>
<P><STRONG><a name="[359]"></a>ListView::ListView()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, listview.o(i._ZN8ListViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ListView::ListView() &rArr; ListViewBase::ListViewBase() &rArr; touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[469]"></a>ListView::ListView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, listview.o(i._ZN8ListViewC1Ev), UNUSED)

<P><STRONG><a name="[12e]"></a>ListView::~ListView()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, listview.o(i._ZN8ListViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ListView::~ListView() &rArr; touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::~DrawableListItems()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTV8ListView)
</UL>
<P><STRONG><a name="[46a]"></a>ListView::~ListView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, listview.o(i._ZN8ListViewD1Ev), UNUSED)

<P><STRONG><a name="[134]"></a>STM32DMA::getBlitCaps()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[13b]"></a>STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[13c]"></a>STM32DMA::setupDataFill(const touchgfx::BlitOp&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[136]"></a>STM32DMA::flush()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[35a]"></a>STM32DMA::STM32DMA()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::STM32DMA()
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[46b]"></a>STM32DMA::STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev), UNUSED)

<P><STRONG><a name="[69]"></a>STM32DMA::~STM32DMA()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
</UL>
<P><STRONG><a name="[46c]"></a>STM32DMA::~STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev), UNUSED)

<P><STRONG><a name="[3a9]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[417]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfxTickHandler
</UL>

<P><STRONG><a name="[41b]"></a>touchgfx::OSWrappers::isVSyncAvailable()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers16isVSyncAvailableEv))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>

<P><STRONG><a name="[348]"></a>touchgfx::OSWrappers::signalRenderingDone()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers19signalRenderingDoneEv))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>

<P><STRONG><a name="[3af]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
</UL>

<P><STRONG><a name="[3ac]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[382]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[3a6]"></a>touchgfx::OSWrappers::taskYield()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers9taskYieldEv))
<BR><BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::transmitRemainingBlocks()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlock()
</UL>

<P><STRONG><a name="[14d]"></a>touchgfx::ScrollBase::setCircular(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase11setCircularEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::ScrollBase::setCircular(bool) &rArr; touchgfx::DrawableList::setCircular(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setCircular(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setCircular(bool)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[151]"></a>touchgfx::ScrollBase::animateToItem(short, short)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase13animateToItemEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollBase::animateToItem(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::handleKeyEvent(unsigned char)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::setupScreen()
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::handleKeyEvent(unsigned char)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::setupScreen()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[14b]"></a>touchgfx::ScrollBase::setHorizontal(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase13setHorizontalEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::ScrollBase::setHorizontal(bool) &rArr; touchgfx::DrawableList::setHorizontal(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setHorizontal(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setHorizontal(bool)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::ScrollWheelBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[35c]"></a>touchgfx::ScrollBase::stopAnimation()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase13stopAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ScrollBase::stopAnimation()
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)
</UL>

<P><STRONG><a name="[149]"></a>touchgfx::ScrollBase::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollBase::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[14a]"></a>touchgfx::ScrollBase::handleTickEvent()</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollBase::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[33d]"></a>touchgfx::ScrollBase::setDrawableSize(short, short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase15setDrawableSizeEss))
<BR><BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setDrawableSize(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short)
</UL>

<P><STRONG><a name="[14f]"></a>touchgfx::ScrollBase::setNumberOfItems(short)</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase16setNumberOfItemsEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::ScrollBase::setNumberOfItems(short) &rArr; touchgfx::DrawableList::setNumberOfItems(short) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setNumberOfItems(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setNumberOfItems(short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[156]"></a>touchgfx::ScrollBase::animateToPosition(int, short)</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase17animateToPositionEis))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ScrollBase::animateToPosition(int, short) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::animateToPosition(int, short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[2f7]"></a>touchgfx::ScrollBase::setEasingEquation(short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>

<P><STRONG><a name="[148]"></a>touchgfx::ScrollBase::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollBase::handleGestureEvent(const touchgfx::GestureEvent&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[2f9]"></a>touchgfx::ScrollBase::setDragAcceleration(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase19setDragAccelerationEt))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>

<P><STRONG><a name="[2f8]"></a>touchgfx::ScrollBase::setSwipeAcceleration(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase20setSwipeAccelerationEt))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>

<P><STRONG><a name="[30e]"></a>touchgfx::ScrollBase::setItemSelectedCallback(touchgfx::GenericCallback&lang;short, void, void&rang;&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase23setItemSelectedCallbackERNS_15GenericCallbackIsvvEE))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::NetworkMenuView()
</UL>

<P><STRONG><a name="[357]"></a>touchgfx::ScrollBase::setAnimationEndedCallback(touchgfx::GenericCallback&lang;void, void, void&rang;&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase25setAnimationEndedCallbackERNS_15GenericCallbackIvvvEE))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::setupScreen()
</UL>

<P><STRONG><a name="[146]"></a>touchgfx::ScrollBase::setWidth(short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::ScrollBase::setWidth(short) &rArr; touchgfx::DrawableList::setWidth(short) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setWidth(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setWidth(short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[147]"></a>touchgfx::ScrollBase::setHeight(short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::ScrollBase::setHeight(short) &rArr; touchgfx::DrawableList::setHeight(short) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setHeight(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setHeight(short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[152]"></a>touchgfx::ScrollBase::setOffset(int)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBase9setOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::ScrollBase::setOffset(int) &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setOffset(int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[362]"></a>touchgfx::ScrollBase::ScrollBase__sub_object()</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, scrollbase.o(i._ZN8touchgfx10ScrollBaseC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::ScrollBase::ScrollBase__sub_object() &rArr; touchgfx::DrawableList::setHorizontal(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::DrawableList()
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setHorizontal(bool)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setCircular(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::ScrollList()
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::ScrollWheelBase()
</UL>

<P><STRONG><a name="[33b]"></a>touchgfx::ScrollList::setPadding(short, short)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, scrolllist.o(i._ZN8touchgfx10ScrollList10setPaddingEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::ScrollList::setPadding(short, short) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
</UL>

<P><STRONG><a name="[33c]"></a>touchgfx::ScrollList::setSnapping(bool)</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, scrolllist.o(i._ZN8touchgfx10ScrollList11setSnappingEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ScrollList::setSnapping(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
</UL>

<P><STRONG><a name="[15b]"></a>touchgfx::ScrollList::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scrolllist.o(i._ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::ScrollList::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::stopAnimation()
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
</UL>
<P><STRONG><a name="[157]"></a>touchgfx::ScrollList::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, scrolllist.o(i._ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollList::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
</UL>
<P><STRONG><a name="[158]"></a>touchgfx::ScrollList::getPositionForItem(short)</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, scrolllist.o(i._ZN8touchgfx10ScrollList18getPositionForItemEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::ScrollList::getPositionForItem(short) &rArr; touchgfx::ScrollBase::getNormalizedOffset(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::getNumberOfItems() const
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::getCircular() const
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::getNormalizedOffset(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
</UL>
<P><STRONG><a name="[33a]"></a>touchgfx::ScrollList::ScrollList()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scrolllist.o(i._ZN8touchgfx10ScrollListC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::ScrollList::ScrollList() &rArr; touchgfx::ScrollBase::ScrollBase__sub_object() &rArr; touchgfx::DrawableList::setHorizontal(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::ScrollBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
</UL>

<P><STRONG><a name="[46d]"></a>touchgfx::ScrollList::ScrollList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scrolllist.o(i._ZN8touchgfx10ScrollListC1Ev), UNUSED)

<P><STRONG><a name="[17c]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Transition::invalidate()
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[17d]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[17b]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[17a]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[2d0]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::handleKeyEvent(unsigned char)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::handleKeyEvent(unsigned char)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::handleKeyEvent(unsigned char)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::scrollListClickHandler(short)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::handleKeyEvent(unsigned char)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::imgClickHandler(const touchgfx::Image&, const touchgfx::ClickEvent&)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleKeyEvent(unsigned char)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::animateToPosition(int, short)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::handleTickEvent()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::stopAnimation()
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleTickEvent()
</UL>

<P><STRONG><a name="[10b]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[366]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 2256 bytes, Stack size 144 bytes, application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
</UL>

<P><STRONG><a name="[109]"></a>touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[128]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Application::handleTickEvent()
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[108]"></a>touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10a]"></a>touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[110]"></a>touchgfx::Application::cacheDrawOperations(bool)</STRONG> (Thumb, 1662 bytes, Stack size 200 bytes, application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = touchgfx::Application::cacheDrawOperations(bool) &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[360]"></a>touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, application.o(i._ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::animateToPosition(int, short)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleGestureEvent(const touchgfx::GestureEvent&)
</UL>

<P><STRONG><a name="[397]"></a>touchgfx::Application::clearAllTimerWidgets()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application20clearAllTimerWidgetsEv))
<BR><BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>

<P><STRONG><a name="[35d]"></a>touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE))
<BR><BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::handleTickEvent()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::stopAnimation()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleTickEvent()
</UL>

<P><STRONG><a name="[15c]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10f]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 250 bytes, Stack size 48 bytes, application.o(i._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&) &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10e]"></a>touchgfx::Application::draw()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::draw()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[351]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Application::Application() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[46e]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev), UNUSED)

<P><STRONG><a name="[41a]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fontmanager.o(i._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[162]"></a>touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, canvaswidget.o(i._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[36c]"></a>touchgfx::CanvasWidget::CanvasWidget__sub_object()</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, canvaswidget.o(i._ZN8touchgfx12CanvasWidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::GraphElementLine()
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::GraphElementGridBase()
</UL>

<P><STRONG><a name="[169]"></a>touchgfx::DigitalClock::updateClock()</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock11updateClockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = touchgfx::DigitalClock::updateClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentSecond() const
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour24() const
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour12() const
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentAM() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[16a]"></a>touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DigitalClock::setTypedText(touchgfx::TypedText) &rArr; touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[312]"></a>touchgfx::DigitalClock::displayLeadingZeroForHourIndicator(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[16c]"></a>touchgfx::DigitalClock::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[16b]"></a>touchgfx::DigitalClock::setColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock8setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[166]"></a>touchgfx::DigitalClock::setWidth(short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock8setWidthEs))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[167]"></a>touchgfx::DigitalClock::setHeight(short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock9setHeightEs))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[311]"></a>touchgfx::DigitalClock::DigitalClock()</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClockC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DigitalClock::DigitalClock() &rArr; touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::AbstractClock__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[46f]"></a>touchgfx::DigitalClock::DigitalClock__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClockC1Ev), UNUSED)

<P><STRONG><a name="[171]"></a>touchgfx::DrawableList::setCircular(bool)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList11setCircularEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::DrawableList::setCircular(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setCircular(bool)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setCircular(bool)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::ScrollBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
</UL>
<P><STRONG><a name="[173]"></a>touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
</UL>
<P><STRONG><a name="[16f]"></a>touchgfx::DrawableList::setHorizontal(bool)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList13setHorizontalEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::DrawableList::setHorizontal(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setHorizontal(bool)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setHorizontal(bool)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::ScrollBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
</UL>
<P><STRONG><a name="[35e]"></a>touchgfx::DrawableList::setDrawableSize(short, short)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList15setDrawableSizeEss))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setDrawableSize(short, short)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short)
</UL>

<P><STRONG><a name="[2ee]"></a>touchgfx::DrawableList::refreshDrawables()</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList16refreshDrawablesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::removeAll()
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::setupScreen()
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::setupScreen()
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::setPadding(short, short)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setHeight(short)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setWidth(short)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setNumberOfItems(short)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setHorizontal(bool)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setCircular(bool)
</UL>

<P><STRONG><a name="[35f]"></a>touchgfx::DrawableList::setNumberOfItems(short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList16setNumberOfItemsEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::DrawableList::setNumberOfItems(short) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setNumberOfItems(short)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setNumberOfItems(short)
</UL>

<P><STRONG><a name="[16d]"></a>touchgfx::DrawableList::setWidth(short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::DrawableList::setWidth(short) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setWidth(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
</UL>
<P><STRONG><a name="[16e]"></a>touchgfx::DrawableList::setHeight(short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::DrawableList::setHeight(short) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setHeight(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
</UL>
<P><STRONG><a name="[361]"></a>touchgfx::DrawableList::setOffset(int)</STRONG> (Thumb, 512 bytes, Stack size 40 bytes, drawablelist.o(i._ZN8touchgfx12DrawableList9setOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setOffset(int)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setOffset(int)
</UL>

<P><STRONG><a name="[363]"></a>touchgfx::DrawableList::DrawableList()</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableListC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::ScrollWheelWithSelectionStyle()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::ScrollBase__sub_object()
</UL>

<P><STRONG><a name="[470]"></a>touchgfx::DrawableList::DrawableList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, drawablelist.o(i._ZN8touchgfx12DrawableListC1Ev), UNUSED)

<P><STRONG><a name="[179]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[41e]"></a>touchgfx::NoTransition::NoTransition()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[471]"></a>touchgfx::NoTransition::NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionC1Ev), UNUSED)

<P><STRONG><a name="[178]"></a>touchgfx::NoTransition::~NoTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[472]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev), UNUSED)

<P><STRONG><a name="[373]"></a>touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[3bf]"></a>touchgfx::TextProvider::endOfString()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11endOfStringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::endOfString()
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[375]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[377]"></a>touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider14applyGsubRulesEPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[37e]"></a>touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)</STRONG> (Thumb, 550 bytes, Stack size 24 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>

<P><STRONG><a name="[376]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[378]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, texts.o(i._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[37c]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[37f]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[37b]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[379]"></a>touchgfx::TextProvider::unicodeConverter(unsigned char)</STRONG> (Thumb, 1990 bytes, Stack size 48 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16unicodeConverterEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::TextProvider::unicodeConverter(unsigned char) &rArr; touchgfx::TextProvider::contextualFormForChar(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::contextualFormForChar(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[37d]"></a>touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)</STRONG> (Thumb, 742 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>

<P><STRONG><a name="[374]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, texts.o(i._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[473]"></a>touchgfx::TextProvider::unicodeConverterInit()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx12TextProvider20unicodeConverterInitEv), UNUSED)

<P><STRONG><a name="[381]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[474]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev), UNUSED)

<P><STRONG><a name="[168]"></a>touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[372]"></a>touchgfx::AbstractClock::AbstractClock__sub_object()</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx13AbstractClockC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
</UL>

<P><STRONG><a name="[135]"></a>touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[137]"></a>touchgfx::DMA_Interface::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[13d]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[13e]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[13a]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[3ab]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[138]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[139]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DMA_Interface::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2c5]"></a>touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 64 bytes, Stack size 64 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_30_4bpp()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_20_4bpp()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_14_4bpp()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_20_4bpp()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_14_4bpp()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_10_4bpp()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Amiri_Regular_22_4bpp()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Amiri_Regular_18_2bpp()
</UL>

<P><STRONG><a name="[475]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE), UNUSED)

<P><STRONG><a name="[5c]"></a>touchgfx::GeneratedFont::~GeneratedFont()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev))
<BR>[Address Reference Count : 9]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> table_chinese_msyh_14_4bpp.o(i._Z28getFont_chinese_msyh_14_4bppv)
<LI> table_chinese_msyh_20_4bpp.o(i._Z28getFont_chinese_msyh_20_4bppv)
<LI> table_amiri_regular_22_4bpp.o(i._Z29getFont_Amiri_Regular_22_4bppv)
<LI> table_chinese_msyh_10_4bpp.o(i._Z28getFont_chinese_msyh_10_4bppv)
<LI> table_nanumgothic_20_4bpp.o(i._Z27getFont_NanumGothic_20_4bppv)
<LI> table_nanumgothic_30_4bpp.o(i._Z27getFont_NanumGothic_30_4bppv)
<LI> table_nanumgothic_14_4bpp.o(i._Z27getFont_NanumGothic_14_4bppv)
<LI> table_amiri_regular_18_2bpp.o(i._Z29getFont_Amiri_Regular_18_2bppv)
</UL>
<P><STRONG><a name="[476]"></a>touchgfx::GeneratedFont::~GeneratedFont__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev), UNUSED)

<P><STRONG><a name="[193]"></a>touchgfx::PainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, painterrgb565.o(i._ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::PainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[191]"></a>touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)</STRONG> (Thumb, 328 bytes, Stack size 36 bytes, painterrgb565.o(i._ZN8touchgfx13PainterRGB5656renderEPhiiijPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[385]"></a>touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx13transmitBlockEPKhtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfxDisplayDriverTransmitBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ()
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::transmitRemainingBlocks()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlock()
</UL>

<P><STRONG><a name="[198]"></a>touchgfx::AbstractButton::executeAction()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, button.o(i._ZN8touchgfx14AbstractButton13executeActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractButton::executeAction()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[197]"></a>touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[10d]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[387]"></a>touchgfx::transmitActive()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx14transmitActiveEv))
<BR><BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfxDisplayDriverTransmitActive
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::transmitRemainingBlocks()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlock()
</UL>

<P><STRONG><a name="[325]"></a>touchgfx::ButtonWithLabel::ButtonWithLabel()</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, buttonwithlabel.o(i._ZN8touchgfx15ButtonWithLabelC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ButtonWithLabel::ButtonWithLabel()
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
</UL>

<P><STRONG><a name="[477]"></a>touchgfx::ButtonWithLabel::ButtonWithLabel__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, buttonwithlabel.o(i._ZN8touchgfx15ButtonWithLabelC1Ev), UNUSED)

<P><STRONG><a name="[5f]"></a>touchgfx::EasingEquations::backEaseOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations11backEaseOutEtsst))
<BR>[Address Reference Count : 3]<UL><LI> listviewbase.o(i._ZN12ListViewBaseC1Ev)
<LI> networkmenuviewbase.o(i._ZN19NetworkMenuViewBaseC1Ev)
<LI> scrollbase.o(i._ZN8touchgfx10ScrollBaseC2Ev)
</UL>
<P><STRONG><a name="[39b]"></a>touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations12cubicEaseOutEtsst))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleTickEvent()
</UL>

<P><STRONG><a name="[2d7]"></a>touchgfx::EasingEquations::cubicEaseInOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
</UL>

<P><STRONG><a name="[3d9]"></a>touchgfx::RenderingBuffer::attach(unsigned char*, unsigned char, unsigned, unsigned, int)</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBuffer6attachEPhhjji))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::RenderingBuffer::attach(unsigned char*, unsigned char, unsigned, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3d2]"></a>touchgfx::RenderingBuffer::RenderingBuffer()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBufferC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[478]"></a>touchgfx::RenderingBuffer::RenderingBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBufferC1Ev), UNUSED)

<P><STRONG><a name="[19a]"></a>touchgfx::RenderingBuffer::~RenderingBuffer()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBufferD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> renderingbuffer.o(.constdata__ZTVN8touchgfx15RenderingBufferE)
</UL>
<P><STRONG><a name="[479]"></a>touchgfx::RenderingBuffer::~RenderingBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, renderingbuffer.o(i._ZN8touchgfx15RenderingBufferD1Ev), UNUSED)

<P><STRONG><a name="[19d]"></a>touchgfx::ScrollWheelBase::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollWheelBase::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
</UL>
<P><STRONG><a name="[19b]"></a>touchgfx::ScrollWheelBase::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ScrollWheelBase::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::ScrollBase::getNormalizedOffset(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::getNormalizedOffset(int) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
</UL>
<P><STRONG><a name="[1a0]"></a>touchgfx::ScrollWheelBase::animateToPosition(int, short)</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase17animateToPositionEis))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::ScrollWheelBase::animateToPosition(int, short) &rArr; touchgfx::ScrollBase::animateToPosition(int, short) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::animateToPosition(int, short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
</UL>
<P><STRONG><a name="[19e]"></a>touchgfx::ScrollWheelBase::getPositionForItem(short)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase18getPositionForItemEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollWheelBase::getPositionForItem(short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
</UL>
<P><STRONG><a name="[19c]"></a>touchgfx::ScrollWheelBase::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollWheelBase::handleGestureEvent(const touchgfx::GestureEvent&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
</UL>
<P><STRONG><a name="[1a1]"></a>touchgfx::ScrollWheelBase::setSelectedItemOffset(short)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBase21setSelectedItemOffsetEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollWheelBase::setSelectedItemOffset(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemOffset(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
</UL>
<P><STRONG><a name="[389]"></a>touchgfx::ScrollWheelBase::ScrollWheelBase()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::ScrollWheelBase::ScrollWheelBase() &rArr; touchgfx::ScrollBase::ScrollBase__sub_object() &rArr; touchgfx::DrawableList::setHorizontal(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setHorizontal(bool)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::ScrollBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::ScrollWheelWithSelectionStyle()
</UL>

<P><STRONG><a name="[47a]"></a>touchgfx::ScrollWheelBase::ScrollWheelBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scrollwheelbase.o(i._ZN8touchgfx15ScrollWheelBaseC1Ev), UNUSED)

<P><STRONG><a name="[321]"></a>touchgfx::GraphElementLine::setLineWidth(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, graphelements.o(i._ZN8touchgfx16GraphElementLine12setLineWidthEh))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[1a3]"></a>touchgfx::GraphElementLine::invalidateGraphPointAt(short)</STRONG> (Thumb, 538 bytes, Stack size 72 bytes, graphelements.o(i._ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::GraphElementLine::invalidateGraphPointAt(short) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getUsedCapacity() const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[315]"></a>touchgfx::GraphElementLine::GraphElementLine()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, graphelements.o(i._ZN8touchgfx16GraphElementLineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GraphElementLine::GraphElementLine() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[47b]"></a>touchgfx::GraphElementLine::GraphElementLine__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, graphelements.o(i._ZN8touchgfx16GraphElementLineC1Ev), UNUSED)

<P><STRONG><a name="[390]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[392]"></a>touchgfx::TouchCalibration::clzu(unsigned)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[391]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 170 bytes, Stack size 44 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[393]"></a>touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[320]"></a>touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&) &rArr; touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[1a7]"></a>touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1a6]"></a>touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[3a5]"></a>touchgfx::AbstractDataGraph::setGapBeforeIndex(short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph17setGapBeforeIndexEs))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphWrapAndOverwrite::addValue(int)
</UL>

<P><STRONG><a name="[31b]"></a>touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
</UL>

<P><STRONG><a name="[31c]"></a>touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[394]"></a>touchgfx::AbstractDataGraph::updateAreasPosition()</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setHeight(short)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setWidth(short)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
</UL>

<P><STRONG><a name="[3a4]"></a>touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphWrapAndOverwrite::addValue(int)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphWrapAndOverwrite::beforeAddValue()
</UL>

<P><STRONG><a name="[3a3]"></a>touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphWrapAndOverwrite::addValue(int)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphWrapAndOverwrite::beforeAddValue()
</UL>

<P><STRONG><a name="[1a4]"></a>touchgfx::AbstractDataGraph::setWidth(short)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::setWidth(short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1a5]"></a>touchgfx::AbstractDataGraph::setHeight(short)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::setHeight(short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[2ea]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[47c]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[1a9]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[1aa]"></a>touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::~DrawableListItems()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, networkmenuview.o(i._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::~DrawableListItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::~NetworkMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI11NetworkListLi2EEE)
</UL>
<P><STRONG><a name="[47d]"></a>touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::~DrawableListItems__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, networkmenuview.o(i._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EED1Ev), UNUSED)

<P><STRONG><a name="[1ad]"></a>touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, listview.o(i._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::~ListView()
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::~ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EEE)
</UL>
<P><STRONG><a name="[47e]"></a>touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::~DrawableListItems__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, listview.o(i._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EED1Ev), UNUSED)

<P><STRONG><a name="[1b0]"></a>touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::~DrawableListItems()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, listview.o(i._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::~DrawableListItems() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::~ListView()
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::~ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EEE)
</UL>
<P><STRONG><a name="[47f]"></a>touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::~DrawableListItems__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, listview.o(i._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EED1Ev), UNUSED)

<P><STRONG><a name="[1ba]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1bb]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1b9]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1b8]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[35b]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[480]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[1e8]"></a>touchgfx::ClickButtonTrigger::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, imageview.o(i._ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ClickButtonTrigger::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[67]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::~ManyBlockAllocator()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EED1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxgeneratedhal.o(i.__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90)
<LI> touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
</UL>
<P><STRONG><a name="[481]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::~ManyBlockAllocator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EED1Ev), UNUSED)

<P><STRONG><a name="[1c3]"></a>touchgfx::ScrollableContainer::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ScrollableContainer::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[1cb]"></a>touchgfx::ScrollableContainer::isScrollableXY(bool&, bool&)</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer14isScrollableXYERbS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ScrollableContainer::isScrollableXY(bool&, bool&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[1c6]"></a>touchgfx::ScrollableContainer::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 730 bytes, Stack size 80 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::ScrollableContainer::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[1c7]"></a>touchgfx::ScrollableContainer::handleTickEvent()</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ScrollableContainer::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[1c4]"></a>touchgfx::ScrollableContainer::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 406 bytes, Stack size 48 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::ScrollableContainer::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::ScrollableContainer::invalidateScrollbars() &rArr; touchgfx::ScrollableContainer::getYScrollbar() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::invalidateScrollbars()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[1c5]"></a>touchgfx::ScrollableContainer::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::ScrollableContainer::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[336]"></a>touchgfx::ScrollableContainer::setScrollbarsColor(touchgfx::colortype)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer18setScrollbarsColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
</UL>

<P><STRONG><a name="[39c]"></a>touchgfx::ScrollableContainer::invalidateScrollbars()</STRONG> (Thumb, 500 bytes, Stack size 72 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::ScrollableContainer::invalidateScrollbars() &rArr; touchgfx::ScrollableContainer::getYScrollbar() const
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::getYScrollbar() const
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::getXScrollbar() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::doScroll(short, short)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleClickEvent(const touchgfx::ClickEvent&)
</UL>

<P><STRONG><a name="[1ca]"></a>touchgfx::ScrollableContainer::moveChildrenRelative(short, short)</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ScrollableContainer::moveChildrenRelative(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[1c8]"></a>touchgfx::ScrollableContainer::add(touchgfx::Drawable&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ScrollableContainer::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[1cd]"></a>touchgfx::ScrollableContainer::doScroll(short, short)</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainer8doScrollEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::ScrollableContainer::doScroll(short, short) &rArr; touchgfx::ScrollableContainer::invalidateScrollbars() &rArr; touchgfx::ScrollableContainer::getYScrollbar() const
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::invalidateScrollbars()
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::handleKeyEvent(unsigned char)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[335]"></a>touchgfx::ScrollableContainer::ScrollableContainer()</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ScrollableContainer::ScrollableContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
</UL>

<P><STRONG><a name="[482]"></a>touchgfx::ScrollableContainer::ScrollableContainer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, scrollablecontainer.o(i._ZN8touchgfx19ScrollableContainerC1Ev), UNUSED)

<P><STRONG><a name="[39f]"></a>touchgfx::shouldTransferBlock(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx19shouldTransferBlockEt))
<BR><BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfxDisplayDriverShouldTransferBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ()
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::transmitRemainingBlocks()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlock()
</UL>

<P><STRONG><a name="[31d]"></a>touchgfx::AbstractGraphElement::setScale(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(i._ZN8touchgfx20AbstractGraphElement8setScaleEi))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[31a]"></a>touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[3e1]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBuffer()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[3cf]"></a>touchgfx::CanvasWidgetRenderer::getScanlineWidth()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[3d7]"></a>touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned)</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3f8]"></a>touchgfx::CanvasWidgetRenderer::getScanlineCounts()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv))
<BR><BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::Scanline()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[3f6]"></a>touchgfx::CanvasWidgetRenderer::getScanlineCovers()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv))
<BR><BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::Scanline()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[3e2]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[3f7]"></a>touchgfx::CanvasWidgetRenderer::getScanlineStartIndices()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv))
<BR><BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::Scanline()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[3d5]"></a>touchgfx::CanvasWidgetRenderer::hasBuffer()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[31e]"></a>touchgfx::GraphElementGridBase::setInterval(int)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, graphelements.o(i._ZN8touchgfx20GraphElementGridBase11setIntervalEi))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[31f]"></a>touchgfx::GraphElementGridBase::setLineWidth(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, graphelements.o(i._ZN8touchgfx20GraphElementGridBase12setLineWidthEh))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[1b5]"></a>touchgfx::GraphElementGridBase::invalidateGraphPointAt(short)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphelements.o(i._ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs))
<BR>[Address Reference Count : 3]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[317]"></a>touchgfx::GraphElementGridBase::GraphElementGridBase()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, graphelements.o(i._ZN8touchgfx20GraphElementGridBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GraphElementGridBase::GraphElementGridBase() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[483]"></a>touchgfx::GraphElementGridBase::GraphElementGridBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, graphelements.o(i._ZN8touchgfx20GraphElementGridBaseC1Ev), UNUSED)

<P><STRONG><a name="[192]"></a>touchgfx::AbstractPainterRGB565::renderInit()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56510renderInitEv))
<BR>[Address Reference Count : 2]<UL><LI> abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[1cf]"></a>touchgfx::AbstractPainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56510renderNextERhS1_S1_S1_))
<BR>[Address Reference Count : 1]<UL><LI> abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[194]"></a>touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh))
<BR>[Address Reference Count : 2]<UL><LI> abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[1ce]"></a>touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, abstractpainterrgb565.o(i._ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned, const unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpainterrgb565.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[316]"></a>touchgfx::AbstractPainterRGB565::AbstractPainterRGB565()</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, screen2viewbase.o(i._ZN8touchgfx21AbstractPainterRGB565C1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractPainterRGB565::AbstractPainterRGB565()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[484]"></a>touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, screen2viewbase.o(i._ZN8touchgfx21AbstractPainterRGB565C1Ev), UNUSED)

<P><STRONG><a name="[369]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3d6]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3f5]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[368]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
</UL>

<P><STRONG><a name="[3b4]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[1d0]"></a>touchgfx::GraphWrapAndOverwrite&lang;(short)50&rang;::~GraphWrapAndOverwrite()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2viewbase.o(i._ZN8touchgfx21GraphWrapAndOverwriteILs50EED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::~Screen2ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
</UL>
<P><STRONG><a name="[485]"></a>touchgfx::GraphWrapAndOverwrite&lang;(short)50&rang;::~GraphWrapAndOverwrite__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen2viewbase.o(i._ZN8touchgfx21GraphWrapAndOverwriteILs50EED1Ev), UNUSED)

<P><STRONG><a name="[2dc]"></a>touchgfx::AbstractDataGraphWithY::addDataPoint(int)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY12addDataPointEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraphWithY::addDataPoint(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::handleTickEvent()
</UL>

<P><STRONG><a name="[1e0]"></a>touchgfx::AbstractDataGraphWithY::beforeAddValue()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY14beforeAddValueEv))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d2]"></a>touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d5]"></a>touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d1]"></a>touchgfx::AbstractDataGraphWithY::setScale(int)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithY8setScaleEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::AbstractDataGraphWithY::setScale(int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[3a2]"></a>touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, abstractdatagraph.o(i._ZN8touchgfx22AbstractDataGraphWithYC2EsPi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphWrapAndOverwrite::DataGraphWrapAndOverwrite(short, int*)
</UL>

<P><STRONG><a name="[1e9]"></a>touchgfx::AbstractButtonContainer::executeAction()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, imageview.o(i._ZN8touchgfx23AbstractButtonContainer13executeActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractButtonContainer::executeAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[1e4]"></a>touchgfx::TextAreaWithOneWildcard::getTextHeight()</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, textareawithwildcard.o(i._ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getTextHeight()
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[318]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen2viewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[486]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen2viewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardC1Ev), UNUSED)

<P><STRONG><a name="[1e1]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, textareawithwildcard.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::~Screen2ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[487]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, textareawithwildcard.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev), UNUSED)

<P><STRONG><a name="[1e7]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, imageview.o(i._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::~ImageView()
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View()
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::~ImageViewBase()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[488]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, imageview.o(i._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev), UNUSED)

<P><STRONG><a name="[1b6]"></a>touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(i._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[1dd]"></a>touchgfx::DataGraphWrapAndOverwrite::beforeAddValue()</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, graphwrapandoverwrite.o(i._ZN8touchgfx25DataGraphWrapAndOverwrite14beforeAddValueEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DataGraphWrapAndOverwrite::beforeAddValue() &rArr; touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
</UL>
<P><STRONG><a name="[1de]"></a>touchgfx::DataGraphWrapAndOverwrite::addValue(int)</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, graphwrapandoverwrite.o(i._ZN8touchgfx25DataGraphWrapAndOverwrite8addValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::DataGraphWrapAndOverwrite::addValue(int) &rArr; touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGapBeforeIndex(short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
</UL>
<P><STRONG><a name="[314]"></a>touchgfx::DataGraphWrapAndOverwrite::DataGraphWrapAndOverwrite(short, int*)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, graphwrapandoverwrite.o(i._ZN8touchgfx25DataGraphWrapAndOverwriteC1EsPi))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::DataGraphWrapAndOverwrite::DataGraphWrapAndOverwrite(short, int*) &rArr; touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[489]"></a>touchgfx::DataGraphWrapAndOverwrite::DataGraphWrapAndOverwrite__sub_object(short, int*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, graphwrapandoverwrite.o(i._ZN8touchgfx25DataGraphWrapAndOverwriteC1EsPi), UNUSED)

<P><STRONG><a name="[346]"></a>touchgfx::PartialFrameBufferManager::tryTransmitBlock()</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, partialframebuffermanager.o(i._ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = touchgfx::PartialFrameBufferManager::tryTransmitBlock() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::taskYield()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::shouldTransferBlock(unsigned short)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::transmitActive()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[347]"></a>touchgfx::PartialFrameBufferManager::transmitRemainingBlocks()</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, partialframebuffermanager.o(i._ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::PartialFrameBufferManager::transmitRemainingBlocks() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::taskYield()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::shouldTransferBlock(unsigned short)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::transmitActive()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>

<P><STRONG><a name="[24b]"></a>touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ()</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, partialframebuffermanager.o(i._ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::shouldTransferBlock(unsigned short)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDriver_TransferCompleteCallback
</UL>

<P><STRONG><a name="[1ee]"></a>touchgfx::ScrollWheelWithSelectionStyle::setCircular(bool)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle11setCircularEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setCircular(bool) &rArr; touchgfx::ScrollBase::setCircular(bool) &rArr; touchgfx::DrawableList::setCircular(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setCircular(bool)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setCircular(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1f5]"></a>touchgfx::ScrollWheelWithSelectionStyle::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&, touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEES2_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&, touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1ed]"></a>touchgfx::ScrollWheelWithSelectionStyle::setHorizontal(bool)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle13setHorizontalEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setHorizontal(bool) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setHorizontal(bool)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setHorizontal(bool)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1f4]"></a>touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle15setDrawableSizeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setDrawableSize(short, short)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setDrawableSize(short, short)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1ef]"></a>touchgfx::ScrollWheelWithSelectionStyle::setNumberOfItems(short)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle16setNumberOfItemsEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setNumberOfItems(short) &rArr; touchgfx::ScrollBase::setNumberOfItems(short) &rArr; touchgfx::DrawableList::setNumberOfItems(short) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setNumberOfItems(short)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setNumberOfItems(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1f3]"></a>touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemMargin(short, short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle21setSelectedItemMarginEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemMargin(short, short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1f1]"></a>touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemOffset(short)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle21setSelectedItemOffsetEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemOffset(short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::setSelectedItemOffset(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1f2]"></a>touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemExtraSize(short, short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle24setSelectedItemExtraSizeEss))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[3a7]"></a>touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()</STRONG> (Thumb, 556 bytes, Stack size 48 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle26refreshDrawableListsLayoutEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::getNumberOfDrawables() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemOffset(short)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setSelectedItemMargin(short, short)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setHorizontal(bool)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setDrawables(touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&, touchgfx::DrawableListItemsInterface&, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setHeight(short)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::setWidth(short)
</UL>

<P><STRONG><a name="[1eb]"></a>touchgfx::ScrollWheelWithSelectionStyle::setWidth(short)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setWidth(short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setWidth(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1ec]"></a>touchgfx::ScrollWheelWithSelectionStyle::setHeight(short)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setHeight(short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setHeight(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[1f0]"></a>touchgfx::ScrollWheelWithSelectionStyle::setOffset(int)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyle9setOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::setOffset(int) &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::setOffset(int)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::setOffset(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
</UL>
<P><STRONG><a name="[2f2]"></a>touchgfx::ScrollWheelWithSelectionStyle::ScrollWheelWithSelectionStyle()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyleC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::ScrollWheelWithSelectionStyle::ScrollWheelWithSelectionStyle() &rArr; touchgfx::ScrollWheelBase::ScrollWheelBase() &rArr; touchgfx::ScrollBase::ScrollBase__sub_object() &rArr; touchgfx::DrawableList::setHorizontal(bool) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::DrawableList()
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::ScrollWheelBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
</UL>

<P><STRONG><a name="[48a]"></a>touchgfx::ScrollWheelWithSelectionStyle::ScrollWheelWithSelectionStyle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scrollwheelwithselectionstyle.o(i._ZN8touchgfx29ScrollWheelWithSelectionStyleC1Ev), UNUSED)

<P><STRONG><a name="[425]"></a>touchgfx::FrameBufferAllocatorWaitOnTransfer()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::allocateBlock(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char**)
</UL>

<P><STRONG><a name="[426]"></a>touchgfx::FrameBufferAllocatorSignalBlockDrawn()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::markBlockReadyForTransfer()
</UL>

<P><STRONG><a name="[2ff]"></a>touchgfx::Box::Box()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, debugwindowviewbase.o(i._ZN8touchgfx3BoxC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
</UL>

<P><STRONG><a name="[48b]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, debugwindowviewbase.o(i._ZN8touchgfx3BoxC1Ev), UNUSED)

<P><STRONG><a name="[1fa]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10beginFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1f7]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[b4]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[b9]"></a>touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[b0]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::lockFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[b8]"></a>touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 96 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1f8]"></a>touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[3ad]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>

<P><STRONG><a name="[ae]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c3]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[b1]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[383]"></a>touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[bc]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ab]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c1]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ca]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::HAL::performDisplayOrientationChange()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c4]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, hal.o(i._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::HAL::tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c8]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c9]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[b5]"></a>touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[b7]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</STRONG> (Thumb, 90 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[b6]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 36 bytes, Stack size 80 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[bb]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 82 bytes, Stack size 80 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ba]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 196 bytes, Stack size 88 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1fb]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[af]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1f9]"></a>touchgfx::HAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c2]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskDelayEt))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[410]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[3b7]"></a>touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, texts.o(i._ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[3b9]"></a>touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, lcd.o(i._ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[3ba]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, lcd.o(i._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[3bc]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, lcd.o(i._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
</UL>

<P><STRONG><a name="[3b8]"></a>touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</STRONG> (Thumb, 1064 bytes, Stack size 488 bytes, lcd.o(i._ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
</UL>

<P><STRONG><a name="[3be]"></a>touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)</STRONG> (Thumb, 1548 bytes, Stack size 216 bytes, lcd.o(i._ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[3c1]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 656 bytes, Stack size 160 bytes, lcd.o(i._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[3c0]"></a>touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*)</STRONG> (Thumb, 214 bytes, Stack size 80 bytes, lcd.o(i._ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[3bb]"></a>touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)</STRONG> (Thumb, 568 bytes, Stack size 64 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[3f3]"></a>touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[3f4]"></a>touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[3b1]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[3b3]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[3ae]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[61]"></a>touchgfx::Rect::Rect()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4RectC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(i.__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90)
<LI> application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb)
<LI> application.o(i._ZN8touchgfx11ApplicationC1Ev)
</UL>
<P><STRONG><a name="[48c]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4RectC1Ev), UNUSED)

<P><STRONG><a name="[2fb]"></a>touchgfx::View&lang;ListPresenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listviewbase.o(i._ZN8touchgfx4ViewI13ListPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::~ListViewBase()
</UL>

<P><STRONG><a name="[48d]"></a>touchgfx::View&lang;ListPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, listviewbase.o(i._ZN8touchgfx4ViewI13ListPresenterED1Ev), UNUSED)

<P><STRONG><a name="[302]"></a>touchgfx::View&lang;ImagePresenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, imageviewbase.o(i._ZN8touchgfx4ViewI14ImagePresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::~ImageViewBase()
</UL>

<P><STRONG><a name="[48e]"></a>touchgfx::View&lang;ImagePresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, imageviewbase.o(i._ZN8touchgfx4ViewI14ImagePresenterED1Ev), UNUSED)

<P><STRONG><a name="[313]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>

<P><STRONG><a name="[48f]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev), UNUSED)

<P><STRONG><a name="[324]"></a>touchgfx::View&lang;Screen2Presenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen2viewbase.o(i._ZN8touchgfx4ViewI16Screen2PresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::~Screen2ViewBase()
</UL>

<P><STRONG><a name="[490]"></a>touchgfx::View&lang;Screen2Presenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen2viewbase.o(i._ZN8touchgfx4ViewI16Screen2PresenterED1Ev), UNUSED)

<P><STRONG><a name="[337]"></a>touchgfx::View&lang;DebugWindowPresenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, debugwindowviewbase.o(i._ZN8touchgfx4ViewI20DebugWindowPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::~DebugWindowViewBase()
</UL>

<P><STRONG><a name="[491]"></a>touchgfx::View&lang;DebugWindowPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, debugwindowviewbase.o(i._ZN8touchgfx4ViewI20DebugWindowPresenterED1Ev), UNUSED)

<P><STRONG><a name="[33e]"></a>touchgfx::View&lang;NetworkMenuPresenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, networkmenuviewbase.o(i._ZN8touchgfx4ViewI20NetworkMenuPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::~NetworkMenuViewBase()
</UL>

<P><STRONG><a name="[492]"></a>touchgfx::View&lang;NetworkMenuPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, networkmenuviewbase.o(i._ZN8touchgfx4ViewI20NetworkMenuPresenterED1Ev), UNUSED)

<P><STRONG><a name="[3e6]"></a>touchgfx::clzu(unsigned)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, utils.o(i._ZN8touchgfx4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>

<P><STRONG><a name="[2f5]"></a>touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, debugwindowviewbase.o(i._ZN8touchgfx5Color15getColorFromRGBEhhh))
<BR><BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[177]"></a>touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenter::setupElement(unsigned short, TEXTS)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElement::setupElement(unsigned short, TEXTS)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::updateSelectedImage(unsigned char)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkList::setupElement(unsigned short, TEXTS)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setSelectedMenuItem()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[310]"></a>touchgfx::Image::Image(const touchgfx::Bitmap&)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[493]"></a>touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[352]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, texts.o(i._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::scrollWheelSelectedItemHandler()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[3c7]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 198 bytes, Stack size 12 bytes, bitmap.o(i._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[3c6]"></a>touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::clearCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[199]"></a>touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[301]"></a>touchgfx::Button::Button()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, imageviewbase.o(i._ZN8touchgfx6ButtonC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Button::Button() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[494]"></a>touchgfx::Button::Button__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, imageviewbase.o(i._ZN8touchgfx6ButtonC1Ev), UNUSED)

<P><STRONG><a name="[3c8]"></a>touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, canvas.o(i._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>

<P><STRONG><a name="[3cb]"></a>touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, canvas.o(i._ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>

<P><STRONG><a name="[3cc]"></a>touchgfx::Canvas::render(unsigned char)</STRONG> (Thumb, 1082 bytes, Stack size 136 bytes, canvas.o(i._ZN8touchgfx6Canvas6renderEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Outline::getCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineWidth()
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[3d1]"></a>touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)</STRONG> (Thumb, 692 bytes, Stack size 56 bytes, canvas.o(i._ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&) &rArr; touchgfx::Outline::Outline()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::hasBuffer()
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::Scanline()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::RenderingBuffer()
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::attach(unsigned char*, unsigned char, unsigned, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[495]"></a>touchgfx::Canvas::Canvas__sub_object(const touchgfx::CanvasWidget*, const touchgfx::Rect&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, canvas.o(i._ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE), UNUSED)

<P><STRONG><a name="[200]"></a>touchgfx::Canvas::~Canvas()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, canvas.o(i._ZN8touchgfx6CanvasD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Canvas::~Canvas()
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::~RenderingBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[496]"></a>touchgfx::Canvas::~Canvas__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, canvas.o(i._ZN8touchgfx6CanvasD1Ev), UNUSED)

<P><STRONG><a name="[202]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[399]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>

<P><STRONG><a name="[a9]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 8]<UL><LI> screen2view.o(.constdata__ZTV11Screen2View)
<LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
<LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
<LI> listviewbase.o(.constdata__ZTV12ListViewBase)
<LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
<LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[cd]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 7]<UL><LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
<LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
<LI> listviewbase.o(.constdata__ZTV12ListViewBase)
<LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
<LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[9c]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 13]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
<LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
<LI> listview.o(.constdata__ZTV8ListView)
<LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen2view.o(.constdata__ZTV11Screen2View)
<LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
<LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
<LI> listviewbase.o(.constdata__ZTV12ListViewBase)
<LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
<LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[9f]"></a>touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 248 bytes, Stack size 88 bytes, screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 13]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
<LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
<LI> listview.o(.constdata__ZTV8ListView)
<LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen2view.o(.constdata__ZTV11Screen2View)
<LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
<LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
<LI> listviewbase.o(.constdata__ZTV12ListViewBase)
<LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
<LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[ce]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 8]<UL><LI> listview.o(.constdata__ZTV8ListView)
<LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
<LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
<LI> listviewbase.o(.constdata__ZTV12ListViewBase)
<LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
<LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[9e]"></a>touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 13]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
<LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
<LI> listview.o(.constdata__ZTV8ListView)
<LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen2view.o(.constdata__ZTV11Screen2View)
<LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
<LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
<LI> listviewbase.o(.constdata__ZTV12ListViewBase)
<LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
<LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[a0]"></a>touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 13]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
<LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
<LI> listview.o(.constdata__ZTV8ListView)
<LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen2view.o(.constdata__ZTV11Screen2View)
<LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
<LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
<LI> listviewbase.o(.constdata__ZTV12ListViewBase)
<LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
<LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[2fa]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, debugwindowviewbase.o(i._ZN8touchgfx6Screen3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[9a]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 13]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
<LI> debugwindowview.o(.constdata__ZTV15DebugWindowView)
<LI> listview.o(.constdata__ZTV8ListView)
<LI> networkmenuview.o(.constdata__ZTV15NetworkMenuView)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen2view.o(.constdata__ZTV11Screen2View)
<LI> debugwindowviewbase.o(.constdata__ZTV19DebugWindowViewBase)
<LI> imageviewbase.o(.constdata__ZTV13ImageViewBase)
<LI> listviewbase.o(.constdata__ZTV12ListViewBase)
<LI> networkmenuviewbase.o(.constdata__ZTV19NetworkMenuViewBase)
<LI> screen2viewbase.o(.constdata__ZTV15Screen2ViewBase)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[36b]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx6Screen4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Screen::draw()
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[3da]"></a>touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</STRONG> (Thumb, 788 bytes, Stack size 88 bytes, screen.o(i._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2f0]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Screen::Screen()
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[497]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev), UNUSED)

<P><STRONG><a name="[201]"></a>touchgfx::Screen::~Screen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[498]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev), UNUSED)

<P><STRONG><a name="[160]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR>[Address Reference Count : 15]<UL><LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[2f1]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, imageviewbase.o(i._ZN8touchgfx6WidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>

<P><STRONG><a name="[3f9]"></a>touchgfx::memset(void*, unsigned char, unsigned)</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, utils.o(i._ZN8touchgfx6memsetEPvhj))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)
</UL>

<P><STRONG><a name="[3a1]"></a>touchgfx::muldiv(int, int, int)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, utils.o(i._ZN8touchgfx6muldivEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setScale(int)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>

<P><STRONG><a name="[3dc]"></a>touchgfx::muldiv(int, int, int, int&)</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, utils.o(i._ZN8touchgfx6muldivEiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const
</UL>

<P><STRONG><a name="[3dd]"></a>touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, graphelements.o(i._ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr;  touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[3de]"></a>touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)</STRONG> (Thumb, 488 bytes, Stack size 440 bytes, outline.o(i._ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
</UL>

<P><STRONG><a name="[3df]"></a>touchgfx::Outline::renderLine(int, int, int, int)</STRONG> (Thumb, 1458 bytes, Stack size 168 bytes, outline.o(i._ZN8touchgfx7Outline10renderLineEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>

<P><STRONG><a name="[3e0]"></a>touchgfx::Outline::renderScanline(int, int, int, int, int)</STRONG> (Thumb, 576 bytes, Stack size 64 bytes, outline.o(i._ZN8touchgfx7Outline14renderScanlineEiiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[3d8]"></a>touchgfx::Outline::reset()</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7Outline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Outline::reset()
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3ca]"></a>touchgfx::Outline::lineTo(int, int)</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[3c9]"></a>touchgfx::Outline::moveTo(int, int)</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, outline.o(i._ZN8touchgfx7Outline6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[3cd]"></a>touchgfx::Outline::getCells()</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline8getCellsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = touchgfx::Outline::getCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[3d3]"></a>touchgfx::Outline::Outline()</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7OutlineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Outline::Outline()
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[499]"></a>touchgfx::Outline::Outline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7OutlineC1Ev), UNUSED)

<P><STRONG><a name="[203]"></a>touchgfx::Outline::~Outline()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7OutlineD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> outline.o(.constdata__ZTVN8touchgfx7OutlineE)
</UL>
<P><STRONG><a name="[49a]"></a>touchgfx::Outline::~Outline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7OutlineD1Ev), UNUSED)

<P><STRONG><a name="[3e5]"></a>touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)</STRONG> (Thumb, 390 bytes, Stack size 36 bytes, unicode.o(i._ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[3e4]"></a>touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)</STRONG> (Thumb, 702 bytes, Stack size 36 bytes, unicode.o(i._ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[306]"></a>touchgfx::Unicode::fromUTF8(const unsigned char*, unsigned short*, unsigned short)</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, unicode.o(i._ZN8touchgfx7Unicode8fromUTF8EPKhPtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Unicode::fromUTF8(const unsigned char*, unsigned short*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[2dd]"></a>touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, unicode.o(i._ZN8touchgfx7Unicode8snprintfEPttPKcz))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::ShowData()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[3e3]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)</STRONG> (Thumb, 1264 bytes, Stack size 376 bytes, unicode.o(i._ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>

<P><STRONG><a name="[3db]"></a>touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, utils.o(i._ZN8touchgfx7muldivuEjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>

<P><STRONG><a name="[34a]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSERKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoDebugWindowScreenNoTransition()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoNetworkMenuScreenNoTransition()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen2ScreenNoTransition()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoImageScreenNoTransition()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoListScreenNoTransition()
</UL>

<P><STRONG><a name="[2f4]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, debugwindowviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[91]"></a>touchgfx::Drawable::moveRelative(short, short)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::moveRelative(short, short)
</UL>
<BR>[Address Reference Count : 38]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[161]"></a>touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 16]<UL><LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[8f]"></a>touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 29]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[90]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 32]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[8d]"></a>touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 26]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[8e]"></a>touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 33]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[89]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 38]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[8a]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 38]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[2f6]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, debugwindowviewbase.o(i._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
</UL>

<P><STRONG><a name="[92]"></a>touchgfx::Drawable::moveTo(short, short)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable6moveToEss))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()
</UL>
<BR>[Address Reference Count : 38]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[8b]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs))
<BR>[Address Reference Count : 28]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[8c]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 28]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[30a]"></a>touchgfx::Drawable::Drawable__sub_object()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, imageviewbase.o(i._ZN8touchgfx8DrawableC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>

<P><STRONG><a name="[3b5]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, gestures.o(i._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[3b6]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, gestures.o(i._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[3b0]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[3b2]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[225]"></a>touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 466 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3e7]"></a>touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 508 bytes, Stack size 104 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3e8]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 460 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3e9]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 416 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3ea]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[222]"></a>touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 928 bytes, Stack size 88 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3f1]"></a>touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 498 bytes, Stack size 112 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3f0]"></a>touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&)</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKjRKNS_4RectES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3f2]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 568 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[223]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 500 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[224]"></a>touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[228]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 1100 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[40f]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[49b]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev), UNUSED)

<P><STRONG><a name="[6a]"></a>touchgfx::LCD16bpp::~LCD16bpp()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[49c]"></a>touchgfx::LCD16bpp::~LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev), UNUSED)

<P><STRONG><a name="[3ce]"></a>touchgfx::Scanline::reset()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, scanline.o(i._ZN8touchgfx8Scanline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Scanline::reset()
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineStartIndices()
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineCovers()
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineCounts()
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[3d0]"></a>touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, scanline.o(i._ZN8touchgfx8Scanline7addSpanEiijj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Scanline::addSpan(int, int, unsigned, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::memset(void*, unsigned char, unsigned)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineWidth()
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[3d4]"></a>touchgfx::Scanline::Scanline()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, scanline.o(i._ZN8touchgfx8ScanlineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Scanline::Scanline()
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineStartIndices()
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineCovers()
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineCounts()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[49d]"></a>touchgfx::Scanline::Scanline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scanline.o(i._ZN8touchgfx8ScanlineC1Ev), UNUSED)

<P><STRONG><a name="[2ce]"></a>touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenter::setupElement(unsigned short, TEXTS)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElement::setupElement(unsigned short, TEXTS)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowViewBase::DebugWindowViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkList::setupElement(unsigned short, TEXTS)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)
</UL>

<P><STRONG><a name="[22b]"></a>touchgfx::TextArea::getTextHeight()</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, textarea.o(i._ZN8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextArea::getTextHeight()
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[2de]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea19resizeToCurrentTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::ShowData()
</UL>

<P><STRONG><a name="[319]"></a>touchgfx::TextArea::TextArea()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, screen2viewbase.o(i._ZN8touchgfx8TextAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
</UL>

<P><STRONG><a name="[49e]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen2viewbase.o(i._ZN8touchgfx8TextAreaC1Ev), UNUSED)

<P><STRONG><a name="[229]"></a>touchgfx::TextArea::~TextArea()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, textarea.o(i._ZN8touchgfx8TextAreaD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::~ListView()
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View()
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::~NetworkMenuViewBase()
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::~ListViewBase()
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::~Screen2ViewBase()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[49f]"></a>touchgfx::TextArea::~TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, textarea.o(i._ZN8touchgfx8TextAreaD1Ev), UNUSED)

<P><STRONG><a name="[384]"></a>touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 60 bytes, Stack size 28 bytes, constfont.o(i._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEtthhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[86]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 21]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[93]"></a>touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 270 bytes, Stack size 88 bytes, container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 22]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[97]"></a>touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</STRONG> (Thumb, 650 bytes, Stack size 200 bytes, container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 22]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[94]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenterBase::languageSelectorElementCenterBase()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementBase::languageSelectorElementBase()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkListBase::NetworkListBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::add(touchgfx::Drawable&)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::ScrollWheelWithSelectionStyle()
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::ScrollBase__sub_object()
</UL>
<BR>[Address Reference Count : 21]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[95]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR>[Address Reference Count : 22]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[96]"></a>touchgfx::Container::removeAll()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, container.o(i._ZN8touchgfx9Container9removeAllEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::refreshDrawables()
</UL>
<BR>[Address Reference Count : 22]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[30f]"></a>touchgfx::Container::Container()</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx9ContainerC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
</UL>

<P><STRONG><a name="[4a0]"></a>touchgfx::Container::Container__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx9ContainerC1Ev), UNUSED)

<P><STRONG><a name="[322]"></a>touchgfx::TypedText::TypedText(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screen2viewbase.o(i._ZN8touchgfx9TypedTextC1Et))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>

<P><STRONG><a name="[4a1]"></a>touchgfx::TypedText::TypedText__sub_object(unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen2viewbase.o(i._ZN8touchgfx9TypedTextC1Et), UNUSED)

<P><STRONG><a name="[140]"></a>ImageView::setupScreen()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, imageview.o(i._ZN9ImageView11setupScreenEv))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
</UL>
<P><STRONG><a name="[143]"></a>ImageView::handleKeyEvent(unsigned char)</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, imageview.o(i._ZN9ImageView14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ImageView::handleKeyEvent(unsigned char) &rArr; ImageView::updateSelectedImage(unsigned char) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::updateSelectedImage(unsigned char)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
</UL>
<P><STRONG><a name="[141]"></a>ImageView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, imageview.o(i._ZN9ImageView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
</UL>
<P><STRONG><a name="[142]"></a>ImageView::handleTickEvent()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, imageview.o(i._ZN9ImageView15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
</UL>
<P><STRONG><a name="[145]"></a>ImageView::leftButtonClicked()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, imageview.o(i._ZN9ImageView17leftButtonClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ImageView::leftButtonClicked() &rArr; ImageView::updateSelectedImage(unsigned char) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::updateSelectedImage(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
</UL>
<P><STRONG><a name="[144]"></a>ImageView::rightButtonClicked()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, imageview.o(i._ZN9ImageView18rightButtonClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ImageView::rightButtonClicked() &rArr; ImageView::updateSelectedImage(unsigned char) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::updateSelectedImage(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
</UL>
<P><STRONG><a name="[3fa]"></a>ImageView::updateSelectedImage(unsigned char)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, imageview.o(i._ZN9ImageView19updateSelectedImageEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ImageView::updateSelectedImage(unsigned char) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::rightButtonClicked()
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::leftButtonClicked()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[3fb]"></a>ImageView::ImageView()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, imageview.o(i._ZN9ImageViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ImageView::ImageView() &rArr; ImageViewBase::ImageViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4a2]"></a>ImageView::ImageView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, imageview.o(i._ZN9ImageViewC1Ev), UNUSED)

<P><STRONG><a name="[13f]"></a>ImageView::~ImageView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, imageview.o(i._ZN9ImageViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ImageView::~ImageView()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTV9ImageView)
</UL>
<P><STRONG><a name="[4a3]"></a>ImageView::~ImageView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, imageview.o(i._ZN9ImageViewD1Ev), UNUSED)

<P><STRONG><a name="[b2]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[4a4]"></a>TouchGFXGeneratedHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv), UNUSED)

<P><STRONG><a name="[14e]"></a>touchgfx::ScrollBase::getCircular() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZNK8touchgfx10ScrollBase11getCircularEv))
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::getCircular() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[30b]"></a>touchgfx::ScrollBase::isAnimating() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scrollbase.o(i._ZNK8touchgfx10ScrollBase11isAnimatingEv))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::handleKeyEvent(unsigned char)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[14c]"></a>touchgfx::ScrollBase::getHorizontal() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZNK8touchgfx10ScrollBase13getHorizontalEv))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::getHorizontal() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[150]"></a>touchgfx::ScrollBase::getNumberOfItems() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbase.o(i._ZNK8touchgfx10ScrollBase16getNumberOfItemsEv))
<BR><BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::getNumberOfItems() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[364]"></a>touchgfx::ScrollBase::getNormalizedOffset(int) const</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, scrollbase.o(i._ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollBase::getNormalizedOffset(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::getSelectedItem() const
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelBase::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::getPositionForItem(short)
</UL>

<P><STRONG><a name="[155]"></a>touchgfx::ScrollBase::getNearestAlignedOffset(int) const</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, scrollbase.o(i._ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollBase::getNearestAlignedOffset(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::getNearestAlignedOffset(int) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[153]"></a>touchgfx::ScrollBase::getOffset() const</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, scrollbase.o(i._ZNK8touchgfx10ScrollBase9getOffsetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ScrollBase::getOffset() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DrawableList::getOffset() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[159]"></a>touchgfx::ScrollList::keepOffsetInsideLimits(int, short) const</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, scrolllist.o(i._ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEis))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollList::keepOffsetInsideLimits(int, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
</UL>
<P><STRONG><a name="[15a]"></a>touchgfx::ScrollList::getNearestAlignedOffset(int) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scrolllist.o(i._ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollList::getNearestAlignedOffset(int) const &rArr; touchgfx::ScrollBase::getNearestAlignedOffset(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::getNearestAlignedOffset(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
</UL>
<P><STRONG><a name="[163]"></a>touchgfx::CanvasWidget::getPainter() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10getPainterEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CanvasWidget::getPainter() const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[15f]"></a>touchgfx::CanvasWidget::invalidate() const</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::CanvasWidget::invalidate() const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[15e]"></a>touchgfx::CanvasWidget::getSolidRect() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv))
<BR>[Address Reference Count : 5]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[165]"></a>touchgfx::CanvasWidget::getMinimalRect() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv))
<BR>[Address Reference Count : 5]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[15d]"></a>touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 278 bytes, Stack size 112 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 3]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[164]"></a>touchgfx::CanvasWidget::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv))
<BR>[Address Reference Count : 5]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[172]"></a>touchgfx::DrawableList::getCircular() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drawablelist.o(i._ZNK8touchgfx12DrawableList11getCircularEv))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::getPositionForItem(short)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::getCircular() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
</UL>
<P><STRONG><a name="[170]"></a>touchgfx::DrawableList::getHorizontal() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drawablelist.o(i._ZNK8touchgfx12DrawableList13getHorizontalEv))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::getHorizontal() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
</UL>
<P><STRONG><a name="[365]"></a>touchgfx::DrawableList::getNumberOfItems() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drawablelist.o(i._ZNK8touchgfx12DrawableList16getNumberOfItemsEv))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollList::getPositionForItem(short)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::getNumberOfItems() const
</UL>

<P><STRONG><a name="[3a8]"></a>touchgfx::DrawableList::getNumberOfDrawables() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drawablelist.o(i._ZNK8touchgfx12DrawableList20getNumberOfDrawablesEv))
<BR><BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout()
</UL>

<P><STRONG><a name="[3fc]"></a>touchgfx::DrawableList::getOffset() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, drawablelist.o(i._ZNK8touchgfx12DrawableList9getOffsetEv))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::getOffset() const
</UL>

<P><STRONG><a name="[380]"></a>touchgfx::TextProvider::contextualFormForChar(unsigned short) const</STRONG> (Thumb, 134 bytes, Stack size 4 bytes, textprovider.o(i._ZNK8touchgfx12TextProvider21contextualFormForCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TextProvider::contextualFormForChar(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
</UL>

<P><STRONG><a name="[36d]"></a>touchgfx::AbstractClock::getCurrentAM() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock12getCurrentAMEv))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[36f]"></a>touchgfx::AbstractClock::getCurrentHour12() const</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentHour12Ev))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[370]"></a>touchgfx::AbstractClock::getCurrentHour24() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentHour24Ev))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[36e]"></a>touchgfx::AbstractClock::getCurrentMinute() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentMinuteEv))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[371]"></a>touchgfx::AbstractClock::getCurrentSecond() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentSecondEv))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[17e]"></a>touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 636 bytes, Stack size 128 bytes, boxwithborder.o(i._ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const &rArr; touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::draw(const touchgfx::Rect&) const
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[18c]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[18e]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[190]"></a>touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[18f]"></a>touchgfx::GeneratedFont::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[195]"></a>touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 576 bytes, Stack size 96 bytes, buttonwithlabel.o(i._ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[358]"></a>touchgfx::ScrollWheelBase::getSelectedItem() const</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, scrollwheelbase.o(i._ZNK8touchgfx15ScrollWheelBase15getSelectedItemEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ScrollWheelBase::getSelectedItem() const &rArr; touchgfx::ScrollBase::getNormalizedOffset(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollBase::getNormalizedOffset(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::scrollWheelSelectedItemHandler()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[19f]"></a>touchgfx::ScrollWheelBase::keepOffsetInsideLimits(int, short) const</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, scrollwheelbase.o(i._ZNK8touchgfx15ScrollWheelBase22keepOffsetInsideLimitsEis))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ScrollWheelBase::keepOffsetInsideLimits(int, short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
</UL>
<P><STRONG><a name="[3fd]"></a>touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const</STRONG> (Thumb, 334 bytes, Stack size 104 bytes, graphelements.o(i._ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const &rArr; touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::round() const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[1a2]"></a>touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 292 bytes, Stack size 272 bytes, graphelements.o(i._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const &rArr; touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Outline::getCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getAlpha() const
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGapBeforeIndex() const
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getUsedCapacity() const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[402]"></a>touchgfx::AbstractDataGraph::indexToScreenX(short) const</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const
</UL>

<P><STRONG><a name="[38b]"></a>touchgfx::AbstractDataGraph::getUsedCapacity() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph15getUsedCapacityEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[3ff]"></a>touchgfx::AbstractDataGraph::getGapBeforeIndex() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph17getGapBeforeIndexEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[404]"></a>touchgfx::AbstractDataGraph::getGraphAreaWidth() const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[38e]"></a>touchgfx::AbstractDataGraph::getGraphAreaHeight() const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[401]"></a>touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[38c]"></a>touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[403]"></a>touchgfx::AbstractDataGraph::getGraphAreaPaddingLeft() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[1a8]"></a>touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const &rArr; touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[38d]"></a>touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph33getGraphAreaWidthIncludingPaddingEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[406]"></a>touchgfx::AbstractDataGraph::getGraphAreaHeightIncludingPadding() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph34getGraphAreaHeightIncludingPaddingEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[400]"></a>touchgfx::AbstractDataGraph::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph8getAlphaEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[1b3]"></a>touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 970 bytes, Stack size 136 bytes, graphelements.o(i._ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const &rArr; touchgfx::GraphElementGridX::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getAlpha() const
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingLeft() const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidth() const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::round() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
</UL>
<P><STRONG><a name="[405]"></a>touchgfx::GraphElementGridX::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, graphelements.o(i._ZNK8touchgfx17GraphElementGridX8drawLineERKNS_4RectEssssNS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::GraphElementGridX::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[1b7]"></a>touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 906 bytes, Stack size 136 bytes, graphelements.o(i._ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const &rArr; touchgfx::GraphElementGridY::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getAlpha() const
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeightIncludingPadding() const
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingLeft() const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidth() const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::round() const
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[407]"></a>touchgfx::GraphElementGridY::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, graphelements.o(i._ZNK8touchgfx17GraphElementGridY8drawLineERKNS_4RectEssssNS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::GraphElementGridY::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[39d]"></a>touchgfx::ScrollableContainer::getXScrollbar() const</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, scrollablecontainer.o(i._ZNK8touchgfx19ScrollableContainer13getXScrollbarEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::ScrollableContainer::getXScrollbar() const
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::invalidateScrollbars()
</UL>

<P><STRONG><a name="[39e]"></a>touchgfx::ScrollableContainer::getYScrollbar() const</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, scrollablecontainer.o(i._ZNK8touchgfx19ScrollableContainer13getYScrollbarEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::ScrollableContainer::getYScrollbar() const
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::invalidateScrollbars()
</UL>

<P><STRONG><a name="[1c9]"></a>touchgfx::ScrollableContainer::getContainedArea() const</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, scrollablecontainer.o(i._ZNK8touchgfx19ScrollableContainer16getContainedAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::ScrollableContainer::getContainedArea() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[1cc]"></a>touchgfx::ScrollableContainer::getChildrenContainedArea() const</STRONG> (Thumb, 220 bytes, Stack size 44 bytes, scrollablecontainer.o(i._ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::ScrollableContainer::getChildrenContainedArea() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
</UL>
<P><STRONG><a name="[38a]"></a>touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, graphelements.o(i._ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[408]"></a>touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 112 bytes, Stack size 4 bytes, graphelements.o(i._ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>

<P><STRONG><a name="[1da]"></a>touchgfx::AbstractDataGraphWithY::indexToScreenXQ5(short) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es))
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1db]"></a>touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d8]"></a>touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d9]"></a>touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d4]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeXMax() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv))
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d3]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeXMin() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv))
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d7]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv))
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d6]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeYMinScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv))
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1dc]"></a>touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1df]"></a>touchgfx::AbstractDataGraphWithY::realIndex(short) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx22AbstractDataGraphWithY9realIndexEs))
<BR>[Address Reference Count : 3]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1e5]"></a>touchgfx::TextAreaWithOneWildcard::getTextWidth() const</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, textareawithwildcard.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getTextWidth() const
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[1e2]"></a>touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 212 bytes, Stack size 80 bytes, textareawithwildcard.o(i._ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[1b4]"></a>touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(i._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE))
<BR>[Address Reference Count : 3]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[17f]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, box.o(i._ZNK8touchgfx3Box12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Box::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[1f6]"></a>touchgfx::Box::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[3aa]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[1fc]"></a>touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[1fd]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 2]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[188]"></a>touchgfx::Font::getFontHeight() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font13getFontHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[185]"></a>touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const &rArr; touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[18a]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[18b]"></a>touchgfx::Font::getByteAlignRow() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[184]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[183]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[186]"></a>touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</STRONG> (Thumb, 138 bytes, Stack size 144 bytes, font.o(i._ZNK8touchgfx4Font15getSpacingAboveEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[187]"></a>touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 148 bytes, Stack size 144 bytes, font.o(i._ZNK8touchgfx4Font16getMaxTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[18d]"></a>touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</STRONG> (Thumb, 86 bytes, Stack size 136 bytes, font.o(i._ZNK8touchgfx4Font16getNumberOfLinesEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const &rArr; touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[409]"></a>touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const</STRONG> (Thumb, 94 bytes, Stack size 128 bytes, font.o(i._ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[189]"></a>touchgfx::Font::getMinimumTextHeight() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1fe]"></a>touchgfx::Font::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv))
<BR>[Address Reference Count : 2]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[182]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, constfont.o(i._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[38f]"></a>touchgfx::Rect::operator &(const touchgfx::Rect&) const</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::drawLine(const touchgfx::Rect&, short, short, short, short, touchgfx::colortype, unsigned char) const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[175]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, image.o(i._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[174]"></a>touchgfx::Image::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 312 bytes, Stack size 72 bytes, image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Image::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 3]<UL><LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[303]"></a>touchgfx::Texts::getText(unsigned short) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx5Texts7getTextEt))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextHeight()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight()
</UL>

<P><STRONG><a name="[3ec]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3ef]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3ee]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3eb]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getData() const
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3c2]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3ed]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3c3]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[196]"></a>touchgfx::Button::getSolidRect() const</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, button.o(i._ZNK8touchgfx6Button12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Button::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[1ff]"></a>touchgfx::Button::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 330 bytes, Stack size 64 bytes, button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Button::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[3fe]"></a>touchgfx::CWRUtil::Q5::round() const</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, graphelements.o(i._ZNK8touchgfx7CWRUtil2Q55roundEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::draw(const touchgfx::Rect&) const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridX::draw(const touchgfx::Rect&) const
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>

<P><STRONG><a name="[85]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::scrollWheelSelectedItemHandler()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElementCenter::setupElement(unsigned short, TEXTS)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;languageSelectorElement::setupElement(unsigned short, TEXTS)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::updateSelectedImage(unsigned char)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::TextAreaAddStr(unsigned char*, unsigned)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::scrollListClickHandler(short)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkList::setupElement(unsigned short, TEXTS)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::ShowData()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::handleTickEvent()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::invalidateScrollbars()
</UL>
<BR>[Address Reference Count : 33]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[87]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 38]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[84]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 38]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[39a]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[88]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 38]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridXE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[226]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[227]"></a>touchgfx::LCD16bpp::framebufferStride() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::framebufferStride() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1e3]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[22c]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::getTextWidth() const
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1e6]"></a>touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 230 bytes, Stack size 160 bytes, textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[22a]"></a>touchgfx::TextArea::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 210 bytes, Stack size 80 bytes, textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = touchgfx::TextArea::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[40a]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, constfont.o(i._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const
</UL>

<P><STRONG><a name="[181]"></a>touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[83]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, container.o(i._ZNK8touchgfx9Container12getSolidRectEv))
<BR>[Address Reference Count : 22]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[82]"></a>touchgfx::Container::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Container::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 22]<UL><LI> languageselectorelementcenter.o(.constdata__ZTV29languageSelectorElementCenter)
<LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> languageselectorelement.o(.constdata__ZTV23languageSelectorElement)
<LI> networklist.o(.constdata__ZTV11NetworkList)
<LI> notification.o(.constdata__ZTV12Notification)
<LI> languageselectorelementbase.o(.constdata__ZTV27languageSelectorElementBase)
<LI> languageselectorelementcenterbase.o(.constdata__ZTV33languageSelectorElementCenterBase)
<LI> networklistbase.o(.constdata__ZTV15NetworkListBase)
<LI> notificationbase.o(.constdata__ZTV16NotificationBase)
<LI> screen2viewbase.o(.constdata__ZTVN8touchgfx21GraphWrapAndOverwriteILs50EEE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawablelist.o(.constdata__ZTVN8touchgfx12DrawableListE)
<LI> graphwrapandoverwrite.o(.constdata__ZTVN8touchgfx25DataGraphWrapAndOverwriteE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> scrolllist.o(.constdata__ZTVN8touchgfx10ScrollListE)
<LI> scrollwheelwithselectionstyle.o(.constdata__ZTVN8touchgfx29ScrollWheelWithSelectionStyleE)
<LI> scrollwheelbase.o(.constdata__ZTVN8touchgfx15ScrollWheelBaseE)
<LI> scrollablecontainer.o(.constdata__ZTVN8touchgfx19ScrollableContainerE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[326]"></a>touchgfx::TypedText::assertValid() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fontcache.o(i._ZNK8touchgfx9TypedText11assertValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBase::NotificationBase()
</UL>

<P><STRONG><a name="[323]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, screen2viewbase.o(i._ZNK8touchgfx9TypedText7getTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TypedText::getText() const
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2ViewBase::Screen2ViewBase()
</UL>

<P><STRONG><a name="[40b]"></a>__0printf$5</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4a5]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[2ab]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Init
</UL>

<P><STRONG><a name="[40d]"></a>__0sprintf$5</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf5.o(i.__0sprintf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4a6]"></a>__1sprintf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0sprintf$5), UNUSED)

<P><STRONG><a name="[307]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0sprintf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::handleTickEvent()
</UL>

<P><STRONG><a name="[367]"></a>__ARM_common_memcpy4_8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i.__ARM_common_memcpy4_8))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ()
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::transmitRemainingBlocks()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PartialFrameBufferManager::tryTransmitBlock()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::draw(const touchgfx::Rect&) const
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::getYScrollbar() const
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::getXScrollbar() const
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScrollableContainer::invalidateScrollbars()
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[2f3]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuViewBase::NetworkMenuViewBase()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewBase::ListViewBase()
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[2c4]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_30_4bpp()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_20_4bpp()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_14_4bpp()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_20_4bpp()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_14_4bpp()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_10_4bpp()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Amiri_Regular_22_4bpp()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Amiri_Regular_18_2bpp()
</UL>

<P><STRONG><a name="[154]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 11]<UL><LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
<LI> scrollbase.o(.constdata__ZTVN8touchgfx10ScrollBaseE)
</UL>
<P><STRONG><a name="[4a7]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4a8]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4a9]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[345]"></a>bsp_ns2009_getPos</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ns2009.o(i.bsp_ns2009_getPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = bsp_ns2009_getPos &rArr; ns2009_read &rArr; HAL_I2C_Master_Receive &rArr; I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns2009_read
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_ns2009_getPress
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::sampleTouch(int&, int&)
</UL>

<P><STRONG><a name="[411]"></a>bsp_ns2009_getPress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ns2009.o(i.bsp_ns2009_getPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bsp_ns2009_getPress &rArr; ns2009_read &rArr; HAL_I2C_Master_Receive &rArr; I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ns2009_read
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_ns2009_getPos
</UL>

<P><STRONG><a name="[414]"></a>bsp_ns2009_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ns2009.o(i.bsp_ns2009_init))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[247]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[52]"></a>main</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = main &rArr; MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Process
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_ns2009_init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASH_Init
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[245]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[412]"></a>ns2009_read</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ns2009.o(i.ns2009_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ns2009_read &rArr; HAL_I2C_Master_Receive &rArr; I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_ns2009_getPress
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_ns2009_getPos
</UL>

<P><STRONG><a name="[287]"></a>toggle_led</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.toggle_led))
<BR><BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[3a0]"></a>touchgfxDisplayDriverShouldTransferBlock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, st7789.o(i.touchgfxDisplayDriverShouldTransferBlock))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::shouldTransferBlock(unsigned short)
</UL>

<P><STRONG><a name="[388]"></a>touchgfxDisplayDriverTransmitActive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, st7789.o(i.touchgfxDisplayDriverTransmitActive))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::transmitActive()
</UL>

<P><STRONG><a name="[386]"></a>touchgfxDisplayDriverTransmitBlock</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, st7789.o(i.touchgfxDisplayDriverTransmitBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_DrawImage
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[286]"></a>touchgfxTickHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, touchgfxhal.o(i.touchgfxTickHandler))
<BR><BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[2a2]"></a>touchgfx_init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i.touchgfx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx_init &rArr; FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::Application::Application() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[2a4]"></a>touchgfx_taskEntry</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i.touchgfx_taskEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx_taskEntry &rArr; touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::isVSyncAvailable()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Process
</UL>

<P><STRONG><a name="[176]"></a>touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, imageviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[41c]"></a>touchgfx::MoveAnimator&lang;touchgfx::Image&rang;::nextMoveAnimationStep()</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, imageviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
</UL>

<P><STRONG><a name="[37a]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, texts.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[180]"></a>touchgfx::ClickListener&lang;touchgfx::Image&rang;::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, screen1viewbase.o(t._ZN8touchgfx13ClickListenerINS_5ImageEE16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ClickListener&lang;touchgfx::Image&rang;::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx13ClickListenerINS_5ImageEEE)
</UL>
<P><STRONG><a name="[34d]"></a>T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[34e]"></a>T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen2View::Screen2View() &rArr; Screen2ViewBase::Screen2ViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2View::Screen2View()
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen2Presenter::Screen2Presenter(Screen2View&)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[34f]"></a>T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI15DebugWindowView20DebugWindowPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; DebugWindowView::DebugWindowView() &rArr; DebugWindowViewBase::DebugWindowViewBase() &rArr; touchgfx::ScrollableContainer::ScrollableContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowPresenter::DebugWindowPresenter(DebugWindowView&)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugWindowView::DebugWindowView()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoDebugWindowScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[350]"></a>T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI15NetworkMenuView20NetworkMenuPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; NetworkMenuView::NetworkMenuView() &rArr; NetworkMenuViewBase::NetworkMenuViewBase() &rArr; Notification::Notification() &rArr; NotificationBase::NotificationBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuView::NetworkMenuView()
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkMenuPresenter::NetworkMenuPresenter(NetworkMenuView&)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoNetworkMenuScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[34b]"></a>T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI8ListView13ListPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; ListView::ListView() &rArr; ListViewBase::ListViewBase() &rArr; touchgfx::ScrollWheelWithSelectionStyle::setDrawableSize(short, short) &rArr; touchgfx::ScrollWheelWithSelectionStyle::refreshDrawableListsLayout() &rArr; touchgfx::DrawableList::setDrawables(touchgfx::DrawableListItemsInterface&, short, touchgfx::GenericCallback&lang;touchgfx::DrawableListItemsInterface*, short, short&rang;&) &rArr; touchgfx::DrawableList::refreshDrawables() &rArr; touchgfx::DrawableList::setOffset(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListView::ListView()
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListPresenter::ListPresenter(ListView&)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoListScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[34c]"></a>T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI9ImageView14ImagePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; ImageView::ImageView() &rArr; ImageViewBase::ImageViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageView::ImageView()
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImagePresenter::ImagePresenter(ImageView&)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoImageScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[41d]"></a>T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[1ab]"></a>touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::getDrawable(short)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, networkmenuview.o(t._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EE11getDrawableEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::getDrawable(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI11NetworkListLi2EEE)
</UL>
<P><STRONG><a name="[1ac]"></a>touchgfx::DrawableListItems&lang;NetworkList, (int)2&rang;::getNumberOfDrawables()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, networkmenuview.o(t._ZN8touchgfx17DrawableListItemsI11NetworkListLi2EE20getNumberOfDrawablesEv))
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI11NetworkListLi2EEE)
</UL>
<P><STRONG><a name="[1ae]"></a>touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::getDrawable(short)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, listview.o(t._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EE11getDrawableEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::getDrawable(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EEE)
</UL>
<P><STRONG><a name="[1af]"></a>touchgfx::DrawableListItems&lang;languageSelectorElement, (int)4&rang;::getNumberOfDrawables()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, listview.o(t._ZN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EE20getNumberOfDrawablesEv))
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI23languageSelectorElementLi4EEE)
</UL>
<P><STRONG><a name="[1b1]"></a>touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::getDrawable(short)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, listview.o(t._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EE11getDrawableEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::getDrawable(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EEE)
</UL>
<P><STRONG><a name="[1b2]"></a>touchgfx::DrawableListItems&lang;languageSelectorElementCenter, (int)2&rang;::getNumberOfDrawables()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, listview.o(t._ZN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EE20getNumberOfDrawablesEv))
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTVN8touchgfx17DrawableListItemsI29languageSelectorElementCenterLi2EEE)
</UL>
<P><STRONG><a name="[1bc]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::allocateBlock(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char**)</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE13allocateBlockEttttPPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::allocateBlock(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char**)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FrameBufferAllocatorWaitOnTransfer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
</UL>
<P><STRONG><a name="[1c1]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::hasEmptyBlock()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE13hasEmptyBlockEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
</UL>
<P><STRONG><a name="[1bf]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::getBlockForTransfer(touchgfx::Rect&)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE19getBlockForTransferERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::getBlockForTransfer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
</UL>
<P><STRONG><a name="[1c0]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::peekBlockForTransfer()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE20peekBlockForTransferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::peekBlockForTransfer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
</UL>
<P><STRONG><a name="[1c2]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::freeBlockAfterTransfer()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE22freeBlockAfterTransferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::freeBlockAfterTransfer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
</UL>
<P><STRONG><a name="[1be]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::hasBlockReadyForTransfer()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE24hasBlockReadyForTransferEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
</UL>
<P><STRONG><a name="[1bd]"></a>touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::markBlockReadyForTransfer()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(t._ZN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EE25markBlockReadyForTransferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ManyBlockAllocator&lang;(unsigned)2048, (unsigned)6, (unsigned)2&rang;::markBlockReadyForTransfer()
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FrameBufferAllocatorSignalBlockDrawn()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTVN8touchgfx18ManyBlockAllocatorILj2048ELj6ELj2EEE)
</UL>
<P><STRONG><a name="[1ea]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::handlePressedUpdated()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, imageview.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv))
<BR>[Address Reference Count : 1]<UL><LI> imageview.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[300]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, screen1viewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageViewBase::ImageViewBase()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4aa]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, screen1viewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev), UNUSED)

<P><STRONG><a name="[204]"></a>touchgfx::Callback&lang;Screen1View, const touchgfx::Image&, const touchgfx::ClickEvent&, void&rang;::execute(const touchgfx::Image&, const touchgfx::ClickEvent&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screen1view.o(t._ZN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7executeES4_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;Screen1View, const touchgfx::Image&, const touchgfx::ClickEvent&, void&rang;::execute(const touchgfx::Image&, const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTVN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvEE)
</UL>
<P><STRONG><a name="[206]"></a>touchgfx::Callback&lang;ListViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::execute(touchgfx::DrawableListItemsInterface*, short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, listviewbase.o(t._ZN8touchgfx8CallbackI12ListViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Callback&lang;ListViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::execute(touchgfx::DrawableListItemsInterface*, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12ListViewBasePNS_26DrawableListItemsInterfaceEssEE)
</UL>
<P><STRONG><a name="[208]"></a>touchgfx::Callback&lang;ListViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, listviewbase.o(t._ZN8touchgfx8CallbackI12ListViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;ListViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12ListViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[20a]"></a>touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, imageviewbase.o(t._ZN8touchgfx8CallbackI13ImageViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13ImageViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[20c]"></a>touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, imageviewbase.o(t._ZN8touchgfx8CallbackI13ImageViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13ImageViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[20e]"></a>touchgfx::Callback&lang;NetworkMenuView, short, void, void&rang;::execute(short)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, networkmenuview.o(t._ZN8touchgfx8CallbackI15NetworkMenuViewsvvE7executeEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;NetworkMenuView, short, void, void&rang;::execute(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTVN8touchgfx8CallbackI15NetworkMenuViewsvvEE)
</UL>
<P><STRONG><a name="[210]"></a>touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screen1viewbase.o(t._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[212]"></a>touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screen1viewbase.o(t._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[214]"></a>touchgfx::Callback&lang;Screen2ViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screen2viewbase.o(t._ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;Screen2ViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[216]"></a>touchgfx::Callback&lang;NotificationBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, notificationbase.o(t._ZN8touchgfx8CallbackI16NotificationBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;NotificationBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notificationbase.o(.constdata__ZTVN8touchgfx8CallbackI16NotificationBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[218]"></a>touchgfx::Callback&lang;DebugWindowViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, debugwindowviewbase.o(t._ZN8touchgfx8CallbackI19DebugWindowViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;DebugWindowViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19DebugWindowViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[21a]"></a>touchgfx::Callback&lang;NetworkMenuViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::execute(touchgfx::DrawableListItemsInterface*, short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, networkmenuviewbase.o(t._ZN8touchgfx8CallbackI19NetworkMenuViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Callback&lang;NetworkMenuViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::execute(touchgfx::DrawableListItemsInterface*, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19NetworkMenuViewBasePNS_26DrawableListItemsInterfaceEssEE)
</UL>
<P><STRONG><a name="[21c]"></a>touchgfx::Callback&lang;NetworkMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, networkmenuviewbase.o(t._ZN8touchgfx8CallbackI19NetworkMenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;NetworkMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19NetworkMenuViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[21e]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[349]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoDebugWindowScreenNoTransition()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoNetworkMenuScreenNoTransition()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen2ScreenNoTransition()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoImageScreenNoTransition()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoListScreenNoTransition()
</UL>

<P><STRONG><a name="[4ab]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE), UNUSED)

<P><STRONG><a name="[220]"></a>touchgfx::Callback&lang;ListView, void, void, void&rang;::execute()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, listview.o(t._ZN8touchgfx8CallbackI8ListViewvvvE7executeEv))
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTVN8touchgfx8CallbackI8ListViewvvvEE)
</UL>
<P><STRONG><a name="[22d]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;DebugWindowView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI15DebugWindowViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI15DebugWindowViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[22e]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;DebugWindowView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI15DebugWindowViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI15DebugWindowViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[22f]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;DebugWindowPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20DebugWindowPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20DebugWindowPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[230]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;DebugWindowPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20DebugWindowPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20DebugWindowPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[231]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[232]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[205]"></a>touchgfx::Callback&lang;Screen1View, const touchgfx::Image&, const touchgfx::ClickEvent&, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, screen1view.o(t._ZNK8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTVN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvEE)
</UL>
<P><STRONG><a name="[207]"></a>touchgfx::Callback&lang;ListViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, listviewbase.o(t._ZNK8touchgfx8CallbackI12ListViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12ListViewBasePNS_26DrawableListItemsInterfaceEssEE)
</UL>
<P><STRONG><a name="[209]"></a>touchgfx::Callback&lang;ListViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, listviewbase.o(t._ZNK8touchgfx8CallbackI12ListViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> listviewbase.o(.constdata__ZTVN8touchgfx8CallbackI12ListViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[20b]"></a>touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, imageviewbase.o(t._ZNK8touchgfx8CallbackI13ImageViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13ImageViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[20d]"></a>touchgfx::Callback&lang;ImageViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, imageviewbase.o(t._ZNK8touchgfx8CallbackI13ImageViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> imageviewbase.o(.constdata__ZTVN8touchgfx8CallbackI13ImageViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[20f]"></a>touchgfx::Callback&lang;NetworkMenuView, short, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, networkmenuview.o(t._ZNK8touchgfx8CallbackI15NetworkMenuViewsvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> networkmenuview.o(.constdata__ZTVN8touchgfx8CallbackI15NetworkMenuViewsvvEE)
</UL>
<P><STRONG><a name="[211]"></a>touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, screen1viewbase.o(t._ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[213]"></a>touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, screen1viewbase.o(t._ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[215]"></a>touchgfx::Callback&lang;Screen2ViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, screen2viewbase.o(t._ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screen2viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[217]"></a>touchgfx::Callback&lang;NotificationBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, notificationbase.o(t._ZNK8touchgfx8CallbackI16NotificationBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> notificationbase.o(.constdata__ZTVN8touchgfx8CallbackI16NotificationBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[219]"></a>touchgfx::Callback&lang;DebugWindowViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, debugwindowviewbase.o(t._ZNK8touchgfx8CallbackI19DebugWindowViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> debugwindowviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19DebugWindowViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[21b]"></a>touchgfx::Callback&lang;NetworkMenuViewBase, touchgfx::DrawableListItemsInterface*, short, short&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, networkmenuviewbase.o(t._ZNK8touchgfx8CallbackI19NetworkMenuViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19NetworkMenuViewBasePNS_26DrawableListItemsInterfaceEssEE)
</UL>
<P><STRONG><a name="[21d]"></a>touchgfx::Callback&lang;NetworkMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, networkmenuviewbase.o(t._ZNK8touchgfx8CallbackI19NetworkMenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> networkmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19NetworkMenuViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[21f]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[221]"></a>touchgfx::Callback&lang;ListView, void, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, listview.o(t._ZNK8touchgfx8CallbackI8ListViewvvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.constdata__ZTVN8touchgfx8CallbackI8ListViewvvvEE)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2b8]"></a>ST7789_SetAddressWindow</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, st7789.o(i.ST7789_SetAddressWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteData
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_DrawImage
</UL>

<P><STRONG><a name="[2ba]"></a>ST7789_WriteCommand</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, st7789.o(i.ST7789_WriteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ST7789_WriteCommand &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_SetRotation
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_SetAddressWindow
</UL>

<P><STRONG><a name="[2bc]"></a>ST7789_WriteData</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, st7789.o(i.ST7789_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_SetAddressWindow
</UL>

<P><STRONG><a name="[2bb]"></a>ST7789_WriteSmallData</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, st7789.o(i.ST7789_WriteSmallData))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ST7789_WriteSmallData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_SetRotation
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_Init
</UL>

<P><STRONG><a name="[29b]"></a>MX_GPIO_Init</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29d]"></a>MX_I2C1_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(i.MX_I2C1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = MX_I2C1_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a0]"></a>MX_SPI1_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a5]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a6]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29a]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_Flush_TXDR))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>

<P><STRONG><a name="[299]"></a>I2C_IsErrorOccurred</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, stm32l4xx_hal_i2c.o(i.I2C_IsErrorOccurred))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
</UL>

<P><STRONG><a name="[257]"></a>I2C_TransferConfig</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[256]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[258]"></a>I2C_WaitOnRXNEFlagUntilTimeout</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[259]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[25b]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>

<P><STRONG><a name="[26e]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[26a]"></a>RCCEx_PLLSAI1_Config</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[250]"></a>DMA_SetConfig</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, stm32l4xx_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[266]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[269]"></a>QSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm32l4xx_hal_qspi.o(i.QSPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
</UL>

<P><STRONG><a name="[55]"></a>SPI_DMAAbortOnError</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_IRQHandler)
</UL>
<P><STRONG><a name="[58]"></a>SPI_DMAError</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[56]"></a>SPI_DMAHalfTransmitCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAHalfTransmitCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[57]"></a>SPI_DMATransmitCplt</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.SPI_DMATransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = SPI_DMATransmitCplt &rArr; HAL_SPI_TxCpltCallback &rArr; DisplayDriver_TransferCompleteCallback &rArr; touchgfx::PartialFrameBufferManager::tryTransmitBlockFromIRQ() &rArr; touchgfx::transmitBlock(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; touchgfxDisplayDriverTransmitBlock &rArr; ST7789_DrawImage &rArr; ST7789_SetAddressWindow &rArr; ST7789_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[277]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[2b5]"></a>SPI_WaitFifoStateUntilTimeout</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, stm32l4xx_hal_spi.o(i.SPI_WaitFifoStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[2b6]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, stm32l4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[59]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[289]"></a>UART_EndRxTransfer</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>

<P><STRONG><a name="[5b]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_RxISR_16BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT)
</UL>
<P><STRONG><a name="[5a]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_RxISR_8BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT)
</UL>
<P><STRONG><a name="[233]"></a>__sti___25_TouchGFXConfiguration_cpp_f5abfd34</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __sti___25_TouchGFXConfiguration_cpp_f5abfd34 &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[234]"></a>__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i.__sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __sti___24_TouchGFXGeneratedHAL_cpp_c8c66d90 &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.init_array)
</UL>
<P><STRONG><a name="[396]"></a>touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[398]"></a>touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ImageView, ImagePresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;ListView, ListPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;NetworkMenuView, NetworkMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;DebugWindowView, DebugWindowPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen2View, Screen2Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[235]"></a>__sti___21_typedtextdatabase_cpp_05ec7672</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp_05ec7672))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = __sti___21_typedtextdatabase_cpp_05ec7672 &rArr; getFont_Amiri_Regular_18_2bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_30_4bpp()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_20_4bpp()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_NanumGothic_14_4bpp()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_20_4bpp()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_14_4bpp()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_10_4bpp()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Amiri_Regular_22_4bpp()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Amiri_Regular_18_2bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[236]"></a>__sti___15_Application_cpp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, application.o(i.__sti___15_Application_cpp))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.init_array)
</UL>
<P><STRONG><a name="[237]"></a>__sti___7_LCD_cpp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.__sti___7_LCD_cpp))
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.init_array)
</UL>
<P><STRONG><a name="[40c]"></a>_printf_core</STRONG> (Thumb, 658 bytes, Stack size 104 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$5
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>

<P><STRONG><a name="[66]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf5.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0sprintf$5)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
