#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_chinese_msyh_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0029, parenright], Kerning dist = 1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x002A, asterisk], Kerning dist = -2)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0058,  1 },  // (First char = [0x0058, X], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x006B,  1 },  // (First char = [0x006B, k], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x002E, period], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002E, period], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x002E, period], Kerning dist = -3)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x002E, period], Kerning dist = -1)
    { 0x006B,  1 },  // (First char = [0x006B, k], Second char = [0x002E, period], Kerning dist = 1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002E, period], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x002E, period], Kerning dist = -1)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x002E, period], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x006B,  1 },  // (First char = [0x006B, k], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x0052,  1 },  // (First char = [0x0052, R], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x0058,  1 },  // (First char = [0x0058, X], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x006B,  1 },  // (First char = [0x006B, k], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x003F, question], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x0041, A], Kerning dist = 1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -1)
    { 0x2018, -2 },  // (First char = [0x2018, quoteleft], Second char = [0x0041, A], Kerning dist = -2)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x0041, A], Kerning dist = -1)
    { 0x201C, -2 },  // (First char = [0x201C, quotedblleft], Second char = [0x0041, A], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -1)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0047, G], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x004A, J], Kerning dist = 1)
    { 0x0045,  1 },  // (First char = [0x0045, E], Second char = [0x004A, J], Kerning dist = 1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x004A, J], Kerning dist = -1)
    { 0x004B,  1 },  // (First char = [0x004B, K], Second char = [0x004A, J], Kerning dist = 1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x004A, J], Kerning dist = 1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0058,  1 },  // (First char = [0x0058, X], Second char = [0x004A, J], Kerning dist = 1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004A, J], Kerning dist = -1)
    { 0x005A,  1 },  // (First char = [0x005A, Z], Second char = [0x004A, J], Kerning dist = 1)
    { 0x0063,  1 },  // (First char = [0x0063, c], Second char = [0x004A, J], Kerning dist = 1)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x004A, J], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x004A, J], Kerning dist = -1)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x004A, J], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0054, T], Kerning dist = -1)
    { 0x2018,  1 },  // (First char = [0x2018, quoteleft], Second char = [0x0054, T], Kerning dist = 1)
    { 0x2019,  1 },  // (First char = [0x2019, quoteright], Second char = [0x0054, T], Kerning dist = 1)
    { 0x201C,  1 },  // (First char = [0x201C, quotedblleft], Second char = [0x0054, T], Kerning dist = 1)
    { 0x201D,  1 },  // (First char = [0x201D, quotedblright], Second char = [0x0054, T], Kerning dist = 1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x005A, Z], Kerning dist = 1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x005A, Z], Kerning dist = 1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x005D, bracketright], Kerning dist = 1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -2)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x0061, a], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -2)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x0063, c], Kerning dist = -1)
    { 0x2019, -2 },  // (First char = [0x2019, quoteright], Second char = [0x0063, c], Kerning dist = -2)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x0063, c], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -2)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x0064, d], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x0064, d], Kerning dist = -1)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x0064, d], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0064, d], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -2)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x0065, e], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x0065, e], Kerning dist = -1)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x0065, e], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0066, f], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -2)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x0067, g], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x0067, g], Kerning dist = -1)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x0067, g], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0028,  2 },  // (First char = [0x0028, parenleft], Second char = [0x006A, j], Kerning dist = 2)
    { 0x005B,  2 },  // (First char = [0x005B, bracketleft], Second char = [0x006A, j], Kerning dist = 2)
    { 0x0071,  1 },  // (First char = [0x0071, q], Second char = [0x006A, j], Kerning dist = 1)
    { 0x007B,  2 },  // (First char = [0x007B, braceleft], Second char = [0x006A, j], Kerning dist = 2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x006E, n], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -2)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x006F, o], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x006F, o], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -2)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -1)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x0073, s], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x0073, s], Kerning dist = -1)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x0073, s], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0074, t], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0076, v], Kerning dist = 1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0077, w], Kerning dist = 1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0078, x], Kerning dist = 1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0079, y], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x007D, braceright], Kerning dist = 1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E0, agrave], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00E0, agrave], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00E0, agrave], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00E0, agrave], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00E0, agrave], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E1, aacute], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00E1, aacute], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00E1, aacute], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00E1, aacute], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00E1, aacute], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00E8, egrave], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00E8, egrave], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00E9, eacute], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00E9, eacute], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00EA, ecircumflex], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00EA, ecircumflex], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F2, ograve], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00F2, ograve], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F3, oacute], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00F3, oacute], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x2018, quoteleft], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x2018, quoteleft], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x2018, quoteleft], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x2018, quoteleft], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x2018, quoteleft], Kerning dist = 1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x2018, quoteleft], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x2018, quoteleft], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x2018, quoteleft], Kerning dist = 1)
    { 0x2018, -1 },  // (First char = [0x2018, quoteleft], Second char = [0x2018, quoteleft], Kerning dist = -1)
    { 0x2026, -2 },  // (First char = [0x2026, ellipsis], Second char = [0x2018, quoteleft], Kerning dist = -2)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x2019, quoteright], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x2019, quoteright], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x2019, quoteright], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x2019, quoteright], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x2019, quoteright], Kerning dist = 1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x2019, quoteright], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x2019, quoteright], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x2019, quoteright], Kerning dist = 1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x2019, quoteright], Kerning dist = -1)
    { 0x2026, -2 },  // (First char = [0x2026, ellipsis], Second char = [0x2019, quoteright], Kerning dist = -2)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x201C, quotedblleft], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x201C, quotedblleft], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x201C, quotedblleft], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x201C, quotedblleft], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x201C, quotedblleft], Kerning dist = 1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x201C, quotedblleft], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x201C, quotedblleft], Kerning dist = 1)
    { 0x2026, -2 },  // (First char = [0x2026, ellipsis], Second char = [0x201C, quotedblleft], Kerning dist = -2)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x201D, quotedblright], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x201D, quotedblright], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x201D, quotedblright], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x201D, quotedblright], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x201D, quotedblright], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x201D, quotedblright], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x2026, -2 },  // (First char = [0x2026, ellipsis], Second char = [0x201D, quotedblright], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x2026, ellipsis], Kerning dist = -3)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x2026, ellipsis], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x2026, ellipsis], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x2026, ellipsis], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x006B,  1 },  // (First char = [0x006B, k], Second char = [0x2026, ellipsis], Kerning dist = 1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x2019, -1 },  // (First char = [0x2019, quoteright], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x201C, -1 },  // (First char = [0x201C, quotedblleft], Second char = [0x2026, ellipsis], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x2026, ellipsis], Kerning dist = -1)
};
